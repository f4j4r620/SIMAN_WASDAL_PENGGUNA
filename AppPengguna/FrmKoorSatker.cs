using System;
using System.Collections;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraBars;
using System.Threading;
using DevExpress.XtraReports.UI;
using DevExpress.XtraBars.Helpers;
using DevExpress.LookAndFeel;
using DevExpress.XtraReports.Parameters;
using AppPengguna.KSK.WL;
using DevExpress.XtraPrinting;
using AppPengguna.KSK.WL.PEMANFAATAN;
using AppPengguna.KSK.WL.PENGHAPUSAN;
using AppPengguna.KSK.PENERTIBAN;
using AppPengguna.RSK;
using AppPengguna.PU;
using AppPengguna.KSK.RSK;
using System.IO;
using System.Data.SqlClient;
using AppPengguna.Properties;
using System.Globalization;
using System.Diagnostics;

namespace AppPengguna
{
    public delegate void NonAktifkanFormSatker(string str);
    public delegate void AktifkanFormSatker(string str);
    public delegate void ProgBar(BarItemVisibility str);
    public partial class FrmKoorSatker : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        public int lebarNavigasi = 0;

       
        private SvcWasdalHapusLapWasdalMSK.lapWasdalMSK_pttClient svcLapPenghapusan = null;
        private SvcWasdalHapusLapWasdalMSK.OutputParameters outLapPenghapusan = null;

        Thread myThread = null;
        private char modeCrud = 'A';
        private string teksDialog = "";
        private bool modeCari = false;

        ArrayList dataGrid;
		private decimal dataAwal = 1;
		private decimal dataAkhir = 20;
		private decimal currentMaks = 20;
		private decimal currentMin = 1;
		public bool dataInisial = true;
		private bool adaData = false;
		private bool masihAdaData = true;
		private int? nilaiProgress = 0;
		private string strCari = "";
		private string modeLoadData = "normal"; //normal atau cari atau ganti_kiword
        private string bySatker = " (ID_SATKER = " + konfigApp.idSatker + " OR ID_SATKER_PARENT = " + konfigApp.idSatker + ") ";
        private string kdPelayanan = "";
        private string kdMenu = "";
        private decimal? tahunAnggaran;
       
        
        //KSK.WL.PENGGUNAAN.penggunaan xrlapwasdal;

        public FrmKoorSatker()
        {
            InitializeComponent();
            initSkin();
            lebarNavigasi = sccSatker.SplitterPosition;
            bsiMenu.Caption = "";
            DataLokal dtLokal = new DataLokal();
            dtLokal.CheckDb();
            Icon = Properties.Resources.logo_2016;
        }

        private void inisialisasiForm()
        {
            this.Text = "Sistem Informasi Manajemen Aset Negara|Koordinator Satker";
            bsiUser.Caption = "User: " + konfigApp.namaUser;
            bsiGroup.Caption = "Group: " + konfigApp.namaGroup;
            bsiMenu.Caption = "Menu: " + konfigApp.strMenu +">"+ konfigApp.strSubMenu;
            bsiUser.Caption = "Login sbg: " + konfigApp.namaUser + " ";
            bsiNmSatker.Caption = "Satker: [" + konfigApp.kodeSatker + "]" + konfigApp.namaSatker + " ";
            konfigApp.kdMenu = "011";

            System.Reflection.Assembly assembly = System.Reflection.Assembly.GetExecutingAssembly();
            FileVersionInfo fvi = FileVersionInfo.GetVersionInfo(assembly.Location);
            Text += " | v" + fvi.FileVersion;

            rpMonitoringWasdal.Visible = false;
            rpPspBmn.Visible = false;
            rpPspBmnDpl.Visible = false;
            rpPnbp.Visible = false;
            rpRekamSK.Visible = false;
            rpRkmTindakLanjut.Visible = false;
            rpRkmPnbp.Visible = false;
            rpPenertibanBMN.Visible = false;
            rpKelola.Visible = false;
            panelKoorSatker.Controls.Clear();
        }

        public void setPanel(UserControl uc)
        {
            uc.Dock = DockStyle.Fill;
            panelKoorSatker.Controls.Clear();
            panelKoorSatker.Controls.Add(uc);
        }

        public void initSkin()
        {
            DevExpress.UserSkins.BonusSkins.Register();
            DevExpress.XtraBars.Helpers.SkinHelper.InitSkinGallery(ribbonGallerySkins, true);
            UserLookAndFeel.Default.SetSkinStyle(Settings.Default.appTheme);
        }

        #region Pengaturan Thread untuk kesetabilan Aplikasi
        public void progBar(BarItemVisibility str)
        {
            if (this.InvokeRequired)
            {
                ProgBar d = new ProgBar(progBar);
                this.Invoke(d, new object[] { str });
            }
            else
            {
                this.beMarqueeBar.Visibility = str;
            }
            if (str == DevExpress.XtraBars.BarItemVisibility.Never)
            {
                try
                {
                    this.Enabled = true;
                }
                catch (Exception)
                {
                    
                }
            }
        }

        public void ShowProgresBar()
        {
            this.progBar(BarItemVisibility.Always);
        }

        
        public delegate void AktifkanForm(string str);

        public void aktifkanForm(string str)
        {
            this.Enabled = true;
            try
            {
                this.Cursor = Cursors.Default;
            }
            catch (Exception)
            {
                
            }
        }
        public void fToggleProgressBar(string kondisi)
        {
            if (kondisi == "start")
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
            }
            else
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
            }
        }
        #endregion

        private void FrmKoorSatker_Load(object sender, EventArgs e)
        { 
            this.inisialisasiForm();
            //this.tampilkanDashboard();
            this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
            UserLookAndFeel.Default.SetSkinStyle(this.GetSkin().Name.ToString());
            this.nbiPersediaan.Enabled = false;
            DevExpress.UserSkins.OfficeSkins.Register();
            DevExpress.UserSkins.BonusSkins.Register();
            SkinHelper.InitSkinGallery(ribbonGallerySkins, true);

            if (konfigApp.initRef == "Y")
            {
                Reference Ref = new Reference();
                Ref.Size = new System.Drawing.Size(0, 0);
                Ref.Opacity = 0;
                Ref.Show();
                Ref.Hide();
                //Ref.getinitKondisi();
                konfigApp.initRef = "N";
            }
        }

        private void nbcNavigasi_NavPaneStateChanged(object sender, EventArgs e)
        {
            if (nbcNavigasi.OptionsNavPane.NavPaneState.ToString() == "Expanded")
            {
                sccSatker.SplitterPosition = lebarNavigasi;
                sccSatker.IsSplitterFixed = false;
            }
            else
            {
                sccSatker.SplitterPosition = 55;
                sccSatker.IsSplitterFixed = true;
            }
        }

        private void bbiKeluarAplikasi_ItemClick(object sender, ItemClickEventArgs e)
        {
            Settings.Default["appTheme"] = GetSkin().Name.ToString();
            Settings.Default.Save();
            this.Close();
        }

        private void FrmKoorSatker_FormClosing(object sender, FormClosingEventArgs e)
        {
            Settings.Default["appTheme"] = GetSkin().Name.ToString();
            Settings.Default.Save();
        }

        public void nonAktifkanForm(string str)
        {
            this.Cursor = Cursors.WaitCursor;
            this.Enabled = false;
        }

        #region Monitoring Wasdal TINDAK LANJUT

        #region SET TOMBOL
        private string menuMonWasdal = "Monitoring Pengawasan dan Pengendalian";
        private string menuLapWasdal = "Laporan Pengawasan dan Pengendalian";
        private string menuRekamTlWasdal = "Perekaman Tindak Lanjut Pengawasan dan Pengendalian";
        private string menuRekamPnbpWasdal = "Perekaman PNBP Pengawasan dan Pengendalian";
        private string menuMonLapWasdal = "Monitoring Wasdal";
        private string subMenuMonPSPBMN = "Penetapan Status Penggunaan BMN";
        private string subMenuMonPSPBMNLAIN = "Dioperasikan Pihak Lain";
        private string subMenuMonASPBMN = "Alih Status Penggunaan BMN";
        private string subMenuMonPBMNS = "Penggunaan Sementara BMN";
        private string subMenuMonSWBMN = "Sewa BMN";
        private string subMenuMonPPBMN = "Pinjam Pakai BMN";
        private string subMenuMonKPBMN = "Kerjasama Pemanfaatan BMN";
        private string subMenuMonBSG = "KSPI";
        private string subMenuMonBGS = "KSPI";
        private string subMenuMonPenjualan = "Penjualan BMN";
        private string subMenuMonBongkaran = "Bongkaran";
        private string subMenuMonHibah = "Hibah BMN";
        private string subMenuMonTukar = "Tukar-Menukar BMN";
        private string subMenuMonMusnah = "Pemusnahan BMN";
        private string subMenuMonPengadilan = "Penghapusan BMN karena Putusan Pengadilan";
        private string subMenuMonHapusLain = "Penghapusan BMN karena Sebab-sebab Lain";
        private string subMenuMonModal = "Penyertaan Modal Pemerintah";
        private string subMenuMonGuna = "Monitoring Penggunaan BMN";
        private string subMenuMonManfaat = "Monitoring Pemanfaatan BMN";
        private string subMenuMonPindahTgn = "Monitoring Pemindahtanganan BMN";
        private string subMenuMonHapus = "Monitoring Penghapusan BMN";
        private string subMenuLapGuna = "Laporan Penggunaan BMN";
        private string subMenuLapManfaat = "Laporan Pemanfaatan BMN";
        private string subMenuLapPindahTgn = "Laporan Pemindahtanganan BMN";
        private string subMenuLapPenertiban = "Laporan Penertiban BMN";

        private string subMenuLapWasdal = "Laporan Wasdal";
        private string subMenuMonWasdal = "Monitoring Wasdal";

        private void resetEventButtonMonWasdal()
        {
            konfigApp.RemoveClickEvent(this.bbiMWasdalTutup);
            konfigApp.RemoveClickEvent(this.bbiMWasdalPrint);
            konfigApp.RemoveClickEvent(this.bbiMWasdalRefresh);
            konfigApp.RemoveClickEvent(this.bbiMWasdalMore);
            konfigApp.RemoveClickEvent(this.barMonWasdalExcel);
                   }

      

        private void setGridMonWasdal(string menu, string submenu)
        {
            konfigApp.strMenu = menu;
            konfigApp.strSubMenu = submenu;
            //this.inisialisasiForm();
            this.rpMonitoringWasdal.Text = konfigApp.strSubMenu;
            this.rpgMonitoringWasdal.Text = konfigApp.strSubMenu;
            this.rpMonitoringWasdal.Visible = true;
            this.ribbon.SelectedPage = this.rpMonitoringWasdal;
            this.modeLoadData = "normal";
            this.strCari = "";
            this.dataInisial = true;
            this.adaData = false;
            this.masihAdaData = true;
            
        }

        private void SetBarMonitoringWasdal(string subMenu)
        {

            konfigApp.strSubMenu = subMenu;
            this.inisialisasiForm();
            this.rpMonitoringWasdal.Text = konfigApp.strMenu;
            this.rpgMonitoringWasdal.Text = konfigApp.strMenu;
            this.rpMonitoringWasdal.Visible = true;
            this.ribbon.SelectedPage = this.rpMonitoringWasdal;
            this.modeLoadData = "normal";
            this.strCari = "";
            this.dataInisial = true;
            this.adaData = false;
            this.masihAdaData = true;
        }
        private void SetBarNameLaporanWasdal(string subMenu)
        {
            konfigApp.strMenu = "Laporan Wasdal";
            SetBarMonitoringWasdal(subMenu.Replace("RPMK",""));
        }

        private void SetBarNameMonitoringWasdal(string subMenu)
        {
            konfigApp.strMenu = "Monitoring Wasdal";
            SetBarMonitoringWasdal(subMenu);
        }

        public void setEnabledButtonMWasdal(string item, bool enabled)
        {
            BarButtonItem btnMonWl = null;
            switch (item)
            {
                case "Refresh":
                    btnMonWl = bbiMWasdalRefresh;
                    break;
                case "More":
                    btnMonWl = bbiMWasdalMore;
                    break;
                case "Print":
                    btnMonWl = bbiMWasdalPrint;
                    break;
                case "Tutup":
                    btnMonWl = bbiMWasdalTutup;
                    break;
                case "Export To Excel":
                    btnMonWl = barMonWasdalExcel; 
                    break;
            }
            btnMonWl.Enabled = enabled;
        }

        public void setTombolMWasdal(bool status)
        {
            this.bbiMWasdalTutup.Enabled = false;
        }

        #endregion

        KSK.MWD.PSPBMN.ucPSPBMN MonPSPBMN;
        KSK.MWD.PSPBMN.ucMonLAIN MonLain;

        #region PSPBMN

        private void setEventButtonMWasdalPSPBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNTutup);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWLPSPBMExportExcel);
            
        }

        public void initGridMonWlPSPBMN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalPSPBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPSPBMN);

            this.MonPSPBMN = new KSK.MWD.PSPBMN.ucPSPBMN(this);
            MonPSPBMN.nameTab1 = "BMN Sudah PSP";
            MonPSPBMN.nameTab2 = "BMN Belum PSP";
            MonPSPBMN.strKdPelayanan = "AND (KD_PELAYANAN = '02')";
            this.setPanel(this.MonPSPBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPSPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPSPBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPSPBMN()
        {

        }

        private void mWlPSPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            if (MonPSPBMN.xtcPSP.SelectedTabPageIndex == 0)
            {

                #region PSP SUDAH JADI

                if (MonPSPBMN.xtbDetail1.SelectedTabPageIndex == 0)
                {
                  MonPSPBMN.tindakLanjut1.dataInisial = true;
                  MonPSPBMN.tindakLanjut1.getTindakLanjut();
                }
                #endregion
            }
            else
            {
                #region PSP BELUM JADI
                if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 0)
                {
                    MonPSPBMN.tanah2.dataInisial = true;
                        MonPSPBMN.tanah2.getTanah();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 1)
                {
                    MonPSPBMN.bangunan2.dataInisial = true;
                    MonPSPBMN.bangunan2.getBangunan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 2)
                {
                        MonPSPBMN.rmhNgr2.dataInisial = true;

                    MonPSPBMN.rmhNgr2.getRmhNgr();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 3)
                {
                    MonPSPBMN.angkutan2.dataInisial = true;
                    MonPSPBMN.angkutan2.getAngkutan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 4)
                {
                        MonPSPBMN.bangunanAir2.dataInisial = true;

                    MonPSPBMN.bangunanAir2.getBangunanAir();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 5)
                {
                    MonPSPBMN.senjata2.dataInisial = true;
                    MonPSPBMN.senjata2.getSenjata();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 6)
                {
                    MonPSPBMN.mesinNonTik2.dataInisial = true;
                    MonPSPBMN.mesinNonTik2.getMesinNonTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 7)
                {
                    MonPSPBMN.jlnJmbtn2.dataInisial = true;
                    MonPSPBMN.jlnJmbtn2.getJlnJmbtn();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 8)
                {
                    MonPSPBMN.propSus2.dataInisial = true;
                    MonPSPBMN.propSus2.getPropSus();    
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 9)
                {
                    MonPSPBMN.ATL2.dataInisial = true;
                    MonPSPBMN.ATL2.getATL();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 10)
                {
                   MonPSPBMN.mesinTik2.dataInisial = true;
                   MonPSPBMN.mesinTik2.getMesinTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 11)
                {
                    MonPSPBMN.ATB2.dataInisial = true;

                    MonPSPBMN.ATB2.getATB();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 12)
                {
                    MonPSPBMN.KDP2.dataInisial = true;
                    MonPSPBMN.KDP2.getKDP();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 13)
                {
                    MonPSPBMN.renovasi2.dataInisial = true;
                    MonPSPBMN.renovasi2.getRenovasi();
                }
                #endregion
            }
        }

        private void mWlPSPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MonPSPBMN.xtcPSP.SelectedTabPageIndex == 0)
            {

                #region PSP SUDAH JADI

                if (MonPSPBMN.xtbDetail1.SelectedTabPageIndex == 0)
                {
                    if (MonPSPBMN.tindakLanjut1.modeLoadData == "normal" || MonPSPBMN.tindakLanjut1.modeLoadData == "cari")
                        MonPSPBMN.tindakLanjut1.dataInisial = false;

                    MonPSPBMN.tindakLanjut1.getTindakLanjut();
                }
                #endregion
            }
            else
            {
                #region PSP BELUM JADI
                if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 0)
                {
                    if (MonPSPBMN.tanah2.modeLoadData == "normal" || MonPSPBMN.tanah2.modeLoadData == "cari")
                        MonPSPBMN.tanah2.dataInisial = false;

                    MonPSPBMN.tanah2.getTanah();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 1)
                {
                    if (MonPSPBMN.bangunan2.modeLoadData == "normal" || MonPSPBMN.bangunan2.modeLoadData == "cari")
                        MonPSPBMN.bangunan2.dataInisial = false;

                    MonPSPBMN.bangunan2.getBangunan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 2)
                {
                    if (MonPSPBMN.rmhNgr2.modeLoadData == "normal" || MonPSPBMN.rmhNgr2.modeLoadData == "cari")
                        MonPSPBMN.rmhNgr2.dataInisial = false;

                    MonPSPBMN.rmhNgr2.getRmhNgr();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 3)
                {
                    if (MonPSPBMN.angkutan2.modeLoadData == "normal" || MonPSPBMN.angkutan2.modeLoadData == "cari")
                        MonPSPBMN.angkutan2.dataInisial = false;

                    MonPSPBMN.angkutan2.getAngkutan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 4)
                {
                    if (MonPSPBMN.bangunanAir2.modeLoadData == "normal" || MonPSPBMN.bangunanAir2.modeLoadData == "cari")
                        MonPSPBMN.bangunanAir2.dataInisial = false;

                    MonPSPBMN.bangunanAir2.getBangunanAir();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 5)
                {
                    if (MonPSPBMN.senjata2.modeLoadData == "normal" || MonPSPBMN.senjata2.modeLoadData == "cari")
                        MonPSPBMN.senjata2.dataInisial = false;

                    MonPSPBMN.senjata2.getSenjata();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 6)
                {
                    if (MonPSPBMN.mesinNonTik2.modeLoadData == "normal" || MonPSPBMN.mesinNonTik2.modeLoadData == "cari")
                        MonPSPBMN.mesinNonTik2.dataInisial = false;

                    MonPSPBMN.mesinNonTik2.getMesinNonTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 7)
                {
                    if (MonPSPBMN.jlnJmbtn2.modeLoadData == "normal" || MonPSPBMN.jlnJmbtn2.modeLoadData == "cari")
                        MonPSPBMN.jlnJmbtn2.dataInisial = false;

                    MonPSPBMN.jlnJmbtn2.getJlnJmbtn();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 8)
                {
                    if (MonPSPBMN.propSus2.modeLoadData == "normal" || MonPSPBMN.propSus2.modeLoadData == "cari")
                        MonPSPBMN.propSus2.dataInisial = false;

                    MonPSPBMN.propSus2.getPropSus();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 9)
                {
                    if (MonPSPBMN.ATL2.modeLoadData == "normal" || MonPSPBMN.ATL2.modeLoadData == "cari")
                        MonPSPBMN.ATL2.dataInisial = false;

                    MonPSPBMN.ATL2.getATL();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 10)
                {
                    if (MonPSPBMN.mesinTik2.modeLoadData == "normal" || MonPSPBMN.mesinTik2.modeLoadData == "cari")
                        MonPSPBMN.mesinTik2.dataInisial = false;

                    MonPSPBMN.mesinTik2.getMesinTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 11)
                {
                    if (MonPSPBMN.ATB2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.ATB2.dataInisial = false;

                    MonPSPBMN.ATB2.getATB();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 12)
                {
                    if (MonPSPBMN.KDP2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.KDP2.dataInisial = false;

                    MonPSPBMN.KDP2.getKDP();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 13)
                {
                    if (MonPSPBMN.renovasi2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.renovasi2.dataInisial = false;

                    MonPSPBMN.renovasi2.getRenovasi();
                }
                #endregion
            }



        }

        private void mWlPSPBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MonPSPBMN.xtcPSP.SelectedTabPageIndex == 0)
            {

                #region PSP SUDAH JADI

                if (MonPSPBMN.xtbDetail1.SelectedTabPageIndex == 0)
                {
                    if (MonPSPBMN.tindakLanjut1.modeLoadData == "normal" || MonPSPBMN.tindakLanjut1.modeLoadData == "cari")
                        MonPSPBMN.tindakLanjut1.dataInisial = false;

                    MonPSPBMN.tindakLanjut1.getTindakLanjut();
                }
                #endregion
            }
            else
            {
                #region PSP BELUM JADI
                if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 0)
                {
                    if (MonPSPBMN.tanah2.modeLoadData == "normal" || MonPSPBMN.tanah2.modeLoadData == "cari")
                        MonPSPBMN.tanah2.dataInisial = false;

                    MonPSPBMN.tanah2.getTanah();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 1)
                {
                    if (MonPSPBMN.bangunan2.modeLoadData == "normal" || MonPSPBMN.bangunan2.modeLoadData == "cari")
                        MonPSPBMN.bangunan2.dataInisial = false;

                    MonPSPBMN.bangunan2.getBangunan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 2)
                {
                    if (MonPSPBMN.rmhNgr2.modeLoadData == "normal" || MonPSPBMN.rmhNgr2.modeLoadData == "cari")
                        MonPSPBMN.rmhNgr2.dataInisial = false;

                    MonPSPBMN.rmhNgr2.getRmhNgr();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 3)
                {
                    if (MonPSPBMN.angkutan2.modeLoadData == "normal" || MonPSPBMN.angkutan2.modeLoadData == "cari")
                        MonPSPBMN.angkutan2.dataInisial = false;

                    MonPSPBMN.angkutan2.getAngkutan();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 4)
                {
                    if (MonPSPBMN.bangunanAir2.modeLoadData == "normal" || MonPSPBMN.bangunanAir2.modeLoadData == "cari")
                        MonPSPBMN.bangunanAir2.dataInisial = false;

                    MonPSPBMN.bangunanAir2.getBangunanAir();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 5)
                {
                    if (MonPSPBMN.senjata2.modeLoadData == "normal" || MonPSPBMN.senjata2.modeLoadData == "cari")
                        MonPSPBMN.senjata2.dataInisial = false;

                    MonPSPBMN.senjata2.getSenjata();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 6)
                {
                    if (MonPSPBMN.mesinNonTik2.modeLoadData == "normal" || MonPSPBMN.mesinNonTik2.modeLoadData == "cari")
                        MonPSPBMN.mesinNonTik2.dataInisial = false;

                    MonPSPBMN.mesinNonTik2.getMesinNonTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 7)
                {
                    if (MonPSPBMN.jlnJmbtn2.modeLoadData == "normal" || MonPSPBMN.jlnJmbtn2.modeLoadData == "cari")
                        MonPSPBMN.jlnJmbtn2.dataInisial = false;

                    MonPSPBMN.jlnJmbtn2.getJlnJmbtn();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 8)
                {
                    if (MonPSPBMN.propSus2.modeLoadData == "normal" || MonPSPBMN.propSus2.modeLoadData == "cari")
                        MonPSPBMN.propSus2.dataInisial = false;

                    MonPSPBMN.propSus2.getPropSus();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 9)
                {
                    if (MonPSPBMN.ATL2.modeLoadData == "normal" || MonPSPBMN.ATL2.modeLoadData == "cari")
                        MonPSPBMN.ATL2.dataInisial = false;

                    MonPSPBMN.ATL2.getATL();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 10)
                {
                    if (MonPSPBMN.mesinTik2.modeLoadData == "normal" || MonPSPBMN.mesinTik2.modeLoadData == "cari")
                        MonPSPBMN.mesinTik2.dataInisial = false;

                    MonPSPBMN.mesinTik2.getMesinTik();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 11)
                {
                    if (MonPSPBMN.ATB2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.ATB2.dataInisial = false;

                    MonPSPBMN.ATB2.getATB();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 12)
                {
                    if (MonPSPBMN.KDP2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.KDP2.dataInisial = false;

                    MonPSPBMN.KDP2.getKDP();
                }
                else if (MonPSPBMN.xtbDetail2.SelectedTabPageIndex == 13)
                {
                    if (MonPSPBMN.renovasi2.modeLoadData == "normal" || MonPSPBMN.ATB2.modeLoadData == "cari")
                        MonPSPBMN.renovasi2.dataInisial = false;

                    MonPSPBMN.renovasi2.getRenovasi();
                }
                #endregion
            }
        }

        private void mWlPSPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void mWLPSPBMExportExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if(MonPSPBMN.xtcPSP.SelectedTabPageIndex == 0)
            {
                MonPSPBMN.ExportToExcel(MonPSPBMN.xtcPSP.SelectedTabPageIndex,MonPSPBMN.xtbDetail1.SelectedTabPageIndex);
            }else{
                MonPSPBMN.ExportToExcel(MonPSPBMN.xtcPSP.SelectedTabPageIndex, MonPSPBMN.xtbDetail2.SelectedTabPageIndex);
            }
        }
        #endregion

        #region PSPBMNLAIN
        KSK.MWD.PSPBMNLAIN.ucPSPBMNLAIN MonPSPBMNLAIN;

        private void setEventButtonMWasdalPSPBMNLAIN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNLAINRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNLAINMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNLAINPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPSPBMNLAINTutup);
        }

        public void initGridMonWlPSPBMNLAIN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalPSPBMNLAIN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPSPBMNLAIN);

            this.MonPSPBMNLAIN = new KSK.MWD.PSPBMNLAIN.ucPSPBMNLAIN(this);
            MonPSPBMNLAIN.strKdPelayanan = "AND (KD_PELAYANAN = '03')";
            //MonPSPBMNLAIN.strKdPelayanan = "AND ((KD_STATUS <> '01') OR (KD_STATUS <> '02'))";
            MonPSPBMNLAIN.nameTab1 = "BMN Sudah PSP";
            MonPSPBMNLAIN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonPSPBMNLAIN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPSPBMNLAIN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPSPBMNLAIN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPSPBMNLAIN()
        {

        }

        private void mWlPSPBMNLAINRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPSPBMNLAIN();
        }

        private void mWlPSPBMNLAINMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonPSPBMNLAIN.tindakLanjut1.modeLoadData == "normal" || MonPSPBMNLAIN.tindakLanjut1.modeLoadData == "cari")
                    MonPSPBMNLAIN.tindakLanjut1.dataInisial = false;

                MonPSPBMNLAIN.tindakLanjut1.getTindakLanjut();
            }
            //if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonPSPBMNLAIN.tanah1.modeLoadData == "normal" || MonPSPBMNLAIN.tanah1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.tanah1.dataInisial = false;

            //    MonPSPBMNLAIN.tanah1.getTanah();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonPSPBMNLAIN.bangunan1.modeLoadData == "normal" || MonPSPBMNLAIN.bangunan1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.bangunan1.dataInisial = false;

            //    MonPSPBMNLAIN.bangunan1.getBangunan();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonPSPBMNLAIN.rmhNgr1.modeLoadData == "normal" || MonPSPBMNLAIN.rmhNgr1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.rmhNgr1.dataInisial = false;

            //    MonPSPBMNLAIN.rmhNgr1.getRmhNgr();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonPSPBMNLAIN.angkutan1.modeLoadData == "normal" || MonPSPBMNLAIN.angkutan1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.angkutan1.dataInisial = false;

            //    MonPSPBMNLAIN.angkutan1.getAngkutan();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonPSPBMNLAIN.bangunanAir1.modeLoadData == "normal" || MonPSPBMNLAIN.bangunanAir1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.bangunanAir1.dataInisial = false;

            //    MonPSPBMNLAIN.bangunanAir1.getBangunanAir();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonPSPBMNLAIN.senjata1.modeLoadData == "normal" || MonPSPBMNLAIN.senjata1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.senjata1.dataInisial = false;

            //    MonPSPBMNLAIN.senjata1.getSenjata();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonPSPBMNLAIN.mesinNonTik1.modeLoadData == "normal" || MonPSPBMNLAIN.mesinNonTik1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.mesinNonTik1.dataInisial = false;

            //    MonPSPBMNLAIN.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonPSPBMNLAIN.jlnJmbtn1.modeLoadData == "normal" || MonPSPBMNLAIN.jlnJmbtn1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.jlnJmbtn1.dataInisial = false;

            //    MonPSPBMNLAIN.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonPSPBMNLAIN.propSus1.modeLoadData == "normal" || MonPSPBMNLAIN.propSus1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.propSus1.dataInisial = false;

            //    MonPSPBMNLAIN.propSus1.getPropSus();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonPSPBMNLAIN.ATL1.modeLoadData == "normal" || MonPSPBMNLAIN.ATL1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.ATL1.dataInisial = false;

            //    MonPSPBMNLAIN.ATL1.getATL();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonPSPBMNLAIN.mesinTik1.modeLoadData == "normal" || MonPSPBMNLAIN.mesinTik1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.mesinTik1.dataInisial = false;

            //    MonPSPBMNLAIN.mesinTik1.getMesinTik();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonPSPBMNLAIN.ATB1.modeLoadData == "normal" || MonPSPBMNLAIN.ATB1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.ATB1.dataInisial = false;

            //    MonPSPBMNLAIN.ATB1.getATB();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonPSPBMNLAIN.KDP1.modeLoadData == "normal" || MonPSPBMNLAIN.ATB1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.KDP1.dataInisial = false;

            //    MonPSPBMNLAIN.KDP1.getKDP();
            //}
            //else if (MonPSPBMNLAIN.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonPSPBMNLAIN.renovasi1.modeLoadData == "normal" || MonPSPBMNLAIN.ATB1.modeLoadData == "cari")
            //        MonPSPBMNLAIN.renovasi1.dataInisial = false;

            //    MonPSPBMNLAIN.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlPSPBMNLAINPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            
        }

        private void mWlPSPBMNLAINTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region ASPBMN
        KSK.MWD.ASPBMN.ucASPBMN MonASPBMN;

        private void setEventButtonMWasdalASPBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlASPBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlASPBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlASPBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlASPBMNTutup);
        }

        public void initGridMonWlASPBMN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalASPBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonASPBMN);

            this.MonASPBMN = new KSK.MWD.ASPBMN.ucASPBMN(this);
            MonASPBMN.strKdPelayanan = "AND (KD_PELAYANAN = '04')";
            //MonASPBMN.strKdPelayanan = "";
            MonASPBMN.nameTab1 = "BMN Sudah PSP";
            MonASPBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonASPBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalASPBMNLAIN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlASPBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalASPBMN()
        {

        }

        private void mWlASPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlASPBMN();
        }

        private void mWlASPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonASPBMN.tindakLanjut1.modeLoadData == "normal" || MonASPBMN.tindakLanjut1.modeLoadData == "cari")
                    MonASPBMN.tindakLanjut1.dataInisial = false;

                MonASPBMN.tindakLanjut1.getTindakLanjut();
            }
            //if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonASPBMN.tanah1.modeLoadData == "normal" || MonASPBMN.tanah1.modeLoadData == "cari")
            //        MonASPBMN.tanah1.dataInisial = false;

            //    MonASPBMN.tanah1.getTanah();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonASPBMN.bangunan1.modeLoadData == "normal" || MonASPBMN.bangunan1.modeLoadData == "cari")
            //        MonASPBMN.bangunan1.dataInisial = false;

            //    MonASPBMN.bangunan1.getBangunan();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonASPBMN.rmhNgr1.modeLoadData == "normal" || MonASPBMN.rmhNgr1.modeLoadData == "cari")
            //        MonASPBMN.rmhNgr1.dataInisial = false;

            //    MonASPBMN.rmhNgr1.getRmhNgr();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonASPBMN.angkutan1.modeLoadData == "normal" || MonASPBMN.angkutan1.modeLoadData == "cari")
            //        MonASPBMN.angkutan1.dataInisial = false;

            //    MonASPBMN.angkutan1.getAngkutan();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonASPBMN.bangunanAir1.modeLoadData == "normal" || MonASPBMN.bangunanAir1.modeLoadData == "cari")
            //        MonASPBMN.bangunanAir1.dataInisial = false;

            //    MonASPBMN.bangunanAir1.getBangunanAir();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonASPBMN.senjata1.modeLoadData == "normal" || MonASPBMN.senjata1.modeLoadData == "cari")
            //        MonASPBMN.senjata1.dataInisial = false;

            //    MonASPBMN.senjata1.getSenjata();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonASPBMN.mesinNonTik1.modeLoadData == "normal" || MonASPBMN.mesinNonTik1.modeLoadData == "cari")
            //        MonASPBMN.mesinNonTik1.dataInisial = false;

            //    MonASPBMN.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonASPBMN.jlnJmbtn1.modeLoadData == "normal" || MonASPBMN.jlnJmbtn1.modeLoadData == "cari")
            //        MonASPBMN.jlnJmbtn1.dataInisial = false;

            //    MonASPBMN.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonASPBMN.propSus1.modeLoadData == "normal" || MonASPBMN.propSus1.modeLoadData == "cari")
            //        MonASPBMN.propSus1.dataInisial = false;

            //    MonASPBMN.propSus1.getPropSus();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonASPBMN.ATL1.modeLoadData == "normal" || MonASPBMN.ATL1.modeLoadData == "cari")
            //        MonASPBMN.ATL1.dataInisial = false;

            //    MonASPBMN.ATL1.getATL();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonASPBMN.mesinTik1.modeLoadData == "normal" || MonASPBMN.mesinTik1.modeLoadData == "cari")
            //        MonASPBMN.mesinTik1.dataInisial = false;

            //    MonASPBMN.mesinTik1.getMesinTik();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonASPBMN.ATB1.modeLoadData == "normal" || MonASPBMN.ATB1.modeLoadData == "cari")
            //        MonASPBMN.ATB1.dataInisial = false;

            //    MonASPBMN.ATB1.getATB();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonASPBMN.KDP1.modeLoadData == "normal" || MonASPBMN.ATB1.modeLoadData == "cari")
            //        MonASPBMN.KDP1.dataInisial = false;

            //    MonASPBMN.KDP1.getKDP();
            //}
            //else if (MonASPBMN.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonASPBMN.renovasi1.modeLoadData == "normal" || MonASPBMN.ATB1.modeLoadData == "cari")
            //        MonASPBMN.renovasi1.dataInisial = false;

            //    MonASPBMN.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlASPBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlASPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region PBMNS
        KSK.MWD.PBMNS.ucPBMNS MonPBMNS;

        private void setEventButtonMWasdalPBMNS()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPBMNSRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPBMNSMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPBMNSPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPBMNSTutup);
        }

        public void initGridMonWlPBMNS()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalPBMNS();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPBMNS);

            this.MonPBMNS = new KSK.MWD.PBMNS.ucPBMNS(this);
            MonPBMNS.strKdPelayanan = "AND (KD_PELAYANAN = '05')";
            //MonPBMNS.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonPBMNS.nameTab1 = "BMN Sudah PSP";
            MonPBMNS.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonPBMNS);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPBMNS_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPBMNS();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPBMNS()
        {

        }

        private void mWlPBMNSRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPBMNS();
        }

        private void mWlPBMNSMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonPBMNS.tindakLanjut1.modeLoadData == "normal" || MonPBMNS.tindakLanjut1.modeLoadData == "cari")
                    MonPBMNS.tindakLanjut1.dataInisial = false;

                MonPBMNS.tindakLanjut1.getTindakLanjut();
            }
            //if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonPBMNS.tanah1.modeLoadData == "normal" || MonPBMNS.tanah1.modeLoadData == "cari")
            //        MonPBMNS.tanah1.dataInisial = false;

            //    MonPBMNS.tanah1.getTanah();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonPBMNS.bangunan1.modeLoadData == "normal" || MonPBMNS.bangunan1.modeLoadData == "cari")
            //        MonPBMNS.bangunan1.dataInisial = false;

            //    MonPBMNS.bangunan1.getBangunan();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonPBMNS.rmhNgr1.modeLoadData == "normal" || MonPBMNS.rmhNgr1.modeLoadData == "cari")
            //        MonPBMNS.rmhNgr1.dataInisial = false;

            //    MonPBMNS.rmhNgr1.getRmhNgr();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonPBMNS.angkutan1.modeLoadData == "normal" || MonPBMNS.angkutan1.modeLoadData == "cari")
            //        MonPBMNS.angkutan1.dataInisial = false;

            //    MonPBMNS.angkutan1.getAngkutan();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonPBMNS.bangunanAir1.modeLoadData == "normal" || MonPBMNS.bangunanAir1.modeLoadData == "cari")
            //        MonPBMNS.bangunanAir1.dataInisial = false;

            //    MonPBMNS.bangunanAir1.getBangunanAir();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonPBMNS.senjata1.modeLoadData == "normal" || MonPBMNS.senjata1.modeLoadData == "cari")
            //        MonPBMNS.senjata1.dataInisial = false;

            //    MonPBMNS.senjata1.getSenjata();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonPBMNS.mesinNonTik1.modeLoadData == "normal" || MonPBMNS.mesinNonTik1.modeLoadData == "cari")
            //        MonPBMNS.mesinNonTik1.dataInisial = false;

            //    MonPBMNS.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonPBMNS.jlnJmbtn1.modeLoadData == "normal" || MonPBMNS.jlnJmbtn1.modeLoadData == "cari")
            //        MonPBMNS.jlnJmbtn1.dataInisial = false;

            //    MonPBMNS.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonPBMNS.propSus1.modeLoadData == "normal" || MonPBMNS.propSus1.modeLoadData == "cari")
            //        MonPBMNS.propSus1.dataInisial = false;

            //    MonPBMNS.propSus1.getPropSus();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonPBMNS.ATL1.modeLoadData == "normal" || MonPBMNS.ATL1.modeLoadData == "cari")
            //        MonPBMNS.ATL1.dataInisial = false;

            //    MonPBMNS.ATL1.getATL();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonPBMNS.mesinTik1.modeLoadData == "normal" || MonPBMNS.mesinTik1.modeLoadData == "cari")
            //        MonPBMNS.mesinTik1.dataInisial = false;

            //    MonPBMNS.mesinTik1.getMesinTik();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonPBMNS.ATB1.modeLoadData == "normal" || MonPBMNS.ATB1.modeLoadData == "cari")
            //        MonPBMNS.ATB1.dataInisial = false;

            //    MonPBMNS.ATB1.getATB();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonPBMNS.KDP1.modeLoadData == "normal" || MonPBMNS.ATB1.modeLoadData == "cari")
            //        MonPBMNS.KDP1.dataInisial = false;

            //    MonPBMNS.KDP1.getKDP();
            //}
            //else if (MonPBMNS.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonPBMNS.renovasi1.modeLoadData == "normal" || MonPBMNS.ATB1.modeLoadData == "cari")
            //        MonPBMNS.renovasi1.dataInisial = false;

            //    MonPBMNS.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlPBMNSPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlPBMNSTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region SWBMN
        KSK.MWD.SWBMN.ucSWBMN MonSWBMN;

        private void setEventButtonMWasdalSWBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlSWBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlSWBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlSWBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlSWBMNTutup);
        }

        private void initGridMonWlSWBMN() 
        {
            this.setEventButtonMWasdalSWBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonSWBMN);

            MonSWBMN = new KSK.MWD.SWBMN.ucSWBMN(this);
            MonSWBMN.strKdPelayanan = "AND (KD_PELAYANAN = '06')";
            MonSWBMN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            
            //MonSWBMN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonSWBMN.nameTab1 = "BMN Sudah PSP";
            MonSWBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonSWBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalSWBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlSWBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalSWBMN()
        {

        }

        private void mWlSWBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlSWBMN();
        }

        private void mWlSWBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI

            if (MonSWBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonSWBMN.tindakLanjut1.modeLoadData == "normal" || MonSWBMN.tindakLanjut1.modeLoadData == "cari")
                    MonSWBMN.tindakLanjut1.dataInisial = false;

                MonSWBMN.tindakLanjut1.getTindakLanjut();
            }
            #endregion
        }

        private void mWlSWBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlSWBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region PPBMN
        KSK.MWD.PPBMN.ucPPBMN MonPPBMN;

        private void setEventButtonMWasdalPPBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPPBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPPBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPPBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPPBMNTutup);
        }

        private void initGridMonWlPPBMN()
        {
            this.setEventButtonMWasdalPPBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPPBMN);
            
            this.MonPPBMN = new KSK.MWD.PPBMN.ucPPBMN(this);
            MonPPBMN.strKdPelayanan = "AND (KD_PELAYANAN = '07')";
            MonPPBMN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            
            //MonPPBMN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonPPBMN.nameTab1 = "BMN Sudah PSP";
            MonPPBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonPPBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPPBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPPBMN()
        {

        }

        private void mWlPPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPPBMN();
        }

        private void mWlPPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonPPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonPPBMN.tindakLanjut1.modeLoadData == "normal" || MonPPBMN.tindakLanjut1.modeLoadData == "cari")
                    MonPPBMN.tindakLanjut1.dataInisial = false;

                MonPPBMN.tindakLanjut1.getTindakLanjut();
            }
            #endregion
        }

        private void mWlPPBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlPPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region KPBMN
        KSK.MWD.KPBMN.ucKPBMN MonKPBMN;

        private void setEventButtonMWasdalKPBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlKPBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlKPBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlKPBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlKPBMNTutup);
        }

        private void initGridMonWlKPBMN()
        {
            this.setEventButtonMWasdalKPBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonKPBMN);
            
            this.MonKPBMN = new KSK.MWD.KPBMN.ucKPBMN(this);
            MonKPBMN.strKdPelayanan = "AND (KD_PELAYANAN = '08')";
            MonKPBMN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            
            //MonKPBMN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonKPBMN.nameTab1 = "BMN Sudah PSP";
            MonKPBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonKPBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalKPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlKPBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalKPBMN()
        {

        }

        private void mWlKPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlKPBMN();
        }

        private void mWlKPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonKPBMN.tindakLanjut1.modeLoadData == "normal" || MonKPBMN.tindakLanjut1.modeLoadData == "cari")
                    MonKPBMN.tindakLanjut1.dataInisial = false;

                MonKPBMN.tindakLanjut1.getTindakLanjut();
            }
            //if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonKPBMN.tanah1.modeLoadData == "normal" || MonKPBMN.tanah1.modeLoadData == "cari")
            //        MonKPBMN.tanah1.dataInisial = false;

            //    MonKPBMN.tanah1.getTanah();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonKPBMN.bangunan1.modeLoadData == "normal" || MonKPBMN.bangunan1.modeLoadData == "cari")
            //        MonKPBMN.bangunan1.dataInisial = false;

            //    MonKPBMN.bangunan1.getBangunan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonKPBMN.rmhNgr1.modeLoadData == "normal" || MonKPBMN.rmhNgr1.modeLoadData == "cari")
            //        MonKPBMN.rmhNgr1.dataInisial = false;

            //    MonKPBMN.rmhNgr1.getRmhNgr();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonKPBMN.angkutan1.modeLoadData == "normal" || MonKPBMN.angkutan1.modeLoadData == "cari")
            //        MonKPBMN.angkutan1.dataInisial = false;

            //    MonKPBMN.angkutan1.getAngkutan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonKPBMN.bangunanAir1.modeLoadData == "normal" || MonKPBMN.bangunanAir1.modeLoadData == "cari")
            //        MonKPBMN.bangunanAir1.dataInisial = false;

            //    MonKPBMN.bangunanAir1.getBangunanAir();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonKPBMN.senjata1.modeLoadData == "normal" || MonKPBMN.senjata1.modeLoadData == "cari")
            //        MonKPBMN.senjata1.dataInisial = false;

            //    MonKPBMN.senjata1.getSenjata();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonKPBMN.mesinNonTik1.modeLoadData == "normal" || MonKPBMN.mesinNonTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinNonTik1.dataInisial = false;

            //    MonKPBMN.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonKPBMN.jlnJmbtn1.modeLoadData == "normal" || MonKPBMN.jlnJmbtn1.modeLoadData == "cari")
            //        MonKPBMN.jlnJmbtn1.dataInisial = false;

            //    MonKPBMN.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonKPBMN.propSus1.modeLoadData == "normal" || MonKPBMN.propSus1.modeLoadData == "cari")
            //        MonKPBMN.propSus1.dataInisial = false;

            //    MonKPBMN.propSus1.getPropSus();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonKPBMN.ATL1.modeLoadData == "normal" || MonKPBMN.ATL1.modeLoadData == "cari")
            //        MonKPBMN.ATL1.dataInisial = false;

            //    MonKPBMN.ATL1.getATL();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonKPBMN.mesinTik1.modeLoadData == "normal" || MonKPBMN.mesinTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinTik1.dataInisial = false;

            //    MonKPBMN.mesinTik1.getMesinTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonKPBMN.ATB1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.ATB1.dataInisial = false;

            //    MonKPBMN.ATB1.getATB();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonKPBMN.KDP1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.KDP1.dataInisial = false;

            //    MonKPBMN.KDP1.getKDP();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonKPBMN.renovasi1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.renovasi1.dataInisial = false;

            //    MonKPBMN.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlKPBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlKPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region BGS/BSG
        KSK.MWD.BSG.ucBSG MonBSG;

        private void setEventButtonMWasdalBSG()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlBSGRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlBSGMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlBSGPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlBSGTutup);
        }

        private void initGridMonWlBSG()
        {
            this.setEventButtonMWasdalBSG();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonBSG);
            
            this.MonBSG = new KSK.MWD.BSG.ucBSG(this);
            MonBSG.strKdPelayanan = "AND (KD_PELAYANAN = '10')";
            MonBSG.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            
            //MonBSG.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonBSG.nameTab1 = "BMN Sudah PSP";
            MonBSG.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonBSG);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalBSG_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlBSG();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalBSG()
        {

        }

        private void mWlBSGRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlBSG();
        }

        private void mWlBSGMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonBSG.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonBSG.tindakLanjut1.modeLoadData == "normal" || MonBSG.tindakLanjut1.modeLoadData == "cari")
                    MonKPBMN.tindakLanjut1.dataInisial = false;

                MonBSG.tindakLanjut1.getTindakLanjut();
            }
            //if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonKPBMN.tanah1.modeLoadData == "normal" || MonKPBMN.tanah1.modeLoadData == "cari")
            //        MonKPBMN.tanah1.dataInisial = false;

            //    MonKPBMN.tanah1.getTanah();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonKPBMN.bangunan1.modeLoadData == "normal" || MonKPBMN.bangunan1.modeLoadData == "cari")
            //        MonKPBMN.bangunan1.dataInisial = false;

            //    MonKPBMN.bangunan1.getBangunan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonKPBMN.rmhNgr1.modeLoadData == "normal" || MonKPBMN.rmhNgr1.modeLoadData == "cari")
            //        MonKPBMN.rmhNgr1.dataInisial = false;

            //    MonKPBMN.rmhNgr1.getRmhNgr();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonKPBMN.angkutan1.modeLoadData == "normal" || MonKPBMN.angkutan1.modeLoadData == "cari")
            //        MonKPBMN.angkutan1.dataInisial = false;

            //    MonKPBMN.angkutan1.getAngkutan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonKPBMN.bangunanAir1.modeLoadData == "normal" || MonKPBMN.bangunanAir1.modeLoadData == "cari")
            //        MonKPBMN.bangunanAir1.dataInisial = false;

            //    MonKPBMN.bangunanAir1.getBangunanAir();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonKPBMN.senjata1.modeLoadData == "normal" || MonKPBMN.senjata1.modeLoadData == "cari")
            //        MonKPBMN.senjata1.dataInisial = false;

            //    MonKPBMN.senjata1.getSenjata();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonKPBMN.mesinNonTik1.modeLoadData == "normal" || MonKPBMN.mesinNonTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinNonTik1.dataInisial = false;

            //    MonKPBMN.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonKPBMN.jlnJmbtn1.modeLoadData == "normal" || MonKPBMN.jlnJmbtn1.modeLoadData == "cari")
            //        MonKPBMN.jlnJmbtn1.dataInisial = false;

            //    MonKPBMN.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonKPBMN.propSus1.modeLoadData == "normal" || MonKPBMN.propSus1.modeLoadData == "cari")
            //        MonKPBMN.propSus1.dataInisial = false;

            //    MonKPBMN.propSus1.getPropSus();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonKPBMN.ATL1.modeLoadData == "normal" || MonKPBMN.ATL1.modeLoadData == "cari")
            //        MonKPBMN.ATL1.dataInisial = false;

            //    MonKPBMN.ATL1.getATL();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonKPBMN.mesinTik1.modeLoadData == "normal" || MonKPBMN.mesinTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinTik1.dataInisial = false;

            //    MonKPBMN.mesinTik1.getMesinTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonKPBMN.ATB1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.ATB1.dataInisial = false;

            //    MonKPBMN.ATB1.getATB();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonKPBMN.KDP1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.KDP1.dataInisial = false;

            //    MonKPBMN.KDP1.getKDP();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonKPBMN.renovasi1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.renovasi1.dataInisial = false;

            //    MonKPBMN.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlBSGPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlBSGTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region KSPI
        KSK.MWD.BGS.ucBGS MonBGS;

        private void setEventButtonMWasdalBGS()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlBGSRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlBGSMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlBGSPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlBGSTutup);
        }

        private void initGridMonWlBGS()
        {
            this.setEventButtonMWasdalBGS();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonBGS);
            
            this.MonBGS = new KSK.MWD.BGS.ucBGS(this);
            MonBGS.strKdPelayanan = "AND KD_PELAYANAN = '09'";
            MonBGS.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonBGS.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonBGS.nameTab1 = "BMN Sudah PSP";
            MonBGS.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonBGS);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true); 
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalBGS_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlBGS();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalBGS()
        {

        }

        private void mWlBGSRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlBGS();
        }

        private void mWlBGSMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonBGS.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonBGS.tindakLanjut1.modeLoadData == "normal" || MonBGS.tindakLanjut1.modeLoadData == "cari")
                    MonBGS.tindakLanjut1.dataInisial = false;

                MonBGS.tindakLanjut1.getTindakLanjut();
            }
            //if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 0)
            //{
            //    if (MonKPBMN.tanah1.modeLoadData == "normal" || MonKPBMN.tanah1.modeLoadData == "cari")
            //        MonKPBMN.tanah1.dataInisial = false;

            //    MonKPBMN.tanah1.getTanah();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 1)
            //{
            //    if (MonKPBMN.bangunan1.modeLoadData == "normal" || MonKPBMN.bangunan1.modeLoadData == "cari")
            //        MonKPBMN.bangunan1.dataInisial = false;

            //    MonKPBMN.bangunan1.getBangunan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 2)
            //{
            //    if (MonKPBMN.rmhNgr1.modeLoadData == "normal" || MonKPBMN.rmhNgr1.modeLoadData == "cari")
            //        MonKPBMN.rmhNgr1.dataInisial = false;

            //    MonKPBMN.rmhNgr1.getRmhNgr();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 3)
            //{
            //    if (MonKPBMN.angkutan1.modeLoadData == "normal" || MonKPBMN.angkutan1.modeLoadData == "cari")
            //        MonKPBMN.angkutan1.dataInisial = false;

            //    MonKPBMN.angkutan1.getAngkutan();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 4)
            //{
            //    if (MonKPBMN.bangunanAir1.modeLoadData == "normal" || MonKPBMN.bangunanAir1.modeLoadData == "cari")
            //        MonKPBMN.bangunanAir1.dataInisial = false;

            //    MonKPBMN.bangunanAir1.getBangunanAir();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 5)
            //{
            //    if (MonKPBMN.senjata1.modeLoadData == "normal" || MonKPBMN.senjata1.modeLoadData == "cari")
            //        MonKPBMN.senjata1.dataInisial = false;

            //    MonKPBMN.senjata1.getSenjata();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 6)
            //{
            //    if (MonKPBMN.mesinNonTik1.modeLoadData == "normal" || MonKPBMN.mesinNonTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinNonTik1.dataInisial = false;

            //    MonKPBMN.mesinNonTik1.getMesinNonTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 7)
            //{
            //    if (MonKPBMN.jlnJmbtn1.modeLoadData == "normal" || MonKPBMN.jlnJmbtn1.modeLoadData == "cari")
            //        MonKPBMN.jlnJmbtn1.dataInisial = false;

            //    MonKPBMN.jlnJmbtn1.getJlnJmbtn();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 8)
            //{
            //    if (MonKPBMN.propSus1.modeLoadData == "normal" || MonKPBMN.propSus1.modeLoadData == "cari")
            //        MonKPBMN.propSus1.dataInisial = false;

            //    MonKPBMN.propSus1.getPropSus();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 9)
            //{
            //    if (MonKPBMN.ATL1.modeLoadData == "normal" || MonKPBMN.ATL1.modeLoadData == "cari")
            //        MonKPBMN.ATL1.dataInisial = false;

            //    MonKPBMN.ATL1.getATL();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 10)
            //{
            //    if (MonKPBMN.mesinTik1.modeLoadData == "normal" || MonKPBMN.mesinTik1.modeLoadData == "cari")
            //        MonKPBMN.mesinTik1.dataInisial = false;

            //    MonKPBMN.mesinTik1.getMesinTik();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 11)
            //{
            //    if (MonKPBMN.ATB1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.ATB1.dataInisial = false;

            //    MonKPBMN.ATB1.getATB();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 12)
            //{
            //    if (MonKPBMN.KDP1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.KDP1.dataInisial = false;

            //    MonKPBMN.KDP1.getKDP();
            //}
            //else if (MonKPBMN.xtbDetail1.SelectedTabPageIndex == 13)
            //{
            //    if (MonKPBMN.renovasi1.modeLoadData == "normal" || MonKPBMN.ATB1.modeLoadData == "cari")
            //        MonKPBMN.renovasi1.dataInisial = false;

            //    MonKPBMN.renovasi1.getRenovasi();
            //}
            #endregion
        }

        private void mWlBGSPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlBGSTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region PENJUALAN
        KSK.MWD.PENJUALAN.ucPENJUALAN MonPENJUALAN;

        private void setEventButtonMWasdalPENJUALAN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPENJUALANRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPENJUALANMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPENJUALANPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPENJUALANTutup);
        }

        private void initGridMonWlPENJUALAN()
        {
            this.setEventButtonMWasdalPENJUALAN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPenjualan);

            this.MonPENJUALAN = new KSK.MWD.PENJUALAN.ucPENJUALAN(this);
            MonPENJUALAN.strKdPelayanan = "AND (KD_PELAYANAN = '11')";
            MonPENJUALAN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonPENJUALAN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonPENJUALAN.nameTab1 = "BMN Sudah PSP";
            MonPENJUALAN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonPENJUALAN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPENJUALAN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPENJUALAN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPENJUALAN()
        {

        }

        private void mWlPENJUALANRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPENJUALAN();
        }

        private void mWlPENJUALANMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonPENJUALAN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonPENJUALAN.tindakLanjut1.modeLoadData == "normal" || MonPENJUALAN.tindakLanjut1.modeLoadData == "cari")
                    MonPENJUALAN.tindakLanjut1.dataInisial = false;

                MonPENJUALAN.tindakLanjut1.getTindakLanjut();
            }
           
            #endregion
        }

        private void mWlPENJUALANPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlPENJUALANTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region TUKAR
        KSK.MWD.TUKAR.ucTukar MonTUKAR;

        private void setEventButtonMWasdalTUKAR()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlTUKARRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlTUKARMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlTUKARPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlTUKARTutup);
        }

        private void initGridMonWlTUKAR()
        {
            this.setEventButtonMWasdalTUKAR();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonTukar);

            this.MonTUKAR = new KSK.MWD.TUKAR.ucTukar(this);
            MonTUKAR.strKdPelayanan = "AND (KD_PELAYANAN = '12')";
            MonTUKAR.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonTUKAR.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonTUKAR.nameTab1 = "BMN Sudah PSP";
            MonTUKAR.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonTUKAR);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalTUKAR_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlTUKAR();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalTUKAR()
        {

        }

        private void mWlTUKARRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlTUKAR();
        }

        private void mWlTUKARMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonTUKAR.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonTUKAR.tindakLanjut1.modeLoadData == "normal" || MonTUKAR.tindakLanjut1.modeLoadData == "cari")
                    MonTUKAR.tindakLanjut1.dataInisial = false;

                MonTUKAR.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlTUKARPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlTUKARTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region HIBAH
        KSK.MWD.HIBAH.ucHibah MonHIBAH;

        private void setEventButtonMWasdalHIBAH()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlHIBAHRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlHIBAHMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlHIBAHPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlHIBAHTutup);
        }

        private void initGridMonWlHIBAH()
        {
            this.setEventButtonMWasdalHIBAH();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonHibah);

            this.MonHIBAH = new KSK.MWD.HIBAH.ucHibah(this);
            MonHIBAH.strKdPelayanan = "AND (KD_PELAYANAN = '13')";
            MonHIBAH.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonHIBAH.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonHIBAH.nameTab1 = "BMN Sudah PSP";
            MonHIBAH.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonHIBAH);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalHIBAH_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlHIBAH();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalHIBAH()
        {

        }

        private void mWlHIBAHRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlHIBAH();
        }

        private void mWlHIBAHMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonHIBAH.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonHIBAH.tindakLanjut1.modeLoadData == "normal" || MonHIBAH.tindakLanjut1.modeLoadData == "cari")
                    MonHIBAH.tindakLanjut1.dataInisial = false;

                MonHIBAH.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlHIBAHPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlHIBAHTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region PMBMN
        KSK.MWD.PMBMN.ucPMBMN MonPMBMN;

        private void setEventButtonMWasdalPMBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPMBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPMBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPMBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPMBMNTutup);
        }

        private void initGridMonWlPMBMN()
        {
            this.setEventButtonMWasdalPMBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonModal);

            this.MonPMBMN = new KSK.MWD.PMBMN.ucPMBMN(this);
            MonPMBMN.strKdPelayanan = "AND (KD_PELAYANAN = '14')";
            MonPMBMN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonPMBMN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonPMBMN.nameTab1 = "BMN Sudah PSP";
            MonPMBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonPMBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalPMBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPMBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalPMBMN()
        {

        }

        private void mWlPMBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPMBMN();
        }

        private void mWlPMBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonPMBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonPMBMN.tindakLanjut1.modeLoadData == "normal" || MonPMBMN.tindakLanjut1.modeLoadData == "cari")
                    MonPMBMN.tindakLanjut1.dataInisial = false;

                MonPMBMN.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlPMBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlPMBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region MusnahBMN
        KSK.MWD.MusnahBMN.ucMusnahBMN MonMusnahBMN;

        private void setEventButtonMWasdalMusnahBMN()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlMusnahBMNRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMusnahBMNMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlMusnahBMNPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlMusnahBMNTutup);
        }

        private void initGridMonWlMusnahBMN()
        {
            this.setEventButtonMWasdalMusnahBMN();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonMusnah);

            this.MonMusnahBMN = new KSK.MWD.MusnahBMN.ucMusnahBMN(this);
            MonMusnahBMN.strKdPelayanan = "AND (KD_PELAYANAN = '15')";
            MonMusnahBMN.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonMusnahBMN.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonMusnahBMN.nameTab1 = "BMN Sudah PSP";
            MonMusnahBMN.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonMusnahBMN);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalMusnahBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlMusnahBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalMusnahBMN()
        {

        }

        private void mWlMusnahBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlMusnahBMN();
        }

        private void mWlMusnahBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonMusnahBMN.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonMusnahBMN.tindakLanjut1.modeLoadData == "normal" || MonMusnahBMN.tindakLanjut1.modeLoadData == "cari")
                    MonMusnahBMN.tindakLanjut1.dataInisial = false;

                MonMusnahBMN.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlMusnahBMNPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlMusnahBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region HapusBmnPengadilan
        KSK.MWD.HapusBmnPengadilan.ucHapusBmnPengadilan MonHapusBmnPengadilan;

        private void setEventButtonMWasdalHapusBmnPengadilan()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnPengadilanRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnPengadilanMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnPengadilanPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnPengadilanTutup);
        }

        private void initGridMonWlHapusBmnPengadilan()
        {
            this.setEventButtonMWasdalHapusBmnPengadilan();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonPengadilan);

            this.MonHapusBmnPengadilan = new KSK.MWD.HapusBmnPengadilan.ucHapusBmnPengadilan(this);
            MonHapusBmnPengadilan.strKdPelayanan = "AND (KD_PELAYANAN = '16')";
            MonHapusBmnPengadilan.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonHapusBmnPengadilan.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonHapusBmnPengadilan.nameTab1 = "BMN Sudah PSP";
            MonHapusBmnPengadilan.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonHapusBmnPengadilan);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalHapusBmnPengadilan_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlHapusBmnPengadilan();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalHapusBmnPengadilan()
        {

        }

        private void mWlHapusBmnPengadilanRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlHapusBmnPengadilan();
        }

        private void mWlHapusBmnPengadilanMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonHapusBmnPengadilan.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonHapusBmnPengadilan.tindakLanjut1.modeLoadData == "normal" || MonHapusBmnPengadilan.tindakLanjut1.modeLoadData == "cari")
                    MonHapusBmnPengadilan.tindakLanjut1.dataInisial = false;

                MonHapusBmnPengadilan.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlHapusBmnPengadilanPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlHapusBmnPengadilanTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #region HapusBmnLain
        KSK.MWD.HapusBmnLain.ucHapusBmnLain MonHapusBmnLain;

        private void setEventButtonMWasdalHapusBmnLain()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnLainRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnLainMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnLainPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlHapusBmnLainTutup);
        }

        private void initGridMonWlHapusBmnLain()
        {
            this.setEventButtonMWasdalHapusBmnLain();
            this.setGridMonWasdal(this.menuMonWasdal, this.subMenuMonHapusLain);

            this.MonHapusBmnLain = new KSK.MWD.HapusBmnLain.ucHapusBmnLain(this);
            MonHapusBmnLain.strKdPelayanan = "AND (KD_PELAYANAN = '17')";
            MonHapusBmnLain.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);

            //MonHapusBmnLain.strKdPelayanan = "AND ((KD_STATUS = '03') OR (KD_STATUS = '04') OR (KD_STATUS = '99'))";
            MonHapusBmnLain.nameTab1 = "BMN Sudah PSP";
            MonHapusBmnLain.nameTab2 = "BMN Belum PSP";
            this.setPanel(this.MonHapusBmnLain);

            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void nbiMonitoringWasdalHapusBmnLain_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlHapusBmnLain();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void kembalikeGridMWasdalHapusBmnLain()
        {

        }

        private void mWlHapusBmnLainRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlHapusBmnLain();
        }

        private void mWlHapusBmnLainMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region PSP SUDAH JADI
            if (MonHapusBmnLain.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (MonHapusBmnLain.tindakLanjut1.modeLoadData == "normal" || MonHapusBmnLain.tindakLanjut1.modeLoadData == "cari")
                    MonHapusBmnLain.tindakLanjut1.dataInisial = false;

                MonHapusBmnLain.tindakLanjut1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlHapusBmnLainPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mWlHapusBmnLainTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        #endregion

        #endregion

        #region PEREKAMAN SK

        #region pspbmn

        #region -->> Setting Sifat Tombol
        private void setTombolRskGrid()
        {
            bbiRskTambah.Enabled = true;
            bbiRskUbah.Enabled = true;
            bbiRskHapus.Enabled = true;
            bbiRskDetail.Enabled = true;
            bbiRskKembali.Enabled = true;
            bbiRskRefresh.Enabled = true;
            bbiRskMoreData.Enabled = false;
            bbiRskKembaliGrid.Enabled = false;
        }

        private void setTombolRskForm()
        {
            bbiRskTambah.Enabled = false;
            bbiRskUbah.Enabled = false;
            bbiRskHapus.Enabled = false;
            bbiRskDetail.Enabled = false;
            bbiRskKembali.Enabled = true;
            bbiRskRefresh.Enabled = false;
            bbiRskMoreData.Enabled = false;
            bbiRskKembaliGrid.Enabled = true;
        }

        private void resetEventTombolRsk()
        {
            konfigApp.RemoveClickEvent(bbiRskDetail);
            konfigApp.RemoveClickEvent(bbiRskHapus);
            konfigApp.RemoveClickEvent(bbiRskKembali);
            konfigApp.RemoveClickEvent(bbiRskMoreData);
            konfigApp.RemoveClickEvent(bbiRskRefresh);
            konfigApp.RemoveClickEvent(bbiRskTambah);
            konfigApp.RemoveClickEvent(bbiRskUbah);
            konfigApp.RemoveClickEvent(bbiRskKembaliGrid);
            konfigApp.RemoveClickEvent(bbiExportSk);
        }

        private void bbiRskExportKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (konfigApp.kdPelayanan == "02")
                gridSkPspBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "03")
                gridSkPspBmnDpl.ExportToExcel();
            else if (konfigApp.kdPelayanan == "04")
                gridSkAspBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "05")
                gridSkPsBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "06")
                gridSkSewaBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "07")
                gridSkPpBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "08")
                gridSkKspBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "09")
                gridSkBgs.ExportToExcel();
            else if (konfigApp.kdPelayanan == "10")
                gridSkBsg.ExportToExcel();
            else if (konfigApp.kdPelayanan == "11")
                gridSkPenjualan.ExportToExcel();
            else if (konfigApp.kdPelayanan == "12")
                gridSkTmBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "13")
                gridSkHibah.ExportToExcel();
            else if (konfigApp.kdPelayanan == "14")
                gridSkPmp.ExportToExcel();
            else if (konfigApp.kdPelayanan == "15")
                gridSkMusnahBmn.ExportToExcel();
            else if (konfigApp.kdPelayanan == "16")
                gridSkHapusBmnKpp.ExportToExcel();
            else if (konfigApp.kdPelayanan == "17")
                gridSkHapusBmnKsl.ExportToExcel();

        }
        #endregion

        private bool modeCariRSK = false;
        KSK.RSK.ucRskPspBmnGrid gridSkPspBmn;
        KSK.RSK.ucRskPspBmnForm formSkPspBmnTambah;
        KSK.RSK.ucRskPspBmnForm formSkPspBmnUbah;
        KSK.RSK.ucRskPspBmnForm formSkPspBmnDetail;
        private ArrayList dsGridRskPspBmn;
        SvcWasdalPSPBMNSkSelect.OutputParameters dOutRskPspBmn;
        SvcWasdalPSPBMNSkSelect.execute_pttClient ambilRskPspBmn;

        private void setEventTombolRskPspBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPspBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPspBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPspBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDetailKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPspBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPspBmnMoreDataKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliGridKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPspBmn()
        {
            //if (gridSkPspBmn == null)
            //{
                gridSkPspBmn = new KSK.RSK.ucRskPspBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPspBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskPspBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPspBmn();
            setPanel(gridSkPspBmn);
        }

        #region --++ Tombol Ribbon
        private void bbiRskPspBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan02), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPspBmnTambah == null)
                {
                    formSkPspBmnTambah = new KSK.RSK.ucRskPspBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPspBmn)
                    };
                }
                formSkPspBmnTambah.inisialisasiForm();
                setPanel(formSkPspBmnTambah);
                setTombolRskForm();
            }
        }

        private void bbiRskPspBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmn.dataTerpilih != null)
            {
                if (formSkPspBmnUbah == null)
                {
                    formSkPspBmnUbah = new KSK.RSK.ucRskPspBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPspBmn)
                    };
                }
                formSkPspBmnUbah.dataTerpilih = gridSkPspBmn.dataTerpilih;
                setPanel(formSkPspBmnUbah);
                formSkPspBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPspBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPspBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalPSPBMNCrud.InputParameters parInp = new SvcWasdalPSPBMNCrud.InputParameters();
                        parInp.P_ID_SK_WASDALSpecified = true;
                        parInp.P_ID_SK_WASDAL = gridSkPspBmn.dataTerpilih.ID_SK_WASDAL;
                        parInp.P_ID_PEMOHON = gridSkPspBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPspBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkPspBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPspBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPspBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPspBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPspBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NILAI_PENETAPAN = gridSkPspBmn.dataTerpilih.NILAI_PENETAPAN;
                        parInp.P_NILAI_PENETAPANSpecified = true;
                        parInp.P_NIP_PENANDATANGAN = gridSkPspBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPspBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPspBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPspBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPspBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkPspBmn.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = (gridSkPspBmn.dataTerpilih.THN_ANG=="-")? konfigApp.tahunAnggaran.ToString(): gridSkPspBmn.dataTerpilih.THN_ANG;
                        parInp.P_TIPE_PEMOHON = gridSkPspBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPspBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkPspBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkPspBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkPspBmn.dataTerpilih.UR_SATKER;

                        ambilDataPspBmn = new SvcWasdalPSPBMNCrud.execute_pttClient();
                        ambilDataPspBmn.Open();
                        ambilDataPspBmn.Beginexecute(parInp, new AsyncCallback(cudRskPspBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPspBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmn.dataTerpilih != null)
            {
                if (formSkPspBmnDetail == null)
                {
                    formSkPspBmnDetail = new KSK.RSK.ucRskPspBmnForm("A");
                    formSkPspBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkPspBmnDetail.dataTerpilih = gridSkPspBmn.dataTerpilih;
                setPanel(formSkPspBmnDetail);
                formSkPspBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPspBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        private void bbiRskPspBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPspBmn.teNamaKolom.Text = "";
            gridSkPspBmn.teCari.Text = "";
            gridSkPspBmn.fieldDicari = "";
            gridSkPspBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPspBmn();
        }

        private void bbiRskPspBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPspBmn();
            }
        }

        private void bbiRskPspBmnKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskPspBmnKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = "Perekaman " + konfigApp.namaLayanan02;
            konfigApp.kdPelayanan = "02";
            konfigApp.namaPelayanan = konfigApp.namaLayanan02;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPspBmn();
            modeCariRSK = false;
            gridSkPspBmn.teNamaKolom.Text = "";
            gridSkPspBmn.teCari.Text = "";
            gridSkPspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPspBmn();
        }

        #endregion --++ Tombol Ribbon

        private void nbiPerekamanSK_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = "Perekaman "+konfigApp.namaLayanan02;
            konfigApp.kdPelayanan = "02";
            konfigApp.namaPelayanan = konfigApp.namaLayanan02;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPspBmn();
            modeCariRSK = false;
            gridSkPspBmn.teNamaKolom.Text = "";
            gridSkPspBmn.teCari.Text = "";
            gridSkPspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPspBmn();
        }

        #region --++ Ambil Data PSP BMN
        private void getInitRskPspBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNSkSelect.InputParameters parInp = new SvcWasdalPSPBMNSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND "+
               " (ID_USER={1} "+
                "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) "+
                "OR ID_SATKER = {2} "+
                "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);

                ambilRskPspBmn = new SvcWasdalPSPBMNSkSelect.execute_pttClient();
                //ambilRskPspBmn.Open();
                ambilRskPspBmn.Beginexecute(parInp, new AsyncCallback(getRskPspBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPspBmn(IAsyncResult result)
        {
            try
            {
                dOutRskPspBmn = ambilRskPspBmn.Endexecute(result);
                ambilRskPspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPspBmn(dsRskPspBmn), dOutRskPspBmn);
            }
            catch(Exception ex)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPspBmn(SvcWasdalPSPBMNSkSelect.OutputParameters dataOut);

        private void dsRskPspBmn(SvcWasdalPSPBMNSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData ==konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }
            if (dataInisial == true)
            {
                dsGridRskPspBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskPspBmn.Add(dataOut.SF_READ_WASDAL_PSP[i]);
            }

            gridSkPspBmn.labelTotData.Text = "";
            gridSkPspBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " data dari " + totalData + " data";
            gridSkPspBmn.sbCariOnline.Enabled = !modeCari;
            gridSkPspBmn.dsDataSource = dsGridRskPspBmn;
            gridSkPspBmn.displayData();
            if (modeCariRSK == true)
            {
                string xSatu = gridSkPspBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkPspBmn.teCari.Text.Trim();
                string xTiga = gridSkPspBmn.fieldDicari;
                gridSkPspBmn.gvGridPenertiban.ClearColumnsFilter();
                gridSkPspBmn.teNamaKolom.Text = xSatu;
                gridSkPspBmn.teCari.Text = xDua;
                gridSkPspBmn.fieldDicari = xTiga;
            }
            else
                gridSkPspBmn.gvGridPenertiban.ClearColumnsFilter();
        }

        private void cariDataRskPspBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCariRSK = true;
            dataInisial = initModeCari;
            getInitRskPspBmn();
        }
        #endregion Ambil PSP BMN

        #region --++ Simpan Data PSP BMN
        SvcWasdalPSPBMNCrud.OutputParameters dOutAmbilDataPspBmn;
        SvcWasdalPSPBMNCrud.execute_pttClient ambilDataPspBmn;

        private void simpanDataRskPspBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNCrud.InputParameters parInp = new SvcWasdalPSPBMNCrud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.idSkWasdal : formSkPspBmnUbah.idSkWasdal);
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.idPemohon : formSkPspBmnUbah.idPemohon);
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.rgJenisAset.EditValue.ToString() : formSkPspBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teJabatan.Text.Trim() : formSkPspBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.kodePenerbitSk : formSkPspBmnUbah.kodePenerbitSk);
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.kodePenerbitSkDetail : formSkPspBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnTambah.teNilaiPenetapan.Text)) : (formSkPspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teNipPenandaTangan.Text : formSkPspBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teNamaPenandaTangan.Text : formSkPspBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teNmPenerbitSk.Text: formSkPspBmnUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teNmPenerbitSkDetail.Text : formSkPspBmnUbah.teNmPenerbitSkDetail.Text);
                //parInp.P_FILE_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teFileSk.Text : formSkPspBmnUbah.teFileSk.Text);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkPspBmnTambah.teFileSk.Text) : konfigApp.FileToByteArray(formSkPspBmnUbah.teFileSk.Text ));
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teNomorSk.Text.Trim() : formSkPspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teTanggalSk.EditValue : formSkPspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teTahunAnggaran.Text : formSkPspBmnUbah.teTahunAnggaran.Text);
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teJenisPemohon.Text : formSkPspBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.tipePengelola : formSkPspBmnUbah.tipePengelola); ;//konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnTambah.teUraianKeputusan.Text : formSkPspBmnUbah.teUraianKeputusan.Text);
                
                
                ambilDataPspBmn = new SvcWasdalPSPBMNCrud.execute_pttClient();
                ambilDataPspBmn.Beginexecute(parInp, new AsyncCallback(cudRskPspBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudRskPspBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPspBmn = ambilDataPspBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPspBmn(this.ubahDsPspBmn), dOutAmbilDataPspBmn);
                
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPspBmn(SvcWasdalPSPBMNCrud.OutputParameters dataOutKpknlCrud);

        int _yangkeBerapa = 0;

        private void ubahDsPspBmn(SvcWasdalPSPBMNCrud.OutputParameters dataOutKpknlCrud)
        {
            if (dataOutKpknlCrud.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPSPBMNSkSelect.WASDALSROW_READ_WASDAL_PSP dataPenyama = new SvcWasdalPSPBMNSkSelect.WASDALSROW_READ_WASDAL_PSP();
                dataPenyama.ID_PEMOHONSpecified = true;
                //dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formSkPspBmnTambah.idPemohon;
                        //dataPenyama.ID_SATKER = konfigApp.idSatker;//formSkPspBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPspBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPspBmnTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPspBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPspBmnTambah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPspBmnTambah.kodePenerbitSkDetail;
                        //dataPenyama.KD_SATKER = konfigApp.kodeSatker;//formSkPspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPspBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPspBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPspBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPspBmnTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPspBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPspBmn == null ? 1 : dsGridRskPspBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkPspBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPspBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPspBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.THN_ANG = formSkPspBmnTambah.teTahunAnggaran.Text;
                        dataPenyama.UR_KL = formSkPspBmnTambah.teNamaKl.Text;
                        //dataPenyama.UR_SATKER = konfigApp.namaSatker;//formSkPspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPspBmnTambah.teUraianKeputusan.Text;
                        dsGridRskPspBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridSkPspBmn.dataTerpilih = dataPenyama;
                            _yangkeBerapa = 1;
                            formSkPspBmnTambah.gcDaftarAset.Enabled = true;
                            formSkPspBmnTambah.sbCari.Enabled = true;
                            formSkPspBmnTambah.sbTambah.Enabled = true;
                            formSkPspBmnTambah.sbHapus.Enabled = true;
                            formSkPspBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formSkPspBmnTambah.teNomorSk.Properties.ReadOnly = false;
                            formSkPspBmnTambah.teTanggalSk.Properties.ReadOnly = false;
                            formSkPspBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formSkPspBmnTambah.sbCariPemohon.Enabled = false;
                            formSkPspBmnTambah.sbRefresh.Enabled = true;
                            formSkPspBmnTambah.teNmPenerbitSk.Properties.ReadOnly = true;
                            formSkPspBmnTambah.cePilihSemua.Enabled = true;
                            formSkPspBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            //formSkPspBmnTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRskPspBmn.Remove(gridSkPspBmn.dataTerpilih);
                            dsGridRskPspBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formSkPspBmnUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPspBmnUbah.idPemohon;
                        //dataPenyama.ID_SATKER = konfigApp.idSatker;//formSkPspBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPspBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPspBmnUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPspBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPspBmnUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPspBmnUbah.kodePenerbitSkDetail;
                        //dataPenyama.KD_SATKER = konfigApp.kodeSatker;//formSkPspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPspBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPspBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkPspBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkPspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPspBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPspBmnUbah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPspBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPspBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkPspBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkPspBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPspBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPspBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPspBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPspBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkPspBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPspBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPspBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkPspBmnUbah.teNamaKl.Text;
                        //dataPenyama.UR_SATKER = konfigApp.namaSatker;//formSkPspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPspBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.THN_ANG = formSkPspBmnUbah.teTahunAnggaran.Text;
                        _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPspBmn.Remove(gridSkPspBmn.dataTerpilih);
                        dsGridRskPspBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPspBmn.Remove(gridSkPspBmn.dataTerpilih);
                        break;
                }
                gridSkPspBmn.dsDataSource = dsGridRskPspBmn;
                gridSkPspBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
        }
        #endregion Simpan Data PSP BMN

        #endregion

        #region pspbmndpl

        AppPengguna.KSK.RSK.ucRskPspBmnDplGrid gridSkPspBmnDpl;
        AppPengguna.KSK.RSK.ucRskPspBmnDplForm formSkPspBmnDplTambah;
        AppPengguna.KSK.RSK.ucRskPspBmnDplForm formSkPspBmnDplUbah;
        AppPengguna.KSK.RSK.ucRskPspBmnDplForm formSkPspBmnDplDetail;
        private ArrayList dsGridRskPspBmnDpl;
        SvcWasdalPSPBMNLAINSkSelect.OutputParameters dOutRskPspBmnDpl;
        SvcWasdalPSPBMNLAINSkSelect.execute_pttClient ambilRskPspBmnDpl;

        private void setEventTombolRskPspBmnDpl()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPspBmnDplMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPspBmnDpl()
        {
            //if (gridSkPspBmnDpl == null)
            //{
                gridSkPspBmnDpl = new AppPengguna.KSK.RSK.ucRskPspBmnDplGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPspBmnDpl),
                    detailDataGrid = new DetailDataGrid(bbiRskPspBmnDplUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPspBmnDpl();
            setPanel(gridSkPspBmnDpl);
        }

        #region --++ Tombol Ribbon
        private void bbiRskPspBmnDplTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan03), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPspBmnDplTambah == null)
                {
                    formSkPspBmnDplTambah = new AppPengguna.KSK.RSK.ucRskPspBmnDplForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmnDpl = new SimpanDataRsk(simpanDataRskPspBmnDpl)
                    };
                }
                setPanel(formSkPspBmnDplTambah);
                formSkPspBmnDplTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskPspBmnDplUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmnDpl.dataTerpilih != null)
            {
                if (formSkPspBmnDplUbah == null)
                {
                    formSkPspBmnDplUbah = new AppPengguna.KSK.RSK.ucRskPspBmnDplForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmnDpl = new SimpanDataRsk(simpanDataRskPspBmnDpl)
                    };
                }
                formSkPspBmnDplUbah.dataTerpilih = gridSkPspBmnDpl.dataTerpilih;
                setPanel(formSkPspBmnDplUbah);
                formSkPspBmnDplUbah.inisialisasiForm();
                setEventTombolRskPspBmnDpl();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPspBmnDplHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmnDpl.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPspBmnDpl.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters();
                        parInp.P_ID_SK_WASDALSpecified = true;
                        parInp.P_ID_SK_WASDAL = gridSkPspBmnDpl.dataTerpilih.ID_SK_WASDAL;
                        
                        parInp.P_ID_PEMOHON = gridSkPspBmnDpl.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPspBmnDpl.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkPspBmnDpl.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPspBmnDpl.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPspBmnDpl.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPspBmnDpl.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPspBmnDpl.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NILAI_PENETAPAN = gridSkPspBmnDpl.dataTerpilih.NILAI_PENETAPAN;
                        parInp.P_NILAI_PENETAPANSpecified = true;
                        parInp.P_NIP_PENANDATANGAN = gridSkPspBmnDpl.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPspBmnDpl.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPspBmnDpl.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPspBmnDpl.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPspBmnDpl.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkPspBmnDpl.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPspBmnDpl.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkPspBmnDpl.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkPspBmnDpl.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkPspBmnDpl.dataTerpilih.UR_SATKER;
                        simpanDataPspBmnDpl = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                        simpanDataPspBmnDpl.Open();
                        simpanDataPspBmnDpl.Beginexecute(parInp, new AsyncCallback(cudRskPspBmnDpl), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPspBmnDplDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPspBmnDpl.dataTerpilih != null)
            {
                if (formSkPspBmnDplDetail == null)
                {
                    formSkPspBmnDplDetail = new AppPengguna.KSK.RSK.ucRskPspBmnDplForm("A")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar)
                    };
                }
                formSkPspBmnDplDetail.dataTerpilih = gridSkPspBmnDpl.dataTerpilih;
                setPanel(formSkPspBmnDplDetail);
                formSkPspBmnDplDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPspBmnDplKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkPspBmnDpl);
            setTombolRskGrid();
            gridSkPspBmnDpl.dsDataSource = dsGridRskPspBmnDpl;
            gridSkPspBmnDpl.displayData();
        }

        private void bbiRskPspBmnDplRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPspBmnDpl.teNamaKolom.Text = "";
            gridSkPspBmnDpl.teCari.Text = "";
            gridSkPspBmnDpl.fieldDicari = "";
            gridSkPspBmnDpl.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPspBmnDpl();
        }

        private void bbiRskPspBmnDplMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPspBmnDpl();
            }
        }
        #endregion --++ Tombol Ribbon

        private void nbiRskPspBmnDpl_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan03;
            konfigApp.kdPelayanan = "03";
            konfigApp.namaPelayanan = konfigApp.namaLayanan03;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPspBmnDpl();
            modeCari = false;
            gridSkPspBmnDpl.teNamaKolom.Text = "";
            gridSkPspBmnDpl.teCari.Text = "";
            gridSkPspBmnDpl.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPspBmnDpl();
        }

        #region --++ Ambil Data PSP BMN DPL
        private void getInitRskPspBmnDpl()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINSkSelect.InputParameters parInp = new SvcWasdalPSPBMNLAINSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
             " (ID_USER={1} " +
              "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
              "OR ID_SATKER = {2} " +
              "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);

                ambilRskPspBmnDpl = new SvcWasdalPSPBMNLAINSkSelect.execute_pttClient();
                ambilRskPspBmnDpl.Open();
                ambilRskPspBmnDpl.Beginexecute(parInp, new AsyncCallback(getRskPspBmnDpl), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPspBmnDpl(IAsyncResult result)
        {
            try
            {
                dOutRskPspBmnDpl = ambilRskPspBmnDpl.Endexecute(result);
                ambilRskPspBmnDpl.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPspBmnDpl(dsRskPspBmnDpl), dOutRskPspBmnDpl);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPspBmnDpl(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut);

        private void dsRskPspBmnDpl(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }
            if (dataInisial == true)
            {
                dsGridRskPspBmnDpl = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_PSP_LAIN[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_PSP_LAIN[i].TGL_SK);

                dsGridRskPspBmnDpl.Add(dataOut.SF_READ_WASDAL_PSP_LAIN[i]);
            }
            gridSkPspBmnDpl.labelTotData.Text = "";
            gridSkPspBmnDpl.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";

            gridSkPspBmnDpl.sbCariOnline.Enabled = !modeCari;
            gridSkPspBmnDpl.dsDataSource = dsGridRskPspBmnDpl;
            gridSkPspBmnDpl.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkPspBmnDpl.teNamaKolom.Text.Trim();
                string xDua = gridSkPspBmnDpl.teCari.Text.Trim();
                string xTiga = gridSkPspBmnDpl.fieldDicari;
                gridSkPspBmnDpl.gvGridSk.ClearColumnsFilter();
                gridSkPspBmnDpl.teNamaKolom.Text = xSatu;
                gridSkPspBmnDpl.teCari.Text = xDua;
                gridSkPspBmnDpl.fieldDicari = xTiga;
            }
            else
                gridSkPspBmnDpl.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskPspBmnDpl(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskPspBmnDpl();
        }
        #endregion Ambil PSP BMN DPL

        #region --++ Simpan Data PSP BMN DPL
        SvcWasdalPSPBMNLAINCrud.OutputParameters dOutPspBmnDpl;
        SvcWasdalPSPBMNLAINCrud.execute_pttClient simpanDataPspBmnDpl;

        private void simpanDataRskPspBmnDpl(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters()
                {
                    P_ID_SK_WASDALSpecified=true,
                    P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.idSkWasdal : formSkPspBmnDplUbah.idSkWasdal),
                    P_ID_KPKNL = konfigApp.idKpknl,
                    P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true),
                    P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.idPemohon : formSkPspBmnDplUbah.idPemohon),
                    P_ID_PEMOHONSpecified = true,
                    P_ID_USER = konfigApp.idUser,
                    P_ID_USERSpecified = true,
                    P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.rgJenisAset.EditValue.ToString() : formSkPspBmnDplUbah.rgJenisAset.EditValue.ToString()),
                    P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teJabatan.Text.Trim() : formSkPspBmnDplUbah.teJabatan.Text.Trim()),
                    P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teTahunAnggaran.Text.Trim() : formSkPspBmnDplUbah.teTahunAnggaran.Text.Trim()),
                    P_KD_PELAYANAN = konfigApp.kdPelayanan,
                    P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNmPenerbitSk.EditValue.ToString() : formSkPspBmnDplUbah.teNmPenerbitSk.EditValue.ToString()),
                    P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.kodePenerbitSkDetail : formSkPspBmnDplUbah.kodePenerbitSkDetail),
                    P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPspBmnDplTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplTambah.teNilaiPenetapan.Text)) : (formSkPspBmnDplUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplUbah.teNilaiPenetapan.Text))),
                    P_NILAI_PENETAPANSpecified = true,
                    P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNipPenandaTangan.Text : formSkPspBmnDplUbah.teNipPenandaTangan.Text),
                    P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNamaPenandaTangan.Text : formSkPspBmnDplUbah.teNamaPenandaTangan.Text),
                    P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNmPenerbitSk.Text : formSkPspBmnDplUbah.teNmPenerbitSk.Text),
                    P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNamaInstansi.Text : formSkPspBmnDplUbah.namaPenerbitSkDetail),
                    P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNomorSk.Text.Trim() : formSkPspBmnDplUbah.teNomorSk.Text.Trim()),
                    P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null),
                    P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teTanggalSk.EditValue : formSkPspBmnDplUbah.teTanggalSk.EditValue))),
                    P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teJenisPemohon.Text : formSkPspBmnDplUbah.teJenisPemohon.Text),
                    P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.tipePengelola : formSkPspBmnDplUbah.tipePengelola),
                    P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teUraianKeputusan.Text : formSkPspBmnDplUbah.teUraianKeputusan.Text),
                    P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teAlamatPihakLain.Text : formSkPspBmnDplUbah.teAlamatPihakLain.Text),
                    //P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkPspBmnDplTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplTambah.teJangkaWaktu.Text)) : (formSkPspBmnDplUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplUbah.teJangkaWaktu.Text))),
                    P_JANGKA_WAKTUSpecified = true,
                    P_KD_KL = konfigApp.kodeKl,
                    P_ID_SATKER = konfigApp.idSatker,
                    P_ID_SATKERSpecified = true,
                    P_KD_SATKER = konfigApp.kodeSatker,
                    P_UR_SATKER = konfigApp.namaSatker,
                    P_UR_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teNamaPihakLain.Text : formSkPspBmnDplUbah.teNamaPihakLain.Text),
                   
                    //P_PERIODE = ((_mode=="C" || _mode=="CU") ? formSkPspBmnDplTambah.konversiPeriode():formSkPspBmnDplUbah.konversiPeriode()),
                    //P_FILE_SK = ((_mode == "C" || _mode == "CU") ? formSkPspBmnDplTambah.teFileSk.Text : formSkPspBmnDplUbah.teFileSk.Text),
                    //P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkPspBmnDplTambah.filePath) : konfigApp.FileToByteArray(formSkPspBmnDplUbah.filePath))
                    
                };
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_penggantiChar);
                modeCrud = Convert.ToChar(_mode);
                simpanDataPspBmnDpl = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                simpanDataPspBmnDpl.Open();
                simpanDataPspBmnDpl.Beginexecute(parInp, new AsyncCallback(cudRskPspBmnDpl), "");
            }
            catch (Exception e)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
            }
        }

        private void cudRskPspBmnDpl(IAsyncResult result)
        {
            try
            {
                dOutPspBmnDpl = simpanDataPspBmnDpl.Endexecute(result);
                simpanDataPspBmnDpl.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPspBmnDpl(ubahDsPspBmnDpl), dOutPspBmnDpl);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPspBmnDpl(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutPspBmnDpl);

        private void ubahDsPspBmnDpl(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutPspBmnDpl)
        {
            if (dataOutPspBmnDpl.PO_RESULT == "Y")
            {
                SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN dataPenyama = new SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                if (dsGridRskPspBmnDpl == null) dsGridRskPspBmnDpl = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                        dataPenyama.ID_PEMOHON = formSkPspBmnDplTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPspBmnDplTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPspBmnDplTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPspBmnDplTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPspBmnDplTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPspBmnDplTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPspBmnDplTambah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPspBmnDplTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPspBmnDplTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = (formSkPspBmnDplTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplTambah.teKuantitas.Text));
                        dataPenyama.NILAI_PENETAPAN = (formSkPspBmnDplTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplTambah.teNilaiPenetapan.Text));
                        dataPenyama.NIP_PENANDATANGAN = formSkPspBmnDplTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPspBmnDplTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPspBmnDplTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPspBmnDplTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPspBmnDplTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPspBmnDpl == null ? 1 : dsGridRskPspBmnDpl.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkPspBmnDplTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPspBmnDplTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPspBmnDplTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.THN_ANG = formSkPspBmnDplTambah.teTahunAnggaran.Text;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkPspBmnDplTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPspBmnDplTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPspBmnDplTambah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPspBmnDplTambah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkPspBmnDplTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplTambah.teJangkaWaktu.Text));
                        dataPenyama.UR_PHK_LAIN = formSkPspBmnDplTambah.teNamaPihakLain.Text;
                        dsGridRskPspBmnDpl.Add(dataPenyama);
                        formSkPspBmnDplTambah.gcDaftarAset.Enabled = true;
                        formSkPspBmnDplTambah.sbTambah.Enabled = true;
                        formSkPspBmnDplTambah.sbHapus.Enabled = true;
                        formSkPspBmnDplTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkPspBmnDplTambah.teNomorSk.Properties.ReadOnly = false;
                        formSkPspBmnDplTambah.teTanggalSk.Properties.ReadOnly = false;
                        formSkPspBmnDplTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkPspBmnDplTambah.sbCariPemohon.Enabled = false;
                        formSkPspBmnDplTambah.sbRefresh.Enabled = true;
                        formSkPspBmnDplTambah.sbValidasi.Enabled = true;
                        formSkPspBmnDplTambah.teNmPenerbitSk.Properties.ReadOnly = true;
                        formSkPspBmnDplTambah.cePilihSemua.Enabled = true;
                        formSkPspBmnDplTambah.teKodePemohon.Properties.ReadOnly = true;
                        
                        //formSkPspBmnDplTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formSkPspBmnDplUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPspBmnDplUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPspBmnDplUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPspBmnDplUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPspBmnDplUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPspBmnDplUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPspBmnDplUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPspBmnDplUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPspBmnDplUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPspBmnDplUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = (formSkPspBmnDplUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplUbah.teKuantitas.Text));
                        dataPenyama.NILAI_PENETAPAN = (formSkPspBmnDplUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplUbah.teNilaiPenetapan.Text));
                        dataPenyama.NIP_PENANDATANGAN = formSkPspBmnDplUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPspBmnDplUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPspBmnDplUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPspBmnDplUbah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPspBmnDplUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPspBmnDpl.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkPspBmnDpl.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkPspBmnDplUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPspBmnDpl.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPspBmnDpl.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPspBmnDplUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPspBmnDplUbah.teJenisPemohon.Text;
                        dataPenyama.THN_ANG = formSkPspBmnDplUbah.teTahunAnggaran.Text;
                        dataPenyama.TOT_BMN = gridSkPspBmnDpl.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPspBmnDpl.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPspBmnDpl.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkPspBmnDplUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPspBmnDplUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPspBmnDplUbah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPspBmnDplUbah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkPspBmnDplUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPspBmnDplUbah.teJangkaWaktu.Text));
                        dataPenyama.UR_PHK_LAIN = formSkPspBmnDplUbah.teNamaPihakLain.Text;
                        int _indeksData = dsGridRskPspBmnDpl.IndexOf(gridSkPspBmnDpl.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPspBmnDpl.Remove(gridSkPspBmnDpl.dataTerpilih);
                        dsGridRskPspBmnDpl.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPspBmnDpl.Remove(gridSkPspBmnDpl.dataTerpilih);
                        break;
                }
                gridSkPspBmnDpl.dsDataSource = dsGridRskPspBmnDpl;
                gridSkPspBmnDpl.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutPspBmnDpl.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PSP BMN

        #endregion
        
        #region aspbmn
        AppPengguna.KSK.RSK.ucRskAspBmnGrid gridSkAspBmn;
        AppPengguna.KSK.RSK.ucRskAspBmnForm formSkAspBmnTambah;
        AppPengguna.KSK.RSK.ucRskAspBmnForm formSkAspBmnUbah;
        AppPengguna.KSK.RSK.ucRskAspBmnForm formSkAspBmnDetail;
        private ArrayList dsGridRskAspBmn;
        SvcWasdalPSPBMNLAINSkSelect.OutputParameters dOutRskAspBmn;
        SvcWasdalPSPBMNLAINSkSelect.execute_pttClient ambilRskAspBmn;


        private void setEventTombolRskAspBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskAspBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskAspBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskAspBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskAspBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskAspBmnKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskAspBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskAspBmnMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
        }

        private void initGridSkAspBmn()
        {
            //if (gridSkAspBmn == null)
            //{
                gridSkAspBmn = new AppPengguna.KSK.RSK.ucRskAspBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskAspBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskAspBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskAspBmn();
            setPanel(gridSkAspBmn);
        }

        #region --++ Tombol Ribbon
        private void bbiRskAspBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan04), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkAspBmnTambah == null)
                {
                    formSkAspBmnTambah = new AppPengguna.KSK.RSK.ucRskAspBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskAspBmn)
                    };
                }
                setPanel(formSkAspBmnTambah);
                formSkAspBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskAspBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkAspBmn.dataTerpilih != null)
            {
                if (formSkAspBmnUbah == null)
                {
                    formSkAspBmnUbah = new AppPengguna.KSK.RSK.ucRskAspBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskAspBmn)
                    };
                }
                formSkAspBmnUbah.dataTerpilih = gridSkAspBmn.dataTerpilih;
                setPanel(formSkAspBmnUbah);
                formSkAspBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskAspBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

            if (gridSkAspBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkAspBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters();
                        parInp.P_ID_SK_WASDALSpecified = true;
                        parInp.P_ID_SK_WASDAL = gridSkAspBmn.dataTerpilih.ID_SK_WASDAL;
                        parInp.P_ID_PEMOHON = gridSkAspBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkAspBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkAspBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkAspBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkAspBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkAspBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkAspBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NILAI_PENETAPAN = gridSkAspBmn.dataTerpilih.NILAI_PENETAPAN;
                        parInp.P_NILAI_PENETAPANSpecified = true;
                        parInp.P_NIP_PENANDATANGAN = gridSkAspBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkAspBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkAspBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkAspBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_JANGKA_WAKTUSpecified = true;
                        parInp.P_JANGKA_WAKTU = gridSkAspBmn.dataTerpilih.JANGKA_WAKTU;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkAspBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkAspBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkAspBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkAspBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkAspBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkAspBmn.dataTerpilih.UR_SATKER;
                        ambilDataRskAspBmn = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                        ambilDataRskAspBmn.Open();
                        ambilDataRskAspBmn.Beginexecute(parInp, new AsyncCallback(cudRskAspBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskAspBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkAspBmn.dataTerpilih != null)
            {
                if (formSkAspBmnDetail == null)
                {
                    formSkAspBmnDetail = new AppPengguna.KSK.RSK.ucRskAspBmnForm("A");
                    formSkAspBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkAspBmnDetail.dataTerpilih = gridSkAspBmn.dataTerpilih;
                setPanel(formSkAspBmnDetail);
                formSkAspBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskAspBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkAspBmn);
            setTombolRskGrid();
            gridSkAspBmn.dsDataSource = dsGridRskAspBmn;
            gridSkAspBmn.displayData();
        }

        private void bbiRskAspBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkAspBmn.teNamaKolom.Text = "";
            gridSkAspBmn.teCari.Text = "";
            gridSkAspBmn.fieldDicari = "";
            gridSkAspBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskAspBmn();
        }

        private void bbiRskAspBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskAspBmn();
            }
        }
        #endregion --++ Tombol Ribbon

        private void nbiRskAspBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan04;
            konfigApp.kdPelayanan = "04";
            konfigApp.namaPelayanan = konfigApp.namaLayanan04;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK; 
            initGridSkAspBmn();
            modeCari = false;
            gridSkAspBmn.teNamaKolom.Text = "";
            gridSkAspBmn.teCari.Text = "";
            gridSkAspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskAspBmn();
        }

        #region --++ Ambil Data ASP BMN
        private void getInitRskAspBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINSkSelect.InputParameters parInp = new SvcWasdalPSPBMNLAINSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
             " (ID_USER={1} " +
              "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
              "OR ID_SATKER = {2} " +
              "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskAspBmn = new SvcWasdalPSPBMNLAINSkSelect.execute_pttClient();
                ambilRskAspBmn.Open();
                ambilRskAspBmn.Beginexecute(parInp, new AsyncCallback(getRskAspBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskAspBmn(IAsyncResult result)
        {
            try
            {
                dOutRskAspBmn = ambilRskAspBmn.Endexecute(result);
                ambilRskAspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskAspBmn(dsRskAspBmn), dOutRskAspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskAspBmn(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut);

        private void dsRskAspBmn(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskAspBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskAspBmn.Add(dataOut.SF_READ_WASDAL_PSP_LAIN[i]);
            }
            gridSkAspBmn.labelTotData.Text = "";
            gridSkAspBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkAspBmn.sbCariOnline.Enabled = !modeCari;
            gridSkAspBmn.dsDataSource = dsGridRskAspBmn;
            gridSkAspBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkAspBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkAspBmn.teCari.Text.Trim();
                string xTiga = gridSkAspBmn.fieldDicari;
                gridSkAspBmn.gvGridSk.ClearColumnsFilter();
                gridSkAspBmn.teNamaKolom.Text = xSatu;
                gridSkAspBmn.teCari.Text = xDua;
                gridSkAspBmn.fieldDicari = xTiga;
            }
            else
                gridSkAspBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskAspBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskAspBmn();
        }
        #endregion Ambil ASP BMN

        #region --++ Simpan Data ASP BMN
        //SvcWasdalLAINCrud.OutputParameters dOutAmbilDataRskAspBmn;
        //SvcWasdalLAINCrud.call_pttClient ambilDataRskAspBmn;
        SvcWasdalPSPBMNLAINCrud.OutputParameters dOutAmbilDataRskAspBmn;
        SvcWasdalPSPBMNLAINCrud.execute_pttClient ambilDataRskAspBmn;

        private void simpanDataRskAspBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.idSkWasdal : formSkAspBmnUbah.idSkWasdal);
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.idPemohon : formSkAspBmnUbah.idPemohon);
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.rgJenisAset.EditValue.ToString() : formSkAspBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teJabatan.Text.Trim() : formSkAspBmnUbah.teJabatan.Text.Trim());
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teTahunAnggaran.Text : formSkAspBmnUbah.teTahunAnggaran.Text);
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNmPenerbitSk.EditValue.ToString() : formSkAspBmnUbah.teNmPenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.kodePenerbitSkDetail : formSkAspBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkAspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnTambah.teNilaiPenetapan.Text)) : (formSkAspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNipPenandaTangan.Text : formSkAspBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNamaPenandaTangan.Text : formSkAspBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNmPenerbitSk.Text : formSkAspBmnUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNamaInstansi.Text : formSkAspBmnUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_penggantiChar);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teNomorSk.Text.Trim() : formSkAspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teTanggalSk.EditValue : formSkAspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teJenisPemohon.Text : formSkAspBmnUbah.teJenisPemohon.Text);
                //parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_JANGKA_WAKTUSpecified = true;
                //parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkAspBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnTambah.teJangkaWaktu.Text)) : (formSkAspBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnUbah.teJangkaWaktu.Text))); ;
                //parInp.P_FILE_SK = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teFileSk.Text : formSkAspBmnUbah.teFileSk.Text);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkAspBmnTambah.filePath) : konfigApp.FileToByteArray(formSkAspBmnUbah.filePath));
                //parInp.P_PERUNTUKAN = "";
                //parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teTahunAnggaran.Text : formSkAspBmnUbah.teTahunAnggaran.Text);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teUraianKeputusan.Text : formSkAspBmnUbah.teUraianKeputusan.Text);
                //KD_KL, UR_KL, ALAMAT_KL --> belum masuk ke parameter input
                parInp.P_KD_KL = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.teKodeKl.Text : formSkAspBmnUbah.teKodeKl.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkAspBmnTambah.tipePengelola : formSkAspBmnUbah.tipePengelola);
               

                ambilDataRskAspBmn = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                ambilDataRskAspBmn.Open();
                ambilDataRskAspBmn.Beginexecute(parInp, new AsyncCallback(cudRskAspBmn), "");
            }
            catch (Exception e)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudRskAspBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataRskAspBmn = ambilDataRskAspBmn.Endexecute(result);
                ambilDataRskAspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsAspBmn(ubahDsAspBmn), dOutAmbilDataRskAspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsAspBmn(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutAspBmnCrud);

        private void ubahDsAspBmn(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutAspBmnCrud)
        {
            if (dataOutAspBmnCrud.PO_RESULT == "Y")
            {
                SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN dataPenyama = new SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskAspBmn == null) dsGridRskAspBmn = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                        dataPenyama.ID_PEMOHON = formSkAspBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkAspBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkAspBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkAspBmnTambah.teJabatan.Text;
                        //dataPenyama.KD_KL = formSkAspBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkAspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkAspBmnTambah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkAspBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkAspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkAspBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkAspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkAspBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkAspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkAspBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkAspBmnTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkAspBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskAspBmn == null ? 1 : dsGridRskAspBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkAspBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkAspBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkAspBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.KD_KL = formSkAspBmnTambah.teKodeKl.Text;
                        dataPenyama.UR_KL = formSkAspBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkAspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkAspBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkAspBmnTambah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkAspBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnTambah.teJangkaWaktu.Text));
                        //dataPenyama.NM_PHK_LAIN = formSkAspBmnTambah.teNamaInstansi.Text;
                        dsGridRskAspBmn.Add(dataPenyama);
                        formSkAspBmnTambah.gcDaftarAset.Enabled = true;
                        formSkAspBmnTambah.sbTambah.Enabled = true;
                        formSkAspBmnTambah.sbHapus.Enabled = true;
                        formSkAspBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkAspBmnTambah.teNomorSk.Properties.ReadOnly = false;
                        formSkAspBmnTambah.teTanggalSk.Properties.ReadOnly = false;
                        formSkAspBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkAspBmnTambah.sbCariPemohon.Enabled = false;
                        formSkAspBmnTambah.sbRefresh.Enabled = true;
                        formSkAspBmnTambah.sbValidasi.Enabled = true;
                        formSkAspBmnTambah.teNmPenerbitSk.Properties.ReadOnly = true;
                        formSkAspBmnTambah.cePilihSemua.Enabled = true;
                        formSkAspBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkAspBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formSkAspBmnUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkAspBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkAspBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkAspBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkAspBmnUbah.teJabatan.Text;
                        //dataPenyama.KD_KL = formSkAspBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkAspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkAspBmnUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkAspBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkAspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkAspBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkAspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkAspBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkAspBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkAspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkAspBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkAspBmnUbah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkAspBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkAspBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkAspBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkAspBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkAspBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkAspBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkAspBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkAspBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkAspBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkAspBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkAspBmn.dataTerpilih.TOTAL_DATA;
                        //dataPenyama.UR_KL = formSkAspBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkAspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkAspBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkAspBmnUbah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkAspBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkAspBmnUbah.teJangkaWaktu.Text));
                        //dataPenyama.NM_PHK_LAIN = formSkAspBmnUbah.teNamaKl.Text;
                        int _indeksData = dsGridRskAspBmn.IndexOf(gridSkAspBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskAspBmn.Remove(gridSkAspBmn.dataTerpilih);
                        dsGridRskAspBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskAspBmn.Remove(gridSkAspBmn.dataTerpilih);
                        break;
                }
                gridSkAspBmn.dsDataSource = dsGridRskAspBmn;
                gridSkAspBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutAspBmnCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data ASP BMN


        #endregion

        #region psbmn
        AppPengguna.KSK.RSK.ucRskPsBmnGrid gridSkPsBmn;
        AppPengguna.KSK.RSK.ucRskPsBmnForm formSkPsBmnTambah;
        AppPengguna.KSK.RSK.ucRskPsBmnForm formSkPsBmnUbah;
        AppPengguna.KSK.RSK.ucRskPsBmnForm formSkPsBmnDetail;
        private ArrayList dsGridRskPsBmn;
        SvcWasdalPSPBMNLAINSkSelect.OutputParameters dOutRskPsBmn;
        SvcWasdalPSPBMNLAINSkSelect.execute_pttClient ambilRskPsBmn;
        //SvcWasdalLAINCrud.OutputParameters dOutAmbilDataPsBmn;
        //SvcWasdalLAINCrud.call_pttClient ambilDataPsBmn;
        SvcWasdalPSPBMNLAINCrud.OutputParameters dOutAmbilDataPsBmn;
        SvcWasdalPSPBMNLAINCrud.execute_pttClient ambilDataPsBmn;

        private void setEventTombolRskPsBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPsBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPsBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPsBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPsBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPsBmnKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPsBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPsBmnMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPsBmn()
        {
            //if (gridSkPsBmn == null)
            //{
                gridSkPsBmn = new AppPengguna.KSK.RSK.ucRskPsBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPsBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskPsBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPsBmn();
            setPanel(gridSkPsBmn);
        }

        #region --++ Tombol Ribbon
        private void bbiRskPsBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan05), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPsBmnTambah == null)
                {
                    formSkPsBmnTambah = new AppPengguna.KSK.RSK.ucRskPsBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPsBmn)
                    };
                }
                setPanel(formSkPsBmnTambah);
                formSkPsBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskPsBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPsBmn.dataTerpilih != null)
            {
                if (formSkPsBmnUbah == null)
                {
                    formSkPsBmnUbah = new AppPengguna.KSK.RSK.ucRskPsBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPsBmn)
                    };
                }
                formSkPsBmnUbah.dataTerpilih = gridSkPsBmn.dataTerpilih;
                setPanel(formSkPsBmnUbah);
                formSkPsBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPsBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPsBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPsBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        //SvcWasdalPSPBMNCrud.InputParameters parInp = new SvcWasdalPSPBMNCrud.InputParameters();
                        SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters();
                        parInp.P_ID_SK_WASDALSpecified = true;
                        parInp.P_ID_SK_WASDAL = gridSkPsBmn.dataTerpilih.ID_SK_WASDAL;
                        parInp.P_ID_PEMOHON = gridSkPsBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPsBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkPsBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPsBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPsBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPsBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPsBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NILAI_PENETAPAN = gridSkPsBmn.dataTerpilih.NILAI_PENETAPAN;
                        parInp.P_NILAI_PENETAPANSpecified = true;
                        parInp.P_NIP_PENANDATANGAN = gridSkPsBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPsBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPsBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPsBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPsBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkPsBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPsBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkPsBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkPsBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkPsBmn.dataTerpilih.UR_SATKER;
                        ambilDataPsBmn = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                        ambilDataPsBmn.Open();
                        ambilDataPsBmn.Beginexecute(parInp, new AsyncCallback(cudRskPsBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPsBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPsBmn.dataTerpilih != null)
            {
                if (formSkPsBmnDetail == null)
                {
                    formSkPsBmnDetail = new AppPengguna.KSK.RSK.ucRskPsBmnForm("A");
                    formSkPsBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkPsBmnDetail.dataTerpilih = gridSkPsBmn.dataTerpilih;
                setPanel(formSkPsBmnDetail);
                formSkPsBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPsBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkPsBmn);
            setTombolRskGrid();
            gridSkPsBmn.dsDataSource = dsGridRskPsBmn;
            gridSkPsBmn.displayData();
        }

        private void bbiRskPsBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPsBmn.teNamaKolom.Text = "";
            gridSkPsBmn.teCari.Text = "";
            gridSkPsBmn.fieldDicari = "";
            gridSkPsBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPsBmn();
        }

        private void bbiRskPsBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPsBmn();
            }
        }
        #endregion --++ Tombol Ribbon

        private void nbiRskPsBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan05;
            konfigApp.kdPelayanan = "05";
            konfigApp.namaPelayanan = konfigApp.namaLayanan05;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPsBmn();
            modeCari = false;
            gridSkPsBmn.teNamaKolom.Text = "";
            gridSkPsBmn.teCari.Text = "";
            gridSkPsBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPsBmn();
        }

        #region --++ Ambil Data PS BMN
        private void getInitRskPsBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINSkSelect.InputParameters parInp = new SvcWasdalPSPBMNLAINSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);

                ambilRskPsBmn = new SvcWasdalPSPBMNLAINSkSelect.execute_pttClient();
                ambilRskPsBmn.Open();
                ambilRskPsBmn.Beginexecute(parInp, new AsyncCallback(getRskPsBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPsBmn(IAsyncResult result)
        {
            try
            {
                dOutRskPsBmn = ambilRskPsBmn.Endexecute(result);
                ambilRskPsBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPsBmn(dsRskPsBmn), dOutRskPsBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPsBmn(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut);

        private void dsRskPsBmn(SvcWasdalPSPBMNLAINSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskPsBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskPsBmn.Add(dataOut.SF_READ_WASDAL_PSP_LAIN[i]);
            }
            gridSkPsBmn.labelTotData.Text = "";
            gridSkPsBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkPsBmn.sbCariOnline.Enabled = !modeCari;
            gridSkPsBmn.dsDataSource = dsGridRskPsBmn;
            gridSkPsBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkPsBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkPsBmn.teCari.Text.Trim();
                string xTiga = gridSkPsBmn.fieldDicari;
                gridSkPsBmn.gvGridSk.ClearColumnsFilter();
                gridSkPsBmn.teNamaKolom.Text = xSatu;
                gridSkPsBmn.teCari.Text = xDua;
                gridSkPsBmn.fieldDicari = xTiga;
            }
            else
                gridSkPsBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskPsBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskPsBmn();
        }
        #endregion Ambil PSP BMN

        #region --++ Simpan Data PS BMN


        private void simpanDataRskPsBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNLAINCrud.InputParameters parInp = new SvcWasdalPSPBMNLAINCrud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.idSkWasdal : formSkPsBmnUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.idPemohon : formSkPsBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.rgJenisAset.EditValue.ToString() : formSkPsBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teJabatan.Text.Trim() : formSkPsBmnUbah.teJabatan.Text.Trim());
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teTahunAnggaran.Text : formSkPsBmnUbah.teTahunAnggaran.Text);
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkPsBmnTambah.teNmPenerbitSk.ItemIndex).ToString() : formSkPsBmnTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkPsBmnUbah.teNmPenerbitSk.ItemIndex).ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.kodePenerbitSkDetail : formSkPsBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPsBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnTambah.teNilaiPenetapan.Text)) : (formSkPsBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNipPenandaTangan.Text : formSkPsBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNamaPenandaTangan.Text : formSkPsBmnUbah.teNamaPenandaTangan.Text);
                //parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.tePeruntukan.Text : formSkPsBmnUbah.tePeruntukan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNmPenerbitSk.Text : formSkPsBmnUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNamaInstansi.Text : formSkPsBmnUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_penggantiChar);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teNomorSk.Text.Trim() : formSkPsBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teTanggalSk.EditValue : formSkPsBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teJenisPemohon.Text : formSkPsBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.tipePengelola : formSkPsBmnUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teUraianKeputusan.Text : formSkPsBmnUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teTahunAnggaran.Text.Trim() : formSkPsBmnUbah.teTahunAnggaran.Text.Trim());
                parInp.P_KD_KL = ((_mode == "C" || _mode == "CU") ? formSkPsBmnTambah.teKodeKl.Text.Trim() : formSkPsBmnUbah.teKodeKl.Text.Trim());
                ambilDataPsBmn = new SvcWasdalPSPBMNLAINCrud.execute_pttClient();
                ambilDataPsBmn.Open();
                ambilDataPsBmn.Beginexecute(parInp, new AsyncCallback(cudRskPsBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskPsBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPsBmn = ambilDataPsBmn.Endexecute(result);
                ambilDataPsBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPsBmn(this.ubahDsPsBmn), dOutAmbilDataPsBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPsBmn(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutKpknlCrud);

        private void ubahDsPsBmn(SvcWasdalPSPBMNLAINCrud.OutputParameters dataOutKpknlCrud)
        {
            if (dataOutKpknlCrud.PO_RESULT == "Y")
            {
                SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN dataPenyama = new SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskPsBmn == null) dsGridRskPsBmn = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                        dataPenyama.ID_PEMOHON = formSkPsBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPsBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPsBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPsBmnTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPsBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPsBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPsBmnTambah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPsBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPsBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPsBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPsBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPsBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPsBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPsBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPsBmnTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPsBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPsBmn == null ? 1 : dsGridRskPsBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkPsBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPsBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPsBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkPsBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPsBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPsBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPsBmnTambah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkPsBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnTambah.teJangkaWaktu.Text));
                        //dataPenyama.NM_PHK_LAIN = formSkPsBmnTambah.teNamaKl.Text;
                        dsGridRskPsBmn.Add(dataPenyama);
                        formSkPsBmnTambah.gcDaftarAset.Enabled = true;
                        formSkPsBmnTambah.sbTambah.Enabled = true;
                        formSkPsBmnTambah.sbHapus.Enabled = true;
                        formSkPsBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkPsBmnTambah.teNomorSk.Properties.ReadOnly = false;
                        formSkPsBmnTambah.teTanggalSk.Properties.ReadOnly = false;
                        formSkPsBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkPsBmnTambah.sbCariPemohon.Enabled = false;
                        formSkPsBmnTambah.sbRefresh.Enabled = true;
                        formSkPsBmnTambah.sbValidasi.Enabled = true;
                        formSkPsBmnTambah.teNmPenerbitSk.Properties.ReadOnly = true;
                        formSkPsBmnTambah.cePilihSemua.Enabled = true;
                        formSkPsBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkPsBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formSkPsBmnUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPsBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPsBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPsBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPsBmnUbah.teJabatan.Text;
                        //dataPenyama.KD_KL = formSkPsBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPsBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPsBmnUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPsBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPsBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPsBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPsBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPsBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkPsBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkPsBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPsBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPsBmnUbah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPsBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPsBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkPsBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkPsBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPsBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPsBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPsBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPsBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkPsBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPsBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPsBmn.dataTerpilih.TOTAL_DATA;
                        //dataPenyama.UR_KL = formSkPsBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPsBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPsBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPsBmnUbah.teAlamatPihakLain.Text;
                        //dataPenyama.JANGKA_WAKTU = (formSkPsBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPsBmnUbah.teJangkaWaktu.Text));
                        //dataPenyama.NM_PHK_LAIN = formSkPsBmnUbah.teNamaKl.Text;
                        int _indeksData = dsGridRskPsBmn.IndexOf(gridSkPsBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPsBmn.Remove(gridSkPsBmn.dataTerpilih);
                        dsGridRskPsBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPsBmn.Remove(gridSkPsBmn.dataTerpilih);
                        break;
                }
                gridSkPsBmn.dsDataSource = dsGridRskPsBmn;
                gridSkPsBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutKpknlCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PSP BMN

        #endregion

        #region -->> [06] Sub Menu SEWA BMN
        RSK.ucRskSewaBmnGrid gridSkSewaBmn;
        RSK.ucRskSewaBmnForm formSkSewaBmnTambah;
        RSK.ucRskSewaBmnForm formSkSewaBmnUbah;
        RSK.ucRskSewaBmnForm formSkSewaBmnDetail;
        private ArrayList dsGridRskSewaBmn;
        SvcWasdalManfaatSkSelect.OutputParameters dOutRskSewaBmn;
        SvcWasdalManfaatSkSelect.execute_pttClient ambilRskSewaBmn;

        private void setEventTombolRskSewaBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskSewaBmnKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkSewaBmn()
        {
            //if (gridSkSewaBmn == null)
            //{
                gridSkSewaBmn = new RSK.ucRskSewaBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskSewaBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskSewaBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskSewaBmn();
            setPanel(gridSkSewaBmn);
        }

        #region --++ Tombol Ribbon Sewa BMN
        private void bbiRskSewaBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan06), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkSewaBmnTambah == null)
                {
                    formSkSewaBmnTambah = new RSK.ucRskSewaBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskSewaBmn)
                    };
                }
                setPanel(formSkSewaBmnTambah);
                formSkSewaBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskSewaBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkSewaBmn.dataTerpilih != null)
            {
                if (formSkSewaBmnUbah == null)
                {
                    formSkSewaBmnUbah = new RSK.ucRskSewaBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskSewaBmn)
                    };
                }
                formSkSewaBmnUbah.dataTerpilih = gridSkSewaBmn.dataTerpilih;
                setPanel(formSkSewaBmnUbah);
                formSkSewaBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskSewaBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkSewaBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkSewaBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                        parInp.P_ID_SK_WASDAL_MANFAAT = gridSkSewaBmn.dataTerpilih.ID_SK_WASDAL_MANFAAT;
                        parInp.P_ID_PEMOHON = gridSkSewaBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkSewaBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_ID_SATKER = konfigApp.idSatker;
                        parInp.P_KD_SATKER = konfigApp.kodeSatker;
                        parInp.P_UR_SATKER = konfigApp.namaSatker;
                        parInp.P_IS_TB = gridSkSewaBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkSewaBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkSewaBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkSewaBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkSewaBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkSewaBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkSewaBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkSewaBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkSewaBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkSewaBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkSewaBmn.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = gridSkSewaBmn.dataTerpilih.THN_ANG;
                        parInp.P_ID_KPKNL = konfigApp.idKpknl;
                        parInp.P_KD_KL = konfigApp.kodeKl;
                        parInp.P_TIPE_PEMOHON = gridSkSewaBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkSewaBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_DARI_TGL = konfigApp.DateToString(gridSkSewaBmn.dataTerpilih.DARI_TGL);
                        parInp.P_SD_TGL = konfigApp.DateToString(gridSkSewaBmn.dataTerpilih.SD_TGL);
                        parInp.P_NM_PHK_LAIN = gridSkSewaBmn.dataTerpilih.NM_PHK_LAIN;
                        parInp.P_ALAMAT_PHK_LAIN = gridSkSewaBmn.dataTerpilih.ALAMAT_PHK_LAIN;
                        parInp.P_PERUNTUKAN = gridSkSewaBmn.dataTerpilih.PERUNTUKAN;
                        parInp.P_PERIODE = gridSkSewaBmn.dataTerpilih.PERIODE;
                        parInp.P_JNS_MITRA = "-";
                        parInp.P_KETERANGAN = "-";
                        //parInp.P_TIPE_PENGELOLA = "03";
                        parInp.P_TGL_CREATED = null;
                        ambilDataSewaBmn = new SvcWasdalManfaatCud.execute_pttClient();
                        ambilDataSewaBmn.Open();
                        ambilDataSewaBmn.Beginexecute(parInp, new AsyncCallback(cudRskSewaBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskSewaBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkSewaBmn.dataTerpilih != null)
            {
                if (formSkSewaBmnDetail == null)
                {
                    formSkSewaBmnDetail = new RSK.ucRskSewaBmnForm("A");
                    formSkSewaBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkSewaBmnDetail.dataTerpilih = gridSkSewaBmn.dataTerpilih;
                setPanel(formSkSewaBmnDetail);
                formSkSewaBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskSewaBmnKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkSewaBmn);
            setTombolRskGrid();
            gridSkSewaBmn.dsDataSource = dsGridRskSewaBmn;
            gridSkSewaBmn.displayData();
        }

        private void bbiRskSewaBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkSewaBmn.teNamaKolom.Text = "";
            gridSkSewaBmn.teCari.Text = "";
            gridSkSewaBmn.fieldDicari = "";
            gridSkSewaBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskSewaBmn();
        }

        private void bbiRskSewaBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskSewaBmn();
            }
        }

        private void bbiRskSewaBmnKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskSewaBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon

        private void nbiRskSewaBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan06;
            konfigApp.kdPelayanan = "06";
            konfigApp.namaPelayanan = konfigApp.namaLayanan06;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkSewaBmn();
            modeCari = false;
            gridSkSewaBmn.teNamaKolom.Text = "";
            gridSkSewaBmn.teCari.Text = "";
            gridSkSewaBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskSewaBmn();
        }

        #region --++ Ambil Data Sewa BMN
        private void getInitRskSewaBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatSkSelect.InputParameters parInp = new SvcWasdalManfaatSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskSewaBmn = new SvcWasdalManfaatSkSelect.execute_pttClient();
                ambilRskSewaBmn.Open();
                ambilRskSewaBmn.Beginexecute(parInp, new AsyncCallback(getRskSewaBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskSewaBmn(IAsyncResult result)
        {
            try
            {
                dOutRskSewaBmn = ambilRskSewaBmn.Endexecute(result);
                ambilRskSewaBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskSewaBmn(dsRskSewaBmn), dOutRskSewaBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskSewaBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut);

        private void dsRskSewaBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_MANFAAT[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskSewaBmn = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_MANFAAT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_MANFAAT[i].TGL_SK);
                dataOut.SF_READ_WASDAL_MANFAAT[i].PERIODE = konfigApp.setPeriode(dataOut.SF_READ_WASDAL_MANFAAT[i].PERIODE);
                dsGridRskSewaBmn.Add(dataOut.SF_READ_WASDAL_MANFAAT[i]);
            }
            gridSkSewaBmn.labelTotData.Text = "";
            gridSkSewaBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkSewaBmn.sbCariOnline.Enabled = !modeCari;
            gridSkSewaBmn.dsDataSource = dsGridRskSewaBmn;
            gridSkSewaBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkSewaBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkSewaBmn.teCari.Text.Trim();
                string xTiga = gridSkSewaBmn.fieldDicari;
                gridSkSewaBmn.gvGridSk.ClearColumnsFilter();
                gridSkSewaBmn.teNamaKolom.Text = xSatu;
                gridSkSewaBmn.teCari.Text = xDua;
                gridSkSewaBmn.fieldDicari = xTiga;
            }
            else
                gridSkSewaBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskSewaBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskSewaBmn();
        }
        #endregion Ambil Sewa BMN

        #region --++ Simpan Data Sewa BMN
        SvcWasdalManfaatCud.OutputParameters dOutAmbilDataSewaBmn;
        SvcWasdalManfaatCud.execute_pttClient ambilDataSewaBmn;

        private void simpanDataRskSewaBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.idSkWasdal : formSkSewaBmnUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.idPemohon : formSkSewaBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.rgJenisAset.EditValue.ToString() : formSkSewaBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teJabatan.Text.Trim() : formSkSewaBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.lePenerbitSk.EditValue.ToString() : formSkSewaBmnUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.kodePenerbitSkDetail : formSkSewaBmnUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkSewaBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnTambah.teNilaiPenetapan.Text)) : (formSkSewaBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teNipPenandaTangan.Text : formSkSewaBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teNamaPenandaTangan.Text : formSkSewaBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.lePenerbitSk.Text : formSkSewaBmnUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teNmPenerbitSkDetail.Text : formSkSewaBmnUbah.teNmPenerbitSkDetail.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teNomorSk.Text.Trim() : formSkSewaBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teTanggalSk.EditValue : formSkSewaBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teJenisPemohon.Text : formSkSewaBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.tipePengelola : formSkSewaBmnUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teUraianKeputusan.Text : formSkSewaBmnUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teTahunAnggaran.Text : formSkSewaBmnUbah.teTahunAnggaran.Text);
                parInp.P_DARI_TGL = (_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teDariTgl.Text : formSkSewaBmnUbah.teDariTgl.Text;
                parInp.P_SD_TGL = (_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teSampaiTgl.Text : formSkSewaBmnUbah.teSampaiTgl.Text;

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teAlamatPihakLain.Text : formSkSewaBmnUbah.teAlamatPihakLain.Text);
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkSewaBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnTambah.teJangkaWaktu.Text)) : (formSkSewaBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnUbah.teJangkaWaktu.Text)));
                parInp.P_JNS_MITRA = null;
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.teNamaPihakLain.Text : formSkSewaBmnUbah.teNamaPihakLain.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.konversiPeriode() : formSkSewaBmnUbah.konversiPeriode());
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.tePeruntukan.Text : formSkSewaBmnUbah.tePeruntukan.Text);
                parInp.P_JANGKA_WAKTUSpecified = true;
                parInp.P_KETERANGAN = null;
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkSewaBmnTambah.tipePengelola : formSkSewaBmnUbah.tipePengelola);
                ambilDataSewaBmn = new SvcWasdalManfaatCud.execute_pttClient();
                ambilDataSewaBmn.Open();
                ambilDataSewaBmn.Beginexecute(parInp, new AsyncCallback(cudRskSewaBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskSewaBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataSewaBmn = ambilDataSewaBmn.Endexecute(result);
                ambilDataSewaBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsSewaBmn(this.ubahDsSewaBmn), dOutAmbilDataSewaBmn);
            }
            catch(Exception ex)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsSewaBmn(SvcWasdalManfaatCud.OutputParameters dataOutSewaBmnCrud);

        private void ubahDsSewaBmn(SvcWasdalManfaatCud.OutputParameters dataOutSewaBmnCrud)
        {
            if (dataOutSewaBmnCrud.PO_RESULT == "Y")
            {
                SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.DARI_TGLSpecified = true;
                dataPenyama.SD_TGLSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskSewaBmn == null) dsGridRskSewaBmn = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALAMAT_PHK_LAIN = formSkSewaBmnTambah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkSewaBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkSewaBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkSewaBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkSewaBmnTambah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkSewaBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkSewaBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkSewaBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkSewaBmnTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkSewaBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkSewaBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkSewaBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkSewaBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkSewaBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkSewaBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkSewaBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkSewaBmnTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkSewaBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskSewaBmn == null ? 1 : dsGridRskSewaBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkSewaBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.SD_TGL = konfigApp.ToDate(formSkSewaBmnTambah.teSampaiTgl.Text);
                        dataPenyama.DARI_TGL = konfigApp.ToDate(formSkSewaBmnTambah.teDariTgl.Text);
                        //dataPenyama.PERIODE = formSkSewaBmnTambah.konversiPeriode();
                        //dataPenyama.PERUNTUKAN = formSkSewaBmnTambah.tePeruntukan.Text;
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = konfigApp.ToDate(formSkSewaBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkSewaBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkSewaBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkSewaBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkSewaBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkSewaBmnTambah.teAlamatPihakLain.Text;
                        dataPenyama.NM_PHK_LAIN = formSkSewaBmnTambah.teNamaPihakLain.Text;
                        dataPenyama.PERIODE = formSkSewaBmnTambah.konversiPeriode();
                        dataPenyama.THN_ANG = formSkSewaBmnTambah.teTahunAnggaran.Text;
                        dsGridRskSewaBmn.Add(dataPenyama);
                        formSkSewaBmnTambah.gcDaftarAset.Enabled = true;
                        formSkSewaBmnTambah.sbTambah.Enabled = true;
                        formSkSewaBmnTambah.sbHapus.Enabled = true;
                        formSkSewaBmnTambah.sbValidasi.Enabled = true;
                        formSkSewaBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkSewaBmnTambah.teNomorSk.Properties.ReadOnly = false;
                        formSkSewaBmnTambah.teTanggalSk.Properties.ReadOnly = false;
                        formSkSewaBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkSewaBmnTambah.sbCariPemohon.Enabled = false;
                        formSkSewaBmnTambah.sbRefresh.Enabled = true;
                        formSkSewaBmnTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkSewaBmnTambah.cePilihSemua.Enabled = true;
                        formSkSewaBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkSewaBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_MANFAAT = formSkSewaBmnUbah.idSkWasdal;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkSewaBmnUbah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkSewaBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkSewaBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkSewaBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkSewaBmnUbah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkSewaBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkSewaBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkSewaBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkSewaBmnUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkSewaBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkSewaBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkSewaBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkSewaBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkSewaBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkSewaBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkSewaBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkSewaBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkSewaBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkSewaBmnUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkSewaBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkSewaBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkSewaBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkSewaBmnUbah.teNomorSk.Text;
                        dataPenyama.DARI_TGL = formSkSewaBmnUbah.teDariTgl.DateTime;
                        dataPenyama.SD_TGL = formSkSewaBmnUbah.teSampaiTgl.DateTime;
                        //dataPenyama.PERIODE = formSkSewaBmnUbah.konversiPeriode();
                        //dataPenyama.PERUNTUKAN = formSkSewaBmnUbah.tePeruntukan.Text;
                        dataPenyama.STATUS_BMN = gridSkSewaBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkSewaBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = formSkSewaBmnUbah.teTanggalSk.DateTime;
                        dataPenyama.TIPE_PEMOHON = formSkSewaBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkSewaBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkSewaBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkSewaBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkSewaBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkSewaBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkSewaBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkSewaBmnUbah.teAlamatPihakLain.Text;
                        dataPenyama.NM_PHK_LAIN = formSkSewaBmnUbah.teNamaPihakLain.Text;
                        dataPenyama.THN_ANG = formSkSewaBmnUbah.teTahunAnggaran.Text;
                        dataPenyama.PERIODE = formSkSewaBmnUbah.konversiPeriode();
                        dataPenyama.PERUNTUKAN = formSkSewaBmnUbah.tePeruntukan.Text;
                        int _indeksData = dsGridRskSewaBmn.IndexOf(gridSkSewaBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskSewaBmn.Remove(gridSkSewaBmn.dataTerpilih);
                        dsGridRskSewaBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskSewaBmn.Remove(gridSkSewaBmn.dataTerpilih);
                        break;
                }
                gridSkSewaBmn.dsDataSource = dsGridRskSewaBmn;
                gridSkSewaBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutSewaBmnCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PSP BMN

        #endregion

        #region -->> [07] Sub Menu Pinjam Pakai BMN
        ucRskPpBmnGrid gridSkPpBmn;
        ucRskPpBmnForm formSkPpBmnTambah;
        ucRskPpBmnForm formSkPpBmnUbah;
        ucRskPpBmnForm formSkPpBmnDetail;
        private ArrayList dsGridRskPpBmn;
        SvcWasdalManfaatSkSelect.OutputParameters dOutRskPpBmn;
        SvcWasdalManfaatSkSelect.execute_pttClient ambilRskPpBmn;

        private void setEventTombolRskPpBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPpBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPpBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPpBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPpBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPpBmnKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPpBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPpBmnMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPpBmnKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPpBmnKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPpBmn()
        {
            //if (gridSkPpBmn == null)
            //{
                gridSkPpBmn = new RSK.ucRskPpBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPpBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskPpBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPpBmn();
            setPanel(gridSkPpBmn);
        }

        #region --++ Tombol Ribbon
        private void bbiRskPpBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan07), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPpBmnTambah == null)
                {
                    formSkPpBmnTambah = new RSK.ucRskPpBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPpBmn)
                    };
                }
                setPanel(formSkPpBmnTambah);
                formSkPpBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskPpBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPpBmn.dataTerpilih != null)
            {
                if (formSkPpBmnUbah == null)
                {
                    formSkPpBmnUbah = new RSK.ucRskPpBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPpBmn)
                    };
                }
                formSkPpBmnUbah.dataTerpilih = gridSkPpBmn.dataTerpilih;
                setPanel(formSkPpBmnUbah);
                formSkPpBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPpBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPpBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPpBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                        parInp.P_ID_SK_WASDAL_MANFAAT = gridSkPpBmn.dataTerpilih.ID_SK_WASDAL_MANFAAT;
                        parInp.P_ID_PEMOHON = gridSkPpBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPpBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_ID_SATKER = konfigApp.idSatker;
                        parInp.P_KD_SATKER = konfigApp.kodeSatker;
                        parInp.P_UR_SATKER = konfigApp.namaSatker;
                        parInp.P_IS_TB = gridSkPpBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPpBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPpBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPpBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPpBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkPpBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPpBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPpBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPpBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPpBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkPpBmn.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = gridSkPpBmn.dataTerpilih.THN_ANG;
                        parInp.P_ID_KPKNL = konfigApp.idKpknl;
                        parInp.P_KD_KL = konfigApp.kodeKl;
                        parInp.P_TIPE_PEMOHON = gridSkPpBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPpBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_DARI_TGL = konfigApp.DateToString(gridSkPpBmn.dataTerpilih.DARI_TGL);
                        parInp.P_SD_TGL = konfigApp.DateToString(gridSkPpBmn.dataTerpilih.SD_TGL);
                        parInp.P_NM_PHK_LAIN = gridSkPpBmn.dataTerpilih.NM_PHK_LAIN;
                        parInp.P_ALAMAT_PHK_LAIN = gridSkPpBmn.dataTerpilih.ALAMAT_PHK_LAIN;
                        parInp.P_PERUNTUKAN = gridSkPpBmn.dataTerpilih.PERUNTUKAN;
                        parInp.P_PERIODE = gridSkPpBmn.dataTerpilih.PERIODE;
                        parInp.P_JNS_MITRA = "-";
                        parInp.P_KETERANGAN = "-";
                        //parInp.P_TIPE_PENGELOLA = "03";
                        parInp.P_TGL_CREATED = null;
                        ambilDataPpBmn1 = new SvcWasdalManfaatCud.execute_pttClient();
                        ambilDataPpBmn1.Open();
                        ambilDataPpBmn1.Beginexecute(parInp, new AsyncCallback(cudRskPpBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPpBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPpBmn.dataTerpilih != null)
            {
                if (formSkPpBmnDetail == null)
                {
                    formSkPpBmnDetail = new RSK.ucRskPpBmnForm("A");
                    formSkPpBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkPpBmnDetail.dataTerpilih = gridSkPpBmn.dataTerpilih;
                setPanel(formSkPpBmnDetail);
                formSkPpBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPpBmnKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkPpBmn);
            setTombolRskGrid();
            gridSkPpBmn.dsDataSource = dsGridRskPpBmn;
            gridSkPpBmn.displayData();
        }

        private void bbiRskPpBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPpBmn.teNamaKolom.Text = "";
            gridSkPpBmn.teCari.Text = "";
            gridSkPpBmn.fieldDicari = "";
            gridSkPpBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPpBmn();
        }

        private void bbiRskPpBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPpBmn();
            }
        }

        private void bbiRskPpBmnKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskPpBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon Pinjam Pakai BMN

        private void nbiRskPpBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan07;
            konfigApp.kdPelayanan = "07";
            konfigApp.namaPelayanan = konfigApp.namaLayanan07;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPpBmn();
            modeCari = false;
            gridSkPpBmn.teNamaKolom.Text = "";
            gridSkPpBmn.teCari.Text = "";
            gridSkPpBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPpBmn();
        }

        #region --++ Ambil Data PP BMN
        private void getInitRskPpBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatSkSelect.InputParameters parInp = new SvcWasdalManfaatSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
             " (ID_USER={1} " +
              "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
              "OR ID_SATKER = {2} " +
              "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskPpBmn = new SvcWasdalManfaatSkSelect.execute_pttClient();
                ambilRskPpBmn.Open();
                ambilRskPpBmn.Beginexecute(parInp, new AsyncCallback(getRskPpBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPpBmn(IAsyncResult result)
        {
            try
            {
                dOutRskPpBmn = ambilRskPpBmn.Endexecute(result);
                ambilRskPpBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPpBmn(dsRskPpBmn), dOutRskPpBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPpBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut);

        private void dsRskPpBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_MANFAAT[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskPpBmn = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);

                dsGridRskPpBmn.Add(dataOut.SF_READ_WASDAL_MANFAAT[i]);
            }
            gridSkPpBmn.labelTotData.Text = "";
            gridSkPpBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkPpBmn.sbCariOnline.Enabled = !modeCari;
            gridSkPpBmn.dsDataSource = dsGridRskPpBmn;
            gridSkPpBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkPpBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkPpBmn.teCari.Text.Trim();
                string xTiga = gridSkPpBmn.fieldDicari;
                gridSkPpBmn.gvGridSk.ClearColumnsFilter();
                gridSkPpBmn.teNamaKolom.Text = xSatu;
                gridSkPpBmn.teCari.Text = xDua;
                gridSkPpBmn.fieldDicari = xTiga;
            }
            else
                gridSkPpBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskPpBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskPpBmn();
        }
        #endregion Ambil PP BMN

        #region --++ Simpan Data PP BMN
        SvcWasdalManfaatCud.OutputParameters dOutAmbilDataPpBmn1;
        SvcWasdalManfaatCud.execute_pttClient ambilDataPpBmn1;

        private void simpanDataRskPpBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.idSkWasdal : formSkPpBmnUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.idPemohon : formSkPpBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.rgJenisAset.EditValue.ToString() : formSkPpBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teJabatan.Text.Trim() : formSkPpBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.lePenerbitSk.EditValue.ToString() : formSkPpBmnUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.kodePenerbitSkDetail : formSkPpBmnUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPpBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnTambah.teNilaiPenetapan.Text)) : (formSkPpBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teNipPenandaTangan.Text : formSkPpBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teNamaPenandaTangan.Text : formSkPpBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.lePenerbitSk.Text : formSkPpBmnUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teNmPenerbitSkDetail.Text : formSkPpBmnUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teNomorSk.Text.Trim() : formSkPpBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teTanggalSk.EditValue : formSkPpBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teJenisPemohon.Text : formSkPpBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teUraianKeputusan.Text : formSkPpBmnUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teTahunAnggaran.Text : formSkPpBmnUbah.teTahunAnggaran.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teAlamatPihakLain.Text : formSkPpBmnUbah.teAlamatPihakLain.Text);
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkPpBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnTambah.teJangkaWaktu.Text)) : (formSkPpBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnUbah.teJangkaWaktu.Text)));
                parInp.P_JNS_MITRA = null;
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.teNamaPihakLain.Text : formSkPpBmnUbah.teNamaPihakLain.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.konversiPeriode() : formSkPpBmnUbah.konversiPeriode());
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.tePeruntukan.Text : formSkPpBmnUbah.tePeruntukan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPpBmnTambah.tipePengelola : formSkPpBmnUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkPpBmnTambah.filePath) : konfigApp.FileToByteArray(formSkPpBmnUbah.filePath));
                parInp.P_JANGKA_WAKTUSpecified = true;
                parInp.P_KETERANGAN = null;
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataPpBmn1 = new SvcWasdalManfaatCud.execute_pttClient();
                ambilDataPpBmn1.Open();
                ambilDataPpBmn1.Beginexecute(parInp, new AsyncCallback(cudRskPpBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskPpBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPpBmn1 = ambilDataPpBmn1.Endexecute(result);
                ambilDataPpBmn1.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPpBmn(this.ubahDsPpBmn), dOutAmbilDataPpBmn1);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPpBmn(SvcWasdalManfaatCud.OutputParameters dataOutPpBmnCrud);

        private void ubahDsPpBmn(SvcWasdalManfaatCud.OutputParameters dataOutPpBmnCrud)
        {
            if (dataOutPpBmnCrud.PO_RESULT == "Y")
            {
                SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskPpBmn == null) dsGridRskPpBmn = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPpBmnTambah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkPpBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPpBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPpBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPpBmnTambah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkPpBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkPpBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPpBmnTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPpBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPpBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPpBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPpBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPpBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPpBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPpBmnTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPpBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPpBmn == null ? 1 : dsGridRskPpBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkPpBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPpBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPpBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkPpBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPpBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPpBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.PERIODE = formSkPpBmnTambah.konversiPeriode();
                        dataPenyama.PERUNTUKAN = formSkPpBmnTambah.tePeruntukan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkPpBmnTambah.teNamaPihakLain.Text;
                        dataPenyama.THN_ANG = formSkPpBmnTambah.teTahunAnggaran.Text;
                        dsGridRskPpBmn.Add(dataPenyama);
                        formSkPpBmnTambah.gcDaftarAset.Enabled = true;
                        formSkPpBmnTambah.sbTambah.Enabled = true;
                        formSkPpBmnTambah.sbHapus.Enabled = true;
                        formSkPpBmnTambah.sbValidasi.Enabled = true;
                        formSkPpBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkPpBmnTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkPpBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkPpBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkPpBmnTambah.sbCariPemohon.Enabled = false;
                        formSkPpBmnTambah.sbRefresh.Enabled = true;
                        formSkPpBmnTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkPpBmnTambah.cePilihSemua.Enabled = true;
                        formSkPpBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkPpBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_MANFAAT = formSkPpBmnUbah.idSkWasdal;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPpBmnUbah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkPpBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPpBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPpBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPpBmnUbah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkPpBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkPpBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPpBmnUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPpBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPpBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPpBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPpBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPpBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkPpBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkPpBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPpBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPpBmnUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPpBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPpBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkPpBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkPpBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPpBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPpBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPpBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPpBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkPpBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPpBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPpBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkPpBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPpBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPpBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.THN_ANG = formSkPpBmnUbah.teTahunAnggaran.Text;
                        dataPenyama.PERUNTUKAN = formSkPpBmnUbah.tePeruntukan.Text;
                        dataPenyama.PERIODE = formSkPpBmnUbah.konversiPeriode();
                        dataPenyama.NM_PHK_LAIN = formSkPpBmnUbah.teNamaPihakLain.Text;
                        int _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPpBmn.Remove(gridSkPpBmn.dataTerpilih);
                        dsGridRskPpBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPpBmn.Remove(gridSkPpBmn.dataTerpilih);
                        break;
                }
                gridSkPpBmn.dsDataSource = dsGridRskPpBmn;
                gridSkPpBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutPpBmnCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PP BMN

        #endregion

        #region -->> [08] Sub Menu KERJA SAMA PEMANFAATAN
        RSK.ucRskKspBmnGrid gridSkKspBmn;
        RSK.ucRskKspBmnForm formSkKspBmnTambah;
        RSK.ucRskKspBmnForm formSkKspBmnUbah;
        RSK.ucRskKspBmnForm formSkKspBmnDetail;
        private ArrayList dsGridRskKspBmn;
        SvcWasdalManfaatSkSelect.OutputParameters dOutRskKspBmn;
        SvcWasdalManfaatSkSelect.execute_pttClient ambilRskKspBmn;

        private void setEventTombolRskKspBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskKspBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskKspBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskKspBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskKspBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskKspBmnKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskKspBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskKspBmnMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPpBmnKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPpBmnKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkKspBmn()
        {
            //if (gridSkKspBmn == null)
            //{
                gridSkKspBmn = new RSK.ucRskKspBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskKspBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskKspBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskKspBmn();
            setPanel(gridSkKspBmn);
        }

        #region --++ Tombol Ribbon KSP BMN
        private void bbiRskKspBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan08), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkKspBmnTambah == null)
                {
                    formSkKspBmnTambah = new RSK.ucRskKspBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskKspBmn)
                    };
                }
                setPanel(formSkKspBmnTambah);
                formSkKspBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskKspBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkKspBmn.dataTerpilih != null)
            {
                if (formSkKspBmnUbah == null)
                {
                    formSkKspBmnUbah = new RSK.ucRskKspBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskKspBmn)
                    };
                }
                formSkKspBmnUbah.dataTerpilih = gridSkKspBmn.dataTerpilih;
                setPanel(formSkKspBmnUbah);
                formSkKspBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskKspBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkKspBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkKspBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                        parInp.P_ID_SK_WASDAL_MANFAAT = gridSkKspBmn.dataTerpilih.ID_SK_WASDAL_MANFAAT;
                        parInp.P_ID_PEMOHON = gridSkKspBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkKspBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkKspBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkKspBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkKspBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkKspBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkKspBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkKspBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkKspBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkKspBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkKspBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkKspBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkKspBmn.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = gridSkKspBmn.dataTerpilih.THN_ANG;
                        parInp.P_ID_KPKNL = konfigApp.idKpknl;
                        parInp.P_KD_KL = konfigApp.kodeKl;
                        parInp.P_TIPE_PEMOHON = gridSkKspBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkKspBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_DARI_TGL = konfigApp.DateToString(gridSkKspBmn.dataTerpilih.DARI_TGL);
                        parInp.P_SD_TGL = konfigApp.DateToString(gridSkKspBmn.dataTerpilih.SD_TGL);
                        parInp.P_NM_PHK_LAIN = gridSkKspBmn.dataTerpilih.NM_PHK_LAIN;
                        parInp.P_ALAMAT_PHK_LAIN = gridSkKspBmn.dataTerpilih.ALAMAT_PHK_LAIN;
                        parInp.P_PERUNTUKAN = gridSkKspBmn.dataTerpilih.PERUNTUKAN;
                        parInp.P_PERIODE = gridSkKspBmn.dataTerpilih.PERIODE;
                        parInp.P_JNS_MITRA = "-";
                        parInp.P_KETERANGAN = "-";
                        //parInp.P_TIPE_PENGELOLA = "03";
                        parInp.P_TGL_CREATED = null;
                        parInp.P_ID_SATKER = gridSkKspBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkKspBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkKspBmn.dataTerpilih.UR_SATKER;
                        ambilDataKspBmn = new SvcWasdalManfaatCud.execute_pttClient();
                        ambilDataKspBmn.Open();
                        ambilDataKspBmn.Beginexecute(parInp, new AsyncCallback(cudRskKspBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskKspBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkKspBmn.dataTerpilih != null)
            {
                if (formSkKspBmnDetail == null)
                {
                    formSkKspBmnDetail = new RSK.ucRskKspBmnForm("A");
                    formSkKspBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkKspBmnDetail.dataTerpilih = gridSkKspBmn.dataTerpilih;
                setPanel(formSkKspBmnDetail);
                formSkKspBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskKspBmnKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkKspBmn);
            setTombolRskGrid();
            gridSkKspBmn.dsDataSource = dsGridRskKspBmn;
            gridSkKspBmn.displayData();
        }

        private void bbiRskKspBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkKspBmn.teNamaKolom.Text = "";
            gridSkKspBmn.teCari.Text = "";
            gridSkKspBmn.fieldDicari = "";
            gridSkKspBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskKspBmn();
        }

        private void bbiRskKspBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskKspBmn();
            }
        }

        private void bbiRskKspBmnKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskKspBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon

        private void nbiRskKsp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan08;
            konfigApp.kdPelayanan = "08";
            konfigApp.namaPelayanan = konfigApp.namaLayanan08;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkKspBmn();
            modeCari = false;
            gridSkKspBmn.teNamaKolom.Text = "";
            gridSkKspBmn.teCari.Text = "";
            gridSkKspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskKspBmn();
        }

        #region --++ Ambil Data KSP BMN
        private void getInitRskKspBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatSkSelect.InputParameters parInp = new SvcWasdalManfaatSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
               // parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
             " (ID_USER={1} " +
              "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
              "OR ID_SATKER = {2} " +
              "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskKspBmn = new SvcWasdalManfaatSkSelect.execute_pttClient();
                ambilRskKspBmn.Open();
                ambilRskKspBmn.Beginexecute(parInp, new AsyncCallback(getRskKspBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskKspBmn(IAsyncResult result)
        {
            try
            {
                dOutRskKspBmn = ambilRskKspBmn.Endexecute(result);
                ambilRskKspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskKspBmn(dsRskKspBmn), dOutRskKspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskKspBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut);

        private void dsRskKspBmn(SvcWasdalManfaatSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_MANFAAT[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskKspBmn = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);

                dsGridRskKspBmn.Add(dataOut.SF_READ_WASDAL_MANFAAT[i]);
            }
            gridSkKspBmn.labelTotData.Text = "";
            gridSkKspBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkKspBmn.sbCariOnline.Enabled = !modeCari;
            gridSkKspBmn.dsDataSource = dsGridRskKspBmn;
            gridSkKspBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkKspBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkKspBmn.teCari.Text.Trim();
                string xTiga = gridSkKspBmn.fieldDicari;
                gridSkKspBmn.gvGridSk.ClearColumnsFilter();
                gridSkKspBmn.teNamaKolom.Text = xSatu;
                gridSkKspBmn.teCari.Text = xDua;
                gridSkKspBmn.fieldDicari = xTiga;
            }
            else
                gridSkKspBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskKspBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskKspBmn();
        }
        #endregion Ambil KSP BMN

        #region --++ Simpan Data KSP BMN
        SvcWasdalManfaatCud.OutputParameters dOutAmbilDataKspBmn;
        SvcWasdalManfaatCud.execute_pttClient ambilDataKspBmn;

        private void simpanDataRskKspBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.idSkWasdal : formSkKspBmnUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.idPemohon : formSkKspBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.rgJenisAset.EditValue.ToString() : formSkKspBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teJabatan.Text.Trim() : formSkKspBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.lePenerbitSk.EditValue.ToString() : formSkKspBmnUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.kodePenerbitSkDetail : formSkKspBmnUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkKspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnTambah.teNilaiPenetapan.Text)) : (formSkKspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teNipPenandaTangan.Text : formSkKspBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teNamaPenandaTangan.Text : formSkKspBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.lePenerbitSk.Text : formSkKspBmnUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teNmPenerbitSkDetail.Text : formSkKspBmnUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teNomorSk.Text.Trim() : formSkKspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teTanggalSk.EditValue : formSkKspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teJenisPemohon.Text : formSkKspBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teUraianKeputusan.Text : formSkKspBmnUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teTahunAnggaran.Text : formSkKspBmnUbah.teTahunAnggaran.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teAlamatPihakLain.Text : formSkKspBmnUbah.teAlamatPihakLain.Text);
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkKspBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnTambah.teJangkaWaktu.Text)) : (formSkKspBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnUbah.teJangkaWaktu.Text)));
                parInp.P_JNS_MITRA = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teJenisMitra.EditValue.ToString() : formSkKspBmnUbah.teJenisMitra.EditValue.ToString());
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.teNamaPihakLain.Text : formSkKspBmnUbah.teNamaPihakLain.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.konversiPeriode() : formSkKspBmnUbah.konversiPeriode());
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.tePeruntukan.Text : formSkKspBmnUbah.tePeruntukan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkKspBmnTambah.tipePengelola : formSkKspBmnUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkKspBmnTambah.filePath) : konfigApp.FileToByteArray(formSkKspBmnUbah.filePath));
                parInp.P_JANGKA_WAKTUSpecified = true;
                parInp.P_KETERANGAN = null;
                parInp.P_KD_KL = konfigApp.kodeKl; 
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataKspBmn = new SvcWasdalManfaatCud.execute_pttClient();
                ambilDataKspBmn.Open();
                ambilDataKspBmn.Beginexecute(parInp, new AsyncCallback(cudRskKspBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskKspBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataKspBmn = ambilDataKspBmn.Endexecute(result);
                ambilDataKspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsKspBmn(this.ubahDsKspBmn), dOutAmbilDataKspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsKspBmn(SvcWasdalManfaatCud.OutputParameters dataOutKpknlCrud);

        private void ubahDsKspBmn(SvcWasdalManfaatCud.OutputParameters dataOutKpknlCrud)
        {
            if (dataOutKpknlCrud.PO_RESULT == "Y")
            {
                SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskKspBmn == null) dsGridRskKspBmn = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALAMAT_PHK_LAIN = formSkKspBmnTambah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkKspBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkKspBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkKspBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkKspBmnTambah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkKspBmnTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkKspBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkKspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkKspBmnTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkKspBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkKspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkKspBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkKspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkKspBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkKspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkKspBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkKspBmnTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkKspBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskKspBmn == null ? 1 : dsGridRskKspBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkKspBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkKspBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkKspBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkKspBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkKspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkKspBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.PERIODE = formSkKspBmnTambah.konversiPeriode();
                        dataPenyama.PERUNTUKAN = formSkKspBmnTambah.tePeruntukan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkKspBmnTambah.teNamaPihakLain.Text;
                        dataPenyama.THN_ANG = formSkKspBmnTambah.teTahunAnggaran.Text;
                        dsGridRskKspBmn.Add(dataPenyama);
                        formSkKspBmnTambah.gcDaftarAset.Enabled = true;
                        formSkKspBmnTambah.sbTambah.Enabled = true;
                        formSkKspBmnTambah.sbHapus.Enabled = true;
                        formSkKspBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkKspBmnTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkKspBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkKspBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkKspBmnTambah.sbCariPemohon.Enabled = false;
                        formSkKspBmnTambah.sbRefresh.Enabled = true;
                        formSkKspBmnTambah.sbValidasi.Enabled = true;
                        formSkKspBmnTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkKspBmnTambah.cePilihSemua.Enabled = true;
                        //formSkKspBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_MANFAAT = formSkKspBmnUbah.idSkWasdal;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkKspBmnUbah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkKspBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkKspBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkKspBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkKspBmnUbah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkKspBmnUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkKspBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkKspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkKspBmnUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkKspBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkKspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkKspBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkKspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkKspBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkKspBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkKspBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkKspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkKspBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkKspBmnUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkKspBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkKspBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkKspBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkKspBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkKspBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkKspBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkKspBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkKspBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkKspBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkKspBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkKspBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkKspBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkKspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkKspBmnUbah.teUraianKeputusan.Text;
                        dataPenyama.PERIODE = formSkKspBmnUbah.konversiPeriode();
                        dataPenyama.PERUNTUKAN = formSkKspBmnUbah.tePeruntukan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkKspBmnUbah.teNamaPihakLain.Text;
                        dataPenyama.THN_ANG = formSkKspBmnUbah.teTahunAnggaran.Text;
                        int _indeksData = dsGridRskKspBmn.IndexOf(gridSkKspBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskKspBmn.Remove(gridSkKspBmn.dataTerpilih);
                        dsGridRskKspBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskKspBmn.Remove(gridSkKspBmn.dataTerpilih);
                        break;
                }
                gridSkKspBmn.dsDataSource = dsGridRskKspBmn;
                gridSkKspBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutKpknlCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PSP BMN

        #endregion

        #region -->> [09] Sub Menu KSPI
        ucRskBgsGrid gridSkBgs;
        ucRskBgsForm formSkBgsTambah;
        ucRskBgsForm formSkBgsUbah;
        ucRskBgsForm formSkBgsDetail;
        private ArrayList dsGridRskBgs;
        SvcWasdalManfaatSkSelect.OutputParameters dOutRskBgs;
        SvcWasdalManfaatSkSelect.execute_pttClient ambilRskBgs;

        private void setEventTombolRskBgs()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskBgsTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskBgsUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskBgsHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskBgsDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskBgsKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskBgsRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskBgsMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskBgsKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskBgsKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkBgs()
        {
            //if (gridSkBgs == null)
            //{
                gridSkBgs = new RSK.ucRskBgsGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskBgs),
                    detailDataGrid = new DetailDataGrid(bbiRskBgsUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskBgs();
            setPanel(gridSkBgs);
        }

        #region --++ Tombol Ribbon KSPI
        private void bbiRskBgsTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan09), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkBgsTambah == null)
                {
                    formSkBgsTambah = new RSK.ucRskBgsForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBgs)
                    };
                }
                setPanel(formSkBgsTambah);
                formSkBgsTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskBgsUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBgs.dataTerpilih != null)
            {
                if (formSkBgsUbah == null)
                {
                    formSkBgsUbah = new RSK.ucRskBgsForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBgs)
                    };
                }
                formSkBgsUbah.dataTerpilih = gridSkBgs.dataTerpilih;
                setPanel(formSkBgsUbah);
                formSkBgsUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBgsHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBgs.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkBgs.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                        parInp.P_ID_SK_WASDAL_MANFAAT = gridSkBgs.dataTerpilih.ID_SK_WASDAL_MANFAAT;
                        
                        parInp.P_ID_PEMOHON = gridSkBgs.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkBgs.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkBgs.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkBgs.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkBgs.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkBgs.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkBgs.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkBgs.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkBgs.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkBgs.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkBgs.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkBgs.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkBgs.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = gridSkBgs.dataTerpilih.THN_ANG;
                        parInp.P_ID_KPKNL = konfigApp.idKpknl;
                        parInp.P_KD_KL = konfigApp.kodeKl;
                        parInp.P_TIPE_PEMOHON = gridSkBgs.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkBgs.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_DARI_TGL = konfigApp.DateToString(gridSkBgs.dataTerpilih.DARI_TGL);
                        parInp.P_SD_TGL = konfigApp.DateToString(gridSkBgs.dataTerpilih.SD_TGL);
                        parInp.P_NM_PHK_LAIN = gridSkBgs.dataTerpilih.NM_PHK_LAIN;
                        parInp.P_ALAMAT_PHK_LAIN = gridSkBgs.dataTerpilih.ALAMAT_PHK_LAIN;
                        parInp.P_PERUNTUKAN = gridSkBgs.dataTerpilih.PERUNTUKAN;
                        parInp.P_PERIODE = gridSkBgs.dataTerpilih.PERIODE;
                        parInp.P_JNS_MITRA = "-";
                        parInp.P_KETERANGAN = "-";
                        //parInp.P_TIPE_PENGELOLA = "03";
                        parInp.P_TGL_CREATED = null;
                        parInp.P_ID_SATKER = gridSkBgs.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkBgs.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkBgs.dataTerpilih.UR_SATKER;
                        ambilDataBgs = new SvcWasdalManfaatCud.execute_pttClient();
                        ambilDataBgs.Open();
                        ambilDataBgs.Beginexecute(parInp, new AsyncCallback(cudRskBgs), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskBgsDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBgs.dataTerpilih != null)
            {
                if (formSkBgsDetail == null)
                {
                    formSkBgsDetail = new RSK.ucRskBgsForm("A");
                    formSkBgsDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkBgsDetail.dataTerpilih = gridSkBgs.dataTerpilih;
                setPanel(formSkBgsDetail);
                formSkBgsDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBgsKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkBgs);
            setTombolRskGrid();
            gridSkBgs.dsDataSource = dsGridRskBgs;
            gridSkBgs.displayData();
        }

        private void bbiRskBgsRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkBgs.teNamaKolom.Text = "";
            gridSkBgs.teCari.Text = "";
            gridSkBgs.fieldDicari = "";
            gridSkBgs.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskBgs();
        }

        private void bbiRskBgsMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskBgs();
            }
        }

        private void bbiRskBgsKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskBgsKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon KSPI

        private void nbiRskBgs_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan09;
            konfigApp.kdPelayanan = "09";
            konfigApp.namaPelayanan = konfigApp.namaLayanan09;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkBgs();
            modeCari = false;
            gridSkBgs.teNamaKolom.Text = "";
            gridSkBgs.teCari.Text = "";
            gridSkBgs.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskBgs();
        }

        #region --++ Ambil Data KSPI
        private void getInitRskBgs()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatSkSelect.InputParameters parInp = new SvcWasdalManfaatSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format(" KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '09'  AND (ID_USER={0} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1})) AND (ID_SATKER = {1} OR ID_SATKER_PARENT= {1}) {2}", konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '09' AND " +
            " (ID_USER={0} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={1}) " +
             "OR ID_SATKER = {1} " +
             "OR ID_SATKER_PARENT= {1}) {2}", konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskBgs = new SvcWasdalManfaatSkSelect.execute_pttClient();
                ambilRskBgs.Open();
                ambilRskBgs.Beginexecute(parInp, new AsyncCallback(getRskBgs), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskBgs(IAsyncResult result)
        {
            try
            {
                dOutRskBgs = ambilRskBgs.Endexecute(result);
                ambilRskBgs.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskBgs(dsRskBgs), dOutRskBgs);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskBgs(SvcWasdalManfaatSkSelect.OutputParameters dataOut);

        private void dsRskBgs(SvcWasdalManfaatSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_MANFAAT[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskBgs = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskBgs.Add(dataOut.SF_READ_WASDAL_MANFAAT[i]);
            }
            gridSkBgs.labelTotData.Text = "";
            gridSkBgs.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkBgs.sbCariOnline.Enabled = !modeCari;
            gridSkBgs.dsDataSource = dsGridRskBgs;
            gridSkBgs.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkBgs.teNamaKolom.Text.Trim();
                string xDua = gridSkBgs.teCari.Text.Trim();
                string xTiga = gridSkBgs.fieldDicari;
                gridSkBgs.gvGridSk.ClearColumnsFilter();
                gridSkBgs.teNamaKolom.Text = xSatu;
                gridSkBgs.teCari.Text = xDua;
                gridSkBgs.fieldDicari = xTiga;
            }
            else
                gridSkBgs.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskBgs(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskBgs();
        }
        #endregion Ambil BGS/BSG

        #region --++ Simpan Data KSPI
        SvcWasdalManfaatCud.OutputParameters dOutAmbilDataBgs;
        SvcWasdalManfaatCud.execute_pttClient ambilDataBgs;

        private void simpanDataRskBgs(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.idSkWasdal : formSkBgsUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.idPemohon : formSkBgsUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.rgJenisAset.EditValue.ToString() : formSkBgsUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teJabatan.Text.Trim() : formSkBgsUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.lePenerbitSk.EditValue.ToString() : formSkBgsUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.kodePenerbitSkDetail : formSkBgsUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkBgsTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBgsTambah.teNilaiPenetapan.Text)) : (formSkBgsUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBgsUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teNipPenandaTangan.Text : formSkBgsUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teNamaPenandaTangan.Text : formSkBgsUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.lePenerbitSk.Text : formSkBgsUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teNmPenerbitSkDetail.Text : formSkBgsUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teNomorSk.Text.Trim() : formSkBgsUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teTanggalSk.EditValue : formSkBgsUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teJenisPemohon.Text : formSkBgsUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teUraianKeputusan.Text : formSkBgsUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teTahunAnggaran.Text : formSkBgsUbah.teTahunAnggaran.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teAlamatPihakLain.Text : formSkBgsUbah.teAlamatPihakLain.Text);
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkBgsTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBgsTambah.teJangkaWaktu.Text)) : (formSkBgsUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBgsUbah.teJangkaWaktu.Text)));
                parInp.P_JNS_MITRA = null;
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.teNamaPihakLain.Text : formSkBgsUbah.teNamaPihakLain.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.konversiPeriode() : formSkBgsUbah.konversiPeriode());
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.tePeruntukan.Text : formSkBgsUbah.tePeruntukan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkBgsTambah.tipePengelola : formSkBgsUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkBgsTambah.filePath) : konfigApp.FileToByteArray(formSkBgsUbah.filePath));
                parInp.P_JANGKA_WAKTUSpecified = true;
                //parInp.P_KETERANGAN = null;
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataBgs = new SvcWasdalManfaatCud.execute_pttClient();
                ambilDataBgs.Open();
                ambilDataBgs.Beginexecute(parInp, new AsyncCallback(cudRskBgs), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskBgs(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBgs = ambilDataBgs.Endexecute(result);
                ambilDataBgs.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsBgs(this.ubahDsBgs), dOutAmbilDataBgs);
            }
            catch (Exception e)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsBgs(SvcWasdalManfaatCud.OutputParameters dataOutBgsCrud);

        private void ubahDsBgs(SvcWasdalManfaatCud.OutputParameters dataOutBgsCrud)
        {
            if (dataOutBgsCrud.PO_RESULT == "Y")
            {
                SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskBgs == null) dsGridRskBgs = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALAMAT_PHK_LAIN = formSkBgsTambah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkBgsTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBgsTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkBgsTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBgsTambah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkBgsTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBgsTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkBgsTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBgsTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBgsTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBgsTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBgsTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBgsTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBgsTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBgsTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBgsTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBgsTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkBgsTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBgsTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBgsTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBgsTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskBgs == null ? 1 : dsGridRskBgs.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkBgsTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkBgsTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkBgsTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkBgsTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBgsTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBgsTambah.teUraianKeputusan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkBgsTambah.teNamaPihakLain.Text;
                        dataPenyama.PERUNTUKAN = formSkBgsTambah.tePeruntukan.Text;
                        dataPenyama.THN_ANG = formSkBgsTambah.teTahunAnggaran.Text;
                        dataPenyama.PERIODE = formSkBgsTambah.konversiPeriode();
                        dsGridRskBgs.Add(dataPenyama);
                        formSkBgsTambah.gcDaftarAset.Enabled = true;
                        formSkBgsTambah.sbTambah.Enabled = true;
                        formSkBgsTambah.sbHapus.Enabled = true;
                        formSkBgsTambah.sbValidAset.Enabled = true;
                        formSkBgsTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkBgsTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkBgsTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkBgsTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkBgsTambah.sbCariPemohon.Enabled = false;
                        formSkBgsTambah.sbRefresh.Enabled = true;
                        formSkBgsTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkBgsTambah.cePilihSemua.Enabled = true;
                        formSkBgsTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkBgsTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_MANFAAT = formSkBgsUbah.idSkWasdal;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkBgsUbah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkBgsUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBgsUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkBgsUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBgsUbah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkBgsUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBgsUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkBgsUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBgsUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBgsUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBgsUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBgsUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBgsUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBgsUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBgsUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBgsUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBgsUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkBgs.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkBgsUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBgsUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBgsUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBgsUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkBgs.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkBgs.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkBgsUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkBgs.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkBgs.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkBgsUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkBgsUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkBgs.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkBgs.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkBgs.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkBgsUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBgsUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBgsUbah.teUraianKeputusan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkBgsUbah.teNamaPihakLain.Text;
                        dataPenyama.PERUNTUKAN = formSkBgsUbah.tePeruntukan.Text;
                        dataPenyama.THN_ANG = formSkBgsUbah.teTahunAnggaran.Text;
                        dataPenyama.PERIODE = formSkBgsUbah.konversiPeriode();
                        int _indeksData = dsGridRskBgs.IndexOf(gridSkBgs.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskBgs.Remove(gridSkBgs.dataTerpilih);
                        dsGridRskBgs.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskBgs.Remove(gridSkBgs.dataTerpilih);
                        break;
                }
                gridSkBgs.dsDataSource = dsGridRskBgs;
                gridSkBgs.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutBgsCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data KSPI

        #endregion

        #region -->> [10] Sub Menu BGS/BSG
        RSK.ucRskBsgGrid gridSkBsg;
        RSK.ucRskBsgForm formSkBsgTambah;
        RSK.ucRskBsgForm formSkBsgUbah;
        RSK.ucRskBsgForm formSkBsgDetail;
        private ArrayList dsGridRskBsg;
        SvcWasdalManfaatSkSelect.OutputParameters dOutRskBsg;
        SvcWasdalManfaatSkSelect.execute_pttClient ambilRskBsg;

        private void setEventTombolRskBsg()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskBsgTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskBsgUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskBsgHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskBsgDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskBsgKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskBsgRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskBsgMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskBsgKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskBsgKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkBsg()
        {
            //if (gridSkBsg == null)
            //{
                gridSkBsg = new RSK.ucRskBsgGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskBsg),
                    detailDataGrid = new DetailDataGrid(bbiRskBsgUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskBsg();
            setPanel(gridSkBsg);
        }

        #region --++ Tombol Ribbon BGS/BSG
        private void bbiRskBsgTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan10), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkBsgTambah == null)
                {
                    formSkBsgTambah = new RSK.ucRskBsgForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBsg)
                    };
                }
                setPanel(formSkBsgTambah);
                formSkBsgTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskBsgUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBsg.dataTerpilih != null)
            {
                if (formSkBsgUbah == null)
                {
                    formSkBsgUbah = new RSK.ucRskBsgForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBsg)
                    };
                }
                formSkBsgUbah.dataTerpilih = gridSkBsg.dataTerpilih;
                setPanel(formSkBsgUbah);
                formSkBsgUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBsgHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBsg.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkBsg.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                        parInp.P_ID_SK_WASDAL_MANFAAT = gridSkBsg.dataTerpilih.ID_SK_WASDAL_MANFAAT;
                        parInp.P_ID_PEMOHON = gridSkBsg.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkBsg.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkBsg.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkBsg.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkBsg.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkBsg.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkBsg.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkBsg.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkBsg.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkBsg.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkBsg.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkBsg.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TGL_SK = konfigApp.DateToString(gridSkBsg.dataTerpilih.TGL_SK);
                        parInp.P_THN_ANG = gridSkBsg.dataTerpilih.THN_ANG;
                        parInp.P_ID_KPKNL = konfigApp.idKpknl;
                        parInp.P_KD_KL = konfigApp.kodeKl;
                        parInp.P_TIPE_PEMOHON = gridSkBsg.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkBsg.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_DARI_TGL = konfigApp.DateToString(gridSkBsg.dataTerpilih.DARI_TGL);
                        parInp.P_SD_TGL = konfigApp.DateToString(gridSkBsg.dataTerpilih.SD_TGL);
                        parInp.P_NM_PHK_LAIN = gridSkBsg.dataTerpilih.NM_PHK_LAIN;
                        parInp.P_ALAMAT_PHK_LAIN = gridSkBsg.dataTerpilih.ALAMAT_PHK_LAIN;
                        parInp.P_PERUNTUKAN = gridSkBsg.dataTerpilih.PERUNTUKAN;
                        parInp.P_PERIODE = gridSkBsg.dataTerpilih.PERIODE;
                        parInp.P_JNS_MITRA = "-";
                        parInp.P_KETERANGAN = "-";
                        //parInp.P_TIPE_PENGELOLA = "03";
                        parInp.P_TGL_CREATED = null;
                        parInp.P_ID_SATKER = gridSkBsg.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkBsg.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkBsg.dataTerpilih.UR_SATKER;
                        ambilDataBsg = new SvcWasdalManfaatCud.execute_pttClient();
                        ambilDataBsg.Open();
                        ambilDataBsg.Beginexecute(parInp, new AsyncCallback(cudRskBsg), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskBsgDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBsg.dataTerpilih != null)
            {
                if (formSkBsgDetail == null)
                {
                    formSkBsgDetail = new RSK.ucRskBsgForm("A");
                    formSkBsgDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkBsgDetail.dataTerpilih = gridSkBsg.dataTerpilih;
                setPanel(formSkBsgDetail);
                formSkBsgDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBsgKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkBsg);
            setTombolRskGrid();
            gridSkBsg.dsDataSource = dsGridRskBsg;
            gridSkBsg.displayData();
        }

        private void bbiRskBsgRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkBsg.teNamaKolom.Text = "";
            gridSkBsg.teCari.Text = "";
            gridSkBsg.fieldDicari = "";
            gridSkBsg.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskBsg();
        }

        private void bbiRskBsgMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskBsg();
            }
        }

        private void bbiRskBsgKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskBsgKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon BGS/BSG

        private void nbiRskBsg_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan10;
            konfigApp.kdPelayanan = "10";
            konfigApp.namaPelayanan = konfigApp.namaLayanan10;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkBsg();
            modeCari = false;
            gridSkBsg.teNamaKolom.Text = "";
            gridSkBsg.teCari.Text = "";
            gridSkBsg.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskBsg();
        }

        #region --++ Ambil Data BGS/BSG
        private void getInitRskBsg()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatSkSelect.InputParameters parInp = new SvcWasdalManfaatSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskBsg = new SvcWasdalManfaatSkSelect.execute_pttClient();
                ambilRskBsg.Open();
                ambilRskBsg.Beginexecute(parInp, new AsyncCallback(getRskBsg), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskBsg(IAsyncResult result)
        {
            try
            {
                dOutRskBsg = ambilRskBsg.Endexecute(result);
                ambilRskBsg.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskBsg(dsRskBsg), dOutRskBsg);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskBsg(SvcWasdalManfaatSkSelect.OutputParameters dataOut);

        private void dsRskBsg(SvcWasdalManfaatSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_MANFAAT[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskBsg = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_READ_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskBsg.Add(dataOut.SF_READ_WASDAL_MANFAAT[i]);
            }
            gridSkBsg.labelTotData.Text = "";
            gridSkBsg.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkBsg.sbCariOnline.Enabled = !modeCari;
            gridSkBsg.dsDataSource = dsGridRskBsg;
            gridSkBsg.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkBsg.teNamaKolom.Text.Trim();
                string xDua = gridSkBsg.teCari.Text.Trim();
                string xTiga = gridSkBsg.fieldDicari;
                gridSkBsg.gvGridSk.ClearColumnsFilter();
                gridSkBsg.teNamaKolom.Text = xSatu;
                gridSkBsg.teCari.Text = xDua;
                gridSkBsg.fieldDicari = xTiga;
            }
            else
                gridSkBsg.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskBsg(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskBsg();
        }
        #endregion Ambil BGS/BSG

        #region --++ Simpan Data BGS/BSG
        SvcWasdalManfaatCud.OutputParameters dOutAmbilDataBsg;
        SvcWasdalManfaatCud.execute_pttClient ambilDataBsg;

        private void simpanDataRskBsg(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatCud.InputParameters parInp = new SvcWasdalManfaatCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.idSkWasdal : formSkBsgUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.idPemohon : formSkBsgUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.rgJenisAset.EditValue.ToString() : formSkBsgUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teJabatan.Text.Trim() : formSkBsgUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.lePenerbitSk.EditValue.ToString() : formSkBsgUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.kodePenerbitSkDetail : formSkBsgUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkBsgTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBsgTambah.teNilaiPenetapan.Text)) : (formSkBsgUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBsgUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teNipPenandaTangan.Text : formSkBsgUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teNamaPenandaTangan.Text : formSkBsgUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.lePenerbitSk.Text : formSkBsgUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teNmPenerbitSkDetail.Text : formSkBsgUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teNomorSk.Text.Trim() : formSkBsgUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teTanggalSk.EditValue : formSkBsgUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teJenisPemohon.Text : formSkBsgUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teUraianKeputusan.Text : formSkBsgUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teTahunAnggaran.Text : formSkBsgUbah.teTahunAnggaran.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teAlamatPihakLain.Text : formSkBsgUbah.teAlamatPihakLain.Text);
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkBsgTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBsgTambah.teJangkaWaktu.Text)) : (formSkBsgUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBsgUbah.teJangkaWaktu.Text)));
                parInp.P_JNS_MITRA = null;
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.teNamaPihakLain.Text : formSkBsgUbah.teNamaPihakLain.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.konversiPeriode() : formSkBsgUbah.konversiPeriode());
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.tePeruntukan.Text : formSkBsgUbah.tePeruntukan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkBsgTambah.tipePengelola : formSkBsgUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkBsgTambah.filePath) : konfigApp.FileToByteArray(formSkBsgUbah.filePath));
                parInp.P_JANGKA_WAKTUSpecified = true;
                parInp.P_KETERANGAN = null;
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataBsg = new SvcWasdalManfaatCud.execute_pttClient();
                ambilDataBsg.Open();
                ambilDataBsg.Beginexecute(parInp, new AsyncCallback(cudRskBsg), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskBsg(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBsg = ambilDataBsg.Endexecute(result);
                ambilDataBsg.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsBsg(this.ubahDsBsg), dOutAmbilDataBsg);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsBsg(SvcWasdalManfaatCud.OutputParameters dataOutBsgCrud);

        private void ubahDsBsg(SvcWasdalManfaatCud.OutputParameters dataOutBsgCrud)
        {
            if (dataOutBsgCrud.PO_RESULT == "Y")
            {
                SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                if (dsGridRskBsg == null) dsGridRskBsg = new ArrayList();
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALAMAT_PHK_LAIN = formSkBsgTambah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkBsgTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBsgTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkBsgTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBsgTambah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkBsgTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBsgTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkBsgTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBsgTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBsgTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBsgTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBsgTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBsgTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBsgTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBsgTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBsgTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBsgTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkBsgTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBsgTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBsgTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBsgTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskBsg == null ? 1 : dsGridRskBsg.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkBsgTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkBsgTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkBsgTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkBsgTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBsgTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBsgTambah.teUraianKeputusan.Text;
                        dataPenyama.THN_ANG = formSkBsgTambah.teTahunAnggaran.Text;
                        dataPenyama.PERUNTUKAN = formSkBsgTambah.tePeruntukan.Text;
                        dataPenyama.PERIODE = formSkBsgTambah.konversiPeriode();
                        dataPenyama.NM_PHK_LAIN = formSkBsgTambah.teNamaPihakLain.Text;
                        dsGridRskBsg.Add(dataPenyama);
                        formSkBsgTambah.gcDaftarAset.Enabled = true;
                        formSkBsgTambah.sbTambah.Enabled = true;
                        formSkBsgTambah.sbHapus.Enabled = true;
                        formSkBsgTambah.sbValidAset.Enabled = true;
                        formSkBsgTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkBsgTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkBsgTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkBsgTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkBsgTambah.sbCariPemohon.Enabled = false;
                        formSkBsgTambah.sbRefresh.Enabled = true;
                        formSkBsgTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkBsgTambah.cePilihSemua.Enabled = true;
                        formSkBsgTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkBsgTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_MANFAAT = formSkBgsUbah.idSkWasdal;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkBsgUbah.teAlamatPihakLain.Text;
                        dataPenyama.ID_PEMOHON = formSkBsgUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBsgUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkBsgUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBsgUbah.teJabatan.Text;
                        dataPenyama.JANGKA_WAKTU = formSkBsgUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkBsgUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkBsgUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBsgUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBsgUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBsgUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBsgUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBsgUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBsgUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBsgUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBsgUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBsgUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkBsg.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkBsgUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBsgUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBsgUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBsgUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkBsg.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkBsg.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkBsgUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkBsg.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkBsg.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkBsgUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkBsgUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkBsg.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkBsg.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkBsg.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkBsgUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBsgUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBsgUbah.teUraianKeputusan.Text;
                        dataPenyama.PERIODE = formSkBsgUbah.konversiPeriode();
                        dataPenyama.PERUNTUKAN = formSkBsgUbah.tePeruntukan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkBsgUbah.teNamaPihakLain.Text;
                        dataPenyama.THN_ANG = formSkBsgUbah.teTahunAnggaran.Text;
                        int _indeksData = dsGridRskBsg.IndexOf(gridSkBsg.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskBsg.Remove(gridSkBsg.dataTerpilih);
                        dsGridRskBsg.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskBsg.Remove(gridSkBsg.dataTerpilih);
                        break;
                }
                gridSkBsg.dsDataSource = dsGridRskBsg;
                gridSkBsg.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutBsgCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data BGS/BSG

        #endregion

        #region penjualan
        AppPengguna.KSK.RSK.ucRskPenjualanGrid gridSkPenjualan;
        AppPengguna.KSK.RSK.ucRskPenjualanForm formSkPenjualanTambah;
        AppPengguna.KSK.RSK.ucRskPenjualanForm formSkPenjualanUbah;
        AppPengguna.KSK.RSK.ucRskPenjualanForm formSkPenjualanDetail;
        private ArrayList dsGridRskPenjualan;
        SvcWasdalJualSkSelect.OutputParameters dOutRskPenjualan;
        SvcWasdalJualSkSelect.execute_pttClient ambilRskPenjualan;

        private void setEventTombolRskPenjualan()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPenjualanTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPenjualanUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPenjualanHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPenjualanDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPenjualanKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPenjualanRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPenjualanMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPenjualan()
        {
            //if (gridSkPenjualan == null)
            //{
                gridSkPenjualan = new AppPengguna.KSK.RSK.ucRskPenjualanGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPenjualan),
                    detailDataGrid = new DetailDataGrid(bbiRskPenjualanUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPenjualan();
            setPanel(gridSkPenjualan);
        }

        #region --++ Tombol Ribbon Penjualan
        private void bbiRskPenjualanTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan11), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPenjualanTambah == null)
                {
                    formSkPenjualanTambah = new AppPengguna.KSK.RSK.ucRskPenjualanForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPenjualan)
                    };
                }
                setPanel(formSkPenjualanTambah);
                formSkPenjualanTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskPenjualanUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPenjualan.dataTerpilih != null)
            {
                if (formSkPenjualanUbah == null)
                {
                    formSkPenjualanUbah = new AppPengguna.KSK.RSK.ucRskPenjualanForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPenjualan)
                    };
                }
                formSkPenjualanUbah.dataTerpilih = gridSkPenjualan.dataTerpilih;
                setPanel(formSkPenjualanUbah);
                formSkPenjualanUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPenjualanHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPenjualan.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPenjualan.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalJualCrud.InputParameters parInp = new SvcWasdalJualCrud.InputParameters();
                        parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                        parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridSkPenjualan.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                        parInp.P_ID_PEMOHON = gridSkPenjualan.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPenjualan.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkPenjualan.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPenjualan.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPenjualan.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPenjualan.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPenjualan.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkPenjualan.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPenjualan.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPenjualan.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPenjualan.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPenjualan.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkPenjualan.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPenjualan.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkPenjualan.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkPenjualan.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkPenjualan.dataTerpilih.UR_SATKER;
                        ambilDataPenjualan = new SvcWasdalJualCrud.execute_pttClient();
                        ambilDataPenjualan.Open();
                        ambilDataPenjualan.Beginexecute(parInp, new AsyncCallback(cudRskPenjualan), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPenjualanDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPenjualan.dataTerpilih != null)
            {
                if (formSkPenjualanDetail == null)
                {
                    formSkPenjualanDetail = new AppPengguna.KSK.RSK.ucRskPenjualanForm("A");
                    formSkPenjualanDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkPenjualanDetail.dataTerpilih = gridSkPenjualan.dataTerpilih;
                setPanel(formSkPenjualanDetail);
                formSkPenjualanDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPenjualanKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkPenjualan);
            setTombolRskGrid();
            gridSkPenjualan.dsDataSource = dsGridRskPenjualan;
            gridSkPenjualan.displayData();
        }

        private void bbiRskPenjualanRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPenjualan.teNamaKolom.Text = "";
            gridSkPenjualan.teCari.Text = "";
            gridSkPenjualan.fieldDicari = "";
            gridSkPenjualan.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPenjualan();
        }

        private void bbiRskPenjualanMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPenjualan();
            }
        }
        #endregion --++ Tombol Ribbon Penjualan

        private void nbiRskPenjualan_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan11;
            konfigApp.kdPelayanan = "11";
            konfigApp.namaPelayanan = konfigApp.namaLayanan11;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPenjualan();
            modeCari = false;
            gridSkPenjualan.teNamaKolom.Text = "";
            gridSkPenjualan.teCari.Text = "";
            gridSkPenjualan.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPenjualan();
        }

        #region --++ Ambil Data Penjualan
        private void getInitRskPenjualan()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalJualSkSelect.InputParameters parInp = new SvcWasdalJualSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
               // parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON={2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskPenjualan = new SvcWasdalJualSkSelect.execute_pttClient();
                ambilRskPenjualan.Open();
                ambilRskPenjualan.Beginexecute(parInp, new AsyncCallback(getRskPenjualan), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPenjualan(IAsyncResult result)
        {
            try
            {
                dOutRskPenjualan = ambilRskPenjualan.Endexecute(result);
                ambilRskPenjualan.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPenjualan(dsRskPenjualan), dOutRskPenjualan);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPenjualan(SvcWasdalJualSkSelect.OutputParameters dataOut);

        private void dsRskPenjualan(SvcWasdalJualSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_PT_JUAL.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_PT_JUAL[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskPenjualan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_PT_JUAL[i].IS_TB = (dataOut.SF_READ_WASDAL_PT_JUAL[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskPenjualan.Add(dataOut.SF_READ_WASDAL_PT_JUAL[i]);
            }
            gridSkPenjualan.labelTotData.Text = "";
            gridSkPenjualan.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkPenjualan.sbCariOnline.Enabled = !modeCari;
            gridSkPenjualan.dsDataSource = dsGridRskPenjualan;
            gridSkPenjualan.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkPenjualan.teNamaKolom.Text.Trim();
                string xDua = gridSkPenjualan.teCari.Text.Trim();
                string xTiga = gridSkPenjualan.fieldDicari;
                gridSkPenjualan.gvGridSk.ClearColumnsFilter();
                gridSkPenjualan.teNamaKolom.Text = xSatu;
                gridSkPenjualan.teCari.Text = xDua;
                gridSkPenjualan.fieldDicari = xTiga;
            }
            else
                gridSkPenjualan.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskPenjualan(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskPenjualan();
        }
        #endregion Ambil Penjualan

        #region --++ Simpan Data Penjualan
        SvcWasdalJualCrud.OutputParameters dOutAmbilDataPenjualan;
        SvcWasdalJualCrud.execute_pttClient ambilDataPenjualan;

        private void simpanDataRskPenjualan(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalJualCrud.InputParameters parInp = new SvcWasdalJualCrud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.idSkWasdal : formSkPenjualanUbah.idSkWasdal);//
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.idPemohon : formSkPenjualanUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.rgJenisAset.EditValue.ToString() : formSkPenjualanUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teJabatan.Text.Trim() : formSkPenjualanUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkPenjualanTambah.teNmPenerbitSk.ItemIndex).ToString() : formSkPenjualanUbah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkPenjualanUbah.teNmPenerbitSk.ItemIndex).ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.kodePenerbitSkDetail : formSkPenjualanUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPenjualanTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanTambah.teNilaiPenetapan.Text)) : (formSkPenjualanUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNipPenandaTangan.Text : formSkPenjualanUbah.teNipPenandaTangan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teTahunAnggaran.Text : formSkPenjualanUbah.teTahunAnggaran.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNamaPenandaTangan.Text : formSkPenjualanUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNmPenerbitSk.Text : formSkPenjualanUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNamaInstansi.Text : formSkPenjualanUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teNomorSk.Text.Trim() : formSkPenjualanUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teTanggalSk.EditValue : formSkPenjualanUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teJenisPemohon.Text : formSkPenjualanUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.tipePengelola : formSkPenjualanUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teUraianKeputusan.Text : formSkPenjualanUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPenjualanTambah.teTahunAnggaran.Text : formSkPenjualanUbah.teTahunAnggaran.Text);
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataPenjualan = new SvcWasdalJualCrud.execute_pttClient();
                ambilDataPenjualan.Open();
                ambilDataPenjualan.Beginexecute(parInp, new AsyncCallback(cudRskPenjualan), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudRskPenjualan(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPenjualan = ambilDataPenjualan.Endexecute(result);
                ambilDataPenjualan.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPenjualan(this.ubahDsPenjualan), dOutAmbilDataPenjualan);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPenjualan(SvcWasdalJualCrud.OutputParameters dataOutPenjualanCrud);

        private void ubahDsPenjualan(SvcWasdalJualCrud.OutputParameters dataOutPenjualanCrud)
        {
            if (dataOutPenjualanCrud.PO_RESULT == "Y")
            {
                SvcWasdalJualSkSelect.WASDALSROW_READ_WASDAL_PT_JUAL dataPenyama = new SvcWasdalJualSkSelect.WASDALSROW_READ_WASDAL_PT_JUAL();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkPenjualanTambah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPenjualanTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPenjualanTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPenjualanTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPenjualanTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPenjualanTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPenjualanTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPenjualanTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPenjualanTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPenjualanTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPenjualanTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPenjualanTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPenjualanTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPenjualanTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPenjualanTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPenjualanTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPenjualanTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPenjualan == null ? 1 : dsGridRskPenjualan.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkPenjualanTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPenjualanTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPenjualanTambah.teJenisPemohon.Text;
                        //dataPenyama.THN_ANG = formSkPenjualanTambah.teTahunAnggaran.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkPenjualanTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPenjualanTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPenjualanTambah.teUraianKeputusan.Text;
                        if (dsGridRskPenjualan == null) dsGridRskPenjualan = new ArrayList();
                        dsGridRskPenjualan.Add(dataPenyama);
                        formSkPenjualanTambah.gcDaftarAset.Enabled = true;
                        formSkPenjualanTambah.sbTambah.Enabled = true;
                        formSkPenjualanTambah.sbHapus.Enabled = true;
                        formSkPenjualanTambah.sbValidasi.Enabled = true;
                        formSkPenjualanTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkPenjualanTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkPenjualanTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkPenjualanTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkPenjualanTambah.sbCariPemohon.Enabled = false;
                        formSkPenjualanTambah.sbRefresh.Enabled = true;
                        formSkPenjualanTambah.teNamaInstansi.Properties.ReadOnly = true;
                        formSkPenjualanTambah.cePilihSemua.Enabled = true;
                        formSkPenjualanTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkPenjualanTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkPenjualanUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPenjualanUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPenjualanUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPenjualanUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPenjualanUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkPenjualanUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPenjualanUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPenjualanUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPenjualanUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPenjualanUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPenjualanUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPenjualanUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPenjualanUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPenjualanUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkPenjualan.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkPenjualanUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPenjualanUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPenjualanUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPenjualanUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPenjualan.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkPenjualan.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkPenjualanUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPenjualan.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPenjualan.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPenjualanUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkPenjualanUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkPenjualan.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPenjualan.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPenjualan.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkPenjualanUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPenjualanUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPenjualanUbah.teUraianKeputusan.Text;
                        //dataPenyama.THN_ANG = formSkPenjualanUbah.teTahunAnggaran.Text;
                        int _indeksData = dsGridRskPenjualan.IndexOf(gridSkPenjualan.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPenjualan.Remove(gridSkPenjualan.dataTerpilih);
                        dsGridRskPenjualan.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPenjualan.Remove(gridSkPenjualan.dataTerpilih);
                        break;
                }
                gridSkPenjualan.dsDataSource = dsGridRskPenjualan;
                gridSkPenjualan.displayData();
            }
            else {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutPenjualanCrud.PO_RESULT_MESSAGE);
                }
                else {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }
                
            } 
        }
        #endregion Simpan Data Penjualan

        #endregion Penjualan

        #region tukarmenukar
        AppPengguna.KSK.RSK.ucRskTmBmnGrid gridSkTmBmn;
        AppPengguna.KSK.RSK.ucRskTmBmnForm formSkTmBmnTambah;
        AppPengguna.KSK.RSK.ucRskTmBmnForm formSkTmBmnUbah;
        AppPengguna.KSK.RSK.ucRskTmBmnForm formSkTmBmnDetail;
        private ArrayList dsGridRskTmBmn;
        SvcWasdalTmSkSelect.OutputParameters dOutRskTmBmn;
        SvcWasdalTmSkSelect.execute_pttClient ambilRskTmBmn;

        private void setEventTombolRskTmBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskTmBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskTmBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskTmBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskTmBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskTmBmnKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskTmBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskTmBmnMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkTmBmn()
        {
            //if (gridSkTmBmn == null)
            //{
                gridSkTmBmn = new AppPengguna.KSK.RSK.ucRskTmBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskTmBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskTmBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskTmBmn();
            setPanel(gridSkTmBmn);
        }

        #region --++ Tombol Ribbon Tukar Menukar
        private void bbiRskTmBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan12), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkTmBmnTambah == null)
                {
                    formSkTmBmnTambah = new AppPengguna.KSK.RSK.ucRskTmBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskTmBmn)
                    };
                }
                setPanel(formSkTmBmnTambah);
                formSkTmBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskTmBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkTmBmn.dataTerpilih != null)
            {
                if (formSkTmBmnUbah == null)
                {
                    formSkTmBmnUbah = new AppPengguna.KSK.RSK.ucRskTmBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskTmBmn)
                    };
                }
                formSkTmBmnUbah.dataTerpilih = gridSkTmBmn.dataTerpilih;
                setPanel(formSkTmBmnUbah);
                formSkTmBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskTmBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkTmBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkTmBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalTmCrud.InputParameters parInp = new SvcWasdalTmCrud.InputParameters();
                        parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                        parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridSkTmBmn.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                        parInp.P_ID_PEMOHON = gridSkTmBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkTmBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkTmBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkTmBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkTmBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkTmBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkTmBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkTmBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkTmBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkTmBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkTmBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkTmBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkTmBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkTmBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkTmBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkTmBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkTmBmn.dataTerpilih.UR_SATKER;
                        ambilDataTmBmn = new SvcWasdalTmCrud.execute_pttClient();
                        ambilDataTmBmn.Open();
                        ambilDataTmBmn.Beginexecute(parInp, new AsyncCallback(cudRskTmBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskTmBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkTmBmn.dataTerpilih != null)
            {
                if (formSkTmBmnDetail == null)
                {
                    formSkTmBmnDetail = new AppPengguna.KSK.RSK.ucRskTmBmnForm("A");
                    formSkTmBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkTmBmnDetail.dataTerpilih = gridSkTmBmn.dataTerpilih;
                setPanel(formSkTmBmnDetail);
                formSkTmBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskTmBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkTmBmn);
            setTombolRskGrid();
            gridSkTmBmn.dsDataSource = dsGridRskTmBmn;
            gridSkTmBmn.displayData();
        }

        private void bbiRskTmBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkTmBmn.teNamaKolom.Text = "";
            gridSkTmBmn.teCari.Text = "";
            gridSkTmBmn.fieldDicari = "";
            gridSkTmBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskTmBmn();
        }

        private void bbiRskTmBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskTmBmn();
            }
        }
        #endregion --++ Tombol Ribbon  Tukar Menukar

        private void nbiRskTmBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan12;
            konfigApp.kdPelayanan = "12";
            konfigApp.namaPelayanan = konfigApp.namaLayanan12;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkTmBmn();
            modeCari = false;
            gridSkTmBmn.teNamaKolom.Text = "";
            gridSkTmBmn.teCari.Text = "";
            gridSkTmBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskTmBmn();
        }

        #region --++ Ambil Data Tukar Menukar
        private void getInitRskTmBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalTmSkSelect.InputParameters parInp = new SvcWasdalTmSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskTmBmn = new SvcWasdalTmSkSelect.execute_pttClient();
                ambilRskTmBmn.Open();
                ambilRskTmBmn.Beginexecute(parInp, new AsyncCallback(getRskTmBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskTmBmn(IAsyncResult result)
        {
            try
            {
                dOutRskTmBmn = ambilRskTmBmn.Endexecute(result);
                ambilRskTmBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskTmBmn(dsRskTmBmn), dOutRskTmBmn);
            }
            catch (Exception ex)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskTmBmn(SvcWasdalTmSkSelect.OutputParameters dataOut);

        private void dsRskTmBmn(SvcWasdalTmSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_PT_TUKAR.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_PT_TUKAR[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskTmBmn = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_PT_TUKAR[i].IS_TB = (dataOut.SF_READ_WASDAL_PT_TUKAR[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskTmBmn.Add(dataOut.SF_READ_WASDAL_PT_TUKAR[i]);
            }
            gridSkTmBmn.labelTotData.Text = "";
            gridSkTmBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkTmBmn.sbCariOnline.Enabled = !modeCari;
            gridSkTmBmn.dsDataSource = dsGridRskTmBmn;
            gridSkTmBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkTmBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkTmBmn.teCari.Text.Trim();
                string xTiga = gridSkTmBmn.fieldDicari;
                gridSkTmBmn.gvGridSk.ClearColumnsFilter();
                gridSkTmBmn.teNamaKolom.Text = xSatu;
                gridSkTmBmn.teCari.Text = xDua;
                gridSkTmBmn.fieldDicari = xTiga;
            }
            else
                gridSkTmBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskTmBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskTmBmn();
        }
        #endregion Ambil TmBmn

        #region --++ Simpan Data Tukar Menukar
        SvcWasdalTmCrud.OutputParameters dOutAmbilDataTmBmn;
        SvcWasdalTmCrud.execute_pttClient ambilDataTmBmn;

        private void simpanDataRskTmBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalTmCrud.InputParameters parInp = new SvcWasdalTmCrud.InputParameters();
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.idSkWasdal : formSkTmBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.idPemohon : formSkTmBmnUbah.idPemohon);
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.rgJenisAset.EditValue.ToString() : formSkTmBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teJabatan.Text.Trim() : formSkTmBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkTmBmnTambah.teNmPenerbitSk.ItemIndex).ToString() : formSkTmBmnUbah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkTmBmnUbah.teNmPenerbitSk.ItemIndex).ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.kodePenerbitSkDetail : formSkTmBmnUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkTmBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnTambah.teNilaiPenetapan.Text)) : (formSkTmBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNipPenandaTangan.Text : formSkTmBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNamaPenandaTangan.Text : formSkTmBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teTahunAnggaran.Text : formSkTmBmnUbah.teTahunAnggaran.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNmPenerbitSk.Text : formSkTmBmnUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNamaInstansi.Text : formSkTmBmnUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNomorSk.Text.Trim() : formSkTmBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teTanggalSk.EditValue : formSkTmBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teJenisPemohon.Text : formSkTmBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.tipePengelola : formSkTmBmnUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teUraianKeputusan.Text : formSkTmBmnUbah.teUraianKeputusan.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teAlamatPihakLain.Text : formSkTmBmnUbah.teAlamatPihakLain.Text);

                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teNamaPihakLain.Text : formSkTmBmnUbah.teNamaPihakLain.Text);
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.tePeruntukan.Text : formSkTmBmnUbah.tePeruntukan.Text);
                parInp.P_ASET_PENGGANTI_JENIS = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teJnsAsetPengganti.Text : formSkTmBmnUbah.teJnsAsetPengganti.Text);
                parInp.P_ASET_PENGGANTI_KUANTITASSpecified = true;
                parInp.P_ASET_PENGGANTI_KUANTITAS = ((_mode == "C" || _mode == "CU") ? Convert.ToDecimal(formSkTmBmnTambah.teKuantitasAsetPengganti.Text) : Convert.ToDecimal(formSkTmBmnUbah.teKuantitasAsetPengganti.Text));
                parInp.P_ASET_PENGGANTI_LUASSpecified = true;
                parInp.P_ASET_PENGGANTI_LUAS = ((_mode == "C" || _mode == "CU") ? Convert.ToDecimal(formSkTmBmnTambah.teLuasAsetPengganti.Text) : Convert.ToDecimal(formSkTmBmnUbah.teLuasAsetPengganti.Text));
                parInp.P_ASET_PENGGANTI_ALAMAT = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teAlamatAsetPengganti.Text : formSkTmBmnUbah.teAlamatAsetPengganti.Text);
                //parInp.P_FILE_SK = ((_mode == "C" || _mode == "CU") ? formSkTmBmnTambah.teFileSk.Text : formSkTmBmnUbah.teFileSk.Text);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkTmBmnTambah.filePath) : konfigApp.FileToByteArray(formSkTmBmnUbah.filePath));
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataTmBmn = new SvcWasdalTmCrud.execute_pttClient();
                ambilDataTmBmn.Open();
                ambilDataTmBmn.Beginexecute(parInp, new AsyncCallback(cudRskTmBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskTmBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataTmBmn = ambilDataTmBmn.Endexecute(result);
                ambilDataTmBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsTmBmn(this.ubahDsTmBmn), dOutAmbilDataTmBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsTmBmn(SvcWasdalTmCrud.OutputParameters dataOutTmBmnCrud);

        private void ubahDsTmBmn(SvcWasdalTmCrud.OutputParameters dataOutTmBmnCrud)
        {
            if (dataOutTmBmnCrud.PO_RESULT == "Y")
            {
                SvcWasdalTmSkSelect.WASDALSROW_READ_WASDAL_PT_TUKAR dataPenyama = new SvcWasdalTmSkSelect.WASDALSROW_READ_WASDAL_PT_TUKAR();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkTmBmnTambah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkTmBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkTmBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkTmBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkTmBmnTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkTmBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkTmBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkTmBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkTmBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkTmBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkTmBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkTmBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkTmBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkTmBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkTmBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkTmBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkTmBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskTmBmn == null ? 1 : dsGridRskTmBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkTmBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkTmBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkTmBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkTmBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkTmBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkTmBmnTambah.teUraianKeputusan.Text;
                        //dataPenyama.THN_ANG = formSkTmBmnTambah.teTahunAnggaran.Text;
                        dataPenyama.NM_PHK_LAIN = formSkTmBmnTambah.teNamaPihakLain.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkTmBmnTambah.teAlamatPihakLain.Text;

                        dsGridRskTmBmn.Add(dataPenyama);
                        formSkTmBmnTambah.gcDaftarAset.Enabled = true;
                        formSkTmBmnTambah.sbTambah.Enabled = true;
                        formSkTmBmnTambah.sbHapus.Enabled = true;
                        formSkTmBmnTambah.sbValidasi.Enabled = true;
                        formSkTmBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkTmBmnTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkTmBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkTmBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkTmBmnTambah.sbCariPemohon.Enabled = false;
                        formSkTmBmnTambah.sbRefresh.Enabled = true;
                        formSkTmBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                        formSkTmBmnTambah.cePilihSemua.Enabled = true;
                        formSkTmBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        formSkTmBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkTmBmnUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkTmBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkTmBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkTmBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkTmBmnUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkTmBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkTmBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkTmBmnUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkTmBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkTmBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkTmBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkTmBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkTmBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkTmBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkTmBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkTmBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkTmBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkTmBmnUbah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkTmBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkTmBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkTmBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkTmBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkTmBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkTmBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkTmBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkTmBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkTmBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkTmBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkTmBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkTmBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkTmBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkTmBmnUbah.teUraianKeputusan.Text;
                        //dataPenyama.THN_ANG = formSkTmBmnUbah.teTahunAnggaran.Text;
                        //dataPenyama.JNS_ASET_PENGGANTI = formSkTmBmnUbah.teJnsAsetPengganti.Text;
                        //dataPenyama.ALAMAT_ASET_PENGGANTI = formSkTmBmnUbah.teAlamatAsetPengganti.Text;
                        //dataPenyama.PERUNTUKAN = formSkTmBmnUbah.tePeruntukan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkTmBmnUbah.teAlamatPihakLain.Text;
                        dataPenyama.NM_PHK_LAIN = formSkTmBmnUbah.teNamaPihakLain.Text;

                        int _indeksData = dsGridRskTmBmn.IndexOf(gridSkTmBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskTmBmn.Remove(gridSkTmBmn.dataTerpilih);
                        dsGridRskTmBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskTmBmn.Remove(gridSkTmBmn.dataTerpilih);
                        break;
                }
                gridSkTmBmn.dsDataSource = dsGridRskTmBmn;
                gridSkTmBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutTmBmnCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data TmBmn

        #endregion tukarmenukar

        #region hibah
        ucRskHibahGrid gridSkHibah;
        ucRskHibahForm formSkHibahTambah;
        ucRskHibahForm formSkHibahUbah;
        ucRskHibahForm formSkHibahDetail;
        private ArrayList dsGridRskHibah;
        SvcWasdalHibahSkSelect.OutputParameters dOutRskHibah;
        SvcWasdalHibahSkSelect.execute_pttClient ambilRskHibah;

        private void setEventTombolRskHibah()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskHibahTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskHibahUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskHibahHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskHibahDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskHibahKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskHibahRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskHibahMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkHibah()
        {
            //if (gridSkHibah == null)
            //{
                gridSkHibah = new ucRskHibahGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskHibah),
                    detailDataGrid = new DetailDataGrid(bbiRskHibahUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskHibah();
            setPanel(gridSkHibah);
        }

        #region --++ Tombol Ribbon Tukar Menukar
        private void bbiRskHibahTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan13), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkHibahTambah == null)
                {
                    formSkHibahTambah = new ucRskHibahForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHibah)
                    };
                }
                setPanel(formSkHibahTambah);
                formSkHibahTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskHibahUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHibah.dataTerpilih != null)
            {
                if (formSkHibahUbah == null)
                {
                    formSkHibahUbah = new ucRskHibahForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHibah)
                    };
                }
                formSkHibahUbah.dataTerpilih = gridSkHibah.dataTerpilih;
                setPanel(formSkHibahUbah);
                formSkHibahUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHibahHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHibah.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkHibah.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalHibahCrud.InputParameters parInp = new SvcWasdalHibahCrud.InputParameters();
                        parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                        parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridSkHibah.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                        parInp.P_ID_PEMOHON = gridSkHibah.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkHibah.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkHibah.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkHibah.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkHibah.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkHibah.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkHibah.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkHibah.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkHibah.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkHibah.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkHibah.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkHibah.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkHibah.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkHibah.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkHibah.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkHibah.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkHibah.dataTerpilih.UR_SATKER;
                        simpanDataHibah = new SvcWasdalHibahCrud.execute_pttClient();
                        simpanDataHibah.Open();
                        simpanDataHibah.Beginexecute(parInp, new AsyncCallback(cudRskHibah), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskHibahDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHibah.dataTerpilih != null)
            {
                if (formSkHibahDetail == null)
                {
                    formSkHibahDetail = new ucRskHibahForm("A");
                    formSkHibahDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkHibahDetail.dataTerpilih = gridSkHibah.dataTerpilih;
                setPanel(formSkHibahDetail);
                formSkHibahDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHibahKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkHibah);
            setTombolRskGrid();
            gridSkHibah.dsDataSource = dsGridRskHibah;
            gridSkHibah.displayData();
        }

        private void bbiRskHibahRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkHibah.teNamaKolom.Text = "";
            gridSkHibah.teCari.Text = "";
            gridSkHibah.fieldDicari = "";
            gridSkHibah.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskHibah();
        }

        private void bbiRskHibahMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskHibah();
            }
        }
        #endregion --++ Tombol Ribbon Hibah

        private void nbiRskHibah_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan13;
            konfigApp.kdPelayanan = "13";
            konfigApp.namaPelayanan = konfigApp.namaLayanan13;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkHibah();
            modeCari = false;
            gridSkHibah.teNamaKolom.Text = "";
            gridSkHibah.teCari.Text = "";
            gridSkHibah.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskHibah();
        }

        #region --++ Ambil Data Hibah
        private void getInitRskHibah()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHibahSkSelect.InputParameters parInp = new SvcWasdalHibahSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
               // parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
             " (ID_USER={1} " +
              "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
              "OR ID_SATKER = {2} " +
              "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskHibah = new SvcWasdalHibahSkSelect.execute_pttClient();
                ambilRskHibah.Open();
                ambilRskHibah.Beginexecute(parInp, new AsyncCallback(getRskHibah), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskHibah(IAsyncResult result)
        {
            try
            {
                dOutRskHibah = ambilRskHibah.Endexecute(result);
                ambilRskHibah.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskHibah(dsRskHibah), dOutRskHibah);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskHibah(SvcWasdalHibahSkSelect.OutputParameters dataOut);

        private void dsRskHibah(SvcWasdalHibahSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_READ_WASDAL_PT_HIBAH.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_READ_WASDAL_PT_HIBAH[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskHibah = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_READ_WASDAL_PT_HIBAH[i].IS_TB = (dataOut.SF_READ_WASDAL_PT_HIBAH[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskHibah.Add(dataOut.SF_READ_WASDAL_PT_HIBAH[i]);
            }
            gridSkHibah.labelTotData.Text = "";
            gridSkHibah.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkHibah.sbCariOnline.Enabled = !modeCari;
            gridSkHibah.dsDataSource = dsGridRskHibah;
            gridSkHibah.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkHibah.teNamaKolom.Text.Trim();
                string xDua = gridSkHibah.teCari.Text.Trim();
                string xTiga = gridSkHibah.fieldDicari;
                gridSkHibah.gvGridSk.ClearColumnsFilter();
                gridSkHibah.teNamaKolom.Text = xSatu;
                gridSkHibah.teCari.Text = xDua;
                gridSkHibah.fieldDicari = xTiga;
            }
            else
                gridSkHibah.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskHibah(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskHibah();
        }
        #endregion Ambil Hibah

        #region --++ Simpan Data Hibah
        SvcWasdalHibahCrud.OutputParameters dOutAmbilDataHibah;
        SvcWasdalHibahCrud.execute_pttClient simpanDataHibah;

        private void simpanDataRskHibah(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHibahCrud.InputParameters parInp = new SvcWasdalHibahCrud.InputParameters();
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.idSkWasdal : formSkHibahUbah.idSkWasdal);//
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.idPemohon : formSkHibahUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.rgJenisAset.EditValue.ToString() : formSkHibahUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teJabatan.Text.Trim() : formSkHibahUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkHibahTambah.teNmPenerbitSk.ItemIndex).ToString() : formSkHibahUbah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkHibahUbah.teNmPenerbitSk.ItemIndex).ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.kodePenerbitSkDetail : formSkHibahUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkHibahTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHibahTambah.teNilaiPenetapan.Text)) : (formSkHibahUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHibahUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNipPenandaTangan.Text : formSkHibahUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNamaPenandaTangan.Text : formSkHibahUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNmPenerbitSk.Text : formSkHibahUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNamaInstansi.Text : formSkHibahUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNomorSk.Text.Trim() : formSkHibahUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teTanggalSk.EditValue : formSkHibahUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teJenisPemohon.Text : formSkHibahUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.tipePengelola : formSkHibahUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teUraianKeputusan.Text : formSkHibahUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teTahunAnggaran.Text : formSkHibahUbah.teTahunAnggaran.Text);

                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teAlamatPihakLain.Text : formSkHibahUbah.teAlamatPihakLain.Text);
                //parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkHibahTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkHibahTambah.teJangkaWaktu.Text)) : (formSkHibahUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkHibahUbah.teJangkaWaktu.Text)));
                //parInp.P_JNS_MITRA = "";
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teNamaPihakLain.Text : formSkHibahUbah.teNamaPihakLain.Text);
                //parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.tePeriode.Text : formSkHibahUbah.tePeriode.Text);
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.tePeruntukan.Text : formSkHibahUbah.tePeruntukan.Text);
                //parInp.P_FILE_SK = ((_mode == "C" || _mode == "CU") ? formSkHibahTambah.teFileSk.Text : formSkHibahUbah.teFileSk.Text);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkHibahTambah.filePath) : konfigApp.FileToByteArray(formSkHibahUbah.filePath));
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                
                simpanDataHibah = new SvcWasdalHibahCrud.execute_pttClient();
                simpanDataHibah.Open();
                simpanDataHibah.Beginexecute(parInp, new AsyncCallback(cudRskHibah), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskHibah(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataHibah = simpanDataHibah.Endexecute(result);
                simpanDataHibah.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsHibah(this.ubahDsHibah), dOutAmbilDataHibah);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsHibah(SvcWasdalHibahCrud.OutputParameters dataOutHibahCrud);

        private void ubahDsHibah(SvcWasdalHibahCrud.OutputParameters dataOutHibahCrud)
        {
            if (dataOutHibahCrud.PO_RESULT == "Y")
            {
                SvcWasdalHibahSkSelect.WASDALSROW_READ_WASDAL_PT_HIBAH dataPenyama = new SvcWasdalHibahSkSelect.WASDALSROW_READ_WASDAL_PT_HIBAH();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkHibahTambah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkHibahTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHibahTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkHibahTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHibahTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHibahTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHibahTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHibahTambah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHibahTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHibahTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHibahTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHibahTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHibahTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHibahTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHibahTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkHibahTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHibahTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHibahTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHibahTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskHibah == null ? 1 : dsGridRskHibah.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkHibahTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHibahTambah.teTanggalSk.Text);
                        dataPenyama.THN_ANG = formSkHibahTambah.teTahunAnggaran.Text;
                        dataPenyama.TIPE_PEMOHON = formSkHibahTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkHibahTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHibahTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHibahTambah.teUraianKeputusan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkHibahTambah.teNamaPihakLain.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkHibahTambah.teAlamatPihakLain.Text;
                        if (dsGridRskHibah == null) dsGridRskHibah = new ArrayList();
                        dsGridRskHibah.Add(dataPenyama);
                        formSkHibahTambah.gcDaftarAset.Enabled = true;
                        formSkHibahTambah.sbTambah.Enabled = true;
                        formSkHibahTambah.sbHapus.Enabled = true;
                        formSkHibahTambah.sbValidasi.Enabled = true;
                        formSkHibahTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkHibahTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkHibahTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkHibahTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkHibahTambah.sbCariPemohon.Enabled = false;
                        formSkHibahTambah.sbRefresh.Enabled = true;
                        formSkHibahTambah.teNamaInstansi.Properties.ReadOnly = true;
                        formSkHibahTambah.cePilihSemua.Enabled = true;
                        formSkHibahTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkHibahTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkHibahUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkHibahUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHibahUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkHibahUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHibahUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHibahUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHibahUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHibahUbah.teNmPenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHibahUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHibahUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHibahUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHibahUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHibahUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHibahUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHibahUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkHibah.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkHibahUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHibahUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHibahUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHibahUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkHibah.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkHibah.dataTerpilih.NUM;
                        //dataPenyama.PERUNTUKAN = formSkHibahUbah.tePeruntukan.Text;
                        dataPenyama.SK_KEPUTUSAN = formSkHibahUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkHibah.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkHibah.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHibahUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkHibahUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkHibah.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkHibah.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkHibah.dataTerpilih.TOTAL_DATA;
                        //dataPenyama.THN_ANG = formSkHibahUbah.teTahunAnggaran.Text;
                        dataPenyama.UR_KL = formSkHibahUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHibahUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHibahUbah.teUraianKeputusan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkHibahUbah.teNamaPihakLain.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkHibahUbah.teAlamatPihakLain.Text;


                        int _indeksData = dsGridRskHibah.IndexOf(gridSkHibah.dataTerpilih);
                        _indeksData = (_indeksData < 0) ? 0 : _indeksData;
                        dsGridRskHibah.Remove(gridSkHibah.dataTerpilih);
                        dsGridRskHibah.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskHibah.Remove(gridSkHibah.dataTerpilih);
                        break;
                }
                gridSkHibah.dsDataSource = dsGridRskHibah;
                gridSkHibah.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutHibahCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data Hibah

        #endregion

        #region pmp
        ucRskPmpGrid gridSkPmp;
        ucRskPmpForm formSkPmpTambah;
        ucRskPmpForm formSkPmpUbah;
        ucRskPmpForm formSkPmpDetail;
        private ArrayList dsGridRskPmp;
        SvcWasdalPmpSkSelect.OutputParameters dOutRskPmp;
        SvcWasdalPmpSkSelect.execute_pttClient ambilRskPmp;

        private void setEventTombolRskPmp()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskPmpTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskPmpUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskPmpHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskPmpDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskPmpKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskPmpRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskPmpMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPmpKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPmpKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkPmp()
        {
            //if (gridSkPmp == null)
            //{
                gridSkPmp = new ucRskPmpGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskPmp),
                    detailDataGrid = new DetailDataGrid(bbiRskPmpUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskPmp();
            setPanel(gridSkPmp);
        }

        #region --++ Tombol Ribbon PMP
        private void bbiRskPmpTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan14), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkPmpTambah == null)
                {
                    formSkPmpTambah = new ucRskPmpForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPmp)
                    };
                }
                setPanel(formSkPmpTambah);
                formSkPmpTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskPmpUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPmp.dataTerpilih != null)
            {
                if (formSkPmpUbah == null)
                {
                    formSkPmpUbah = new ucRskPmpForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskPmp)
                    };
                }
                formSkPmpUbah.dataTerpilih = gridSkPmp.dataTerpilih;
                setPanel(formSkPmpUbah);
                formSkPmpUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPmpHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPmp.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkPmp.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalPmpCrud.InputParameters parInp = new SvcWasdalPmpCrud.InputParameters();
                        parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                        parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridSkPmp.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                        parInp.P_ID_PEMOHON = gridSkPmp.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkPmp.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkPmp.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkPmp.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkPmp.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkPmp.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkPmp.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkPmp.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkPmp.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkPmp.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkPmp.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkPmp.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkPmp.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkPmp.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkPmp.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkPmp.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkPmp.dataTerpilih.UR_SATKER;
                        ambilDataPmp = new SvcWasdalPmpCrud.execute_pttClient();
                        ambilDataPmp.Open();
                        ambilDataPmp.Beginexecute(parInp, new AsyncCallback(cudRskPmp), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskPmpDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkPmp.dataTerpilih != null)
            {
                if (formSkPmpDetail == null)
                {
                    formSkPmpDetail = new ucRskPmpForm("A");
                    formSkPmpDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkPmpDetail.dataTerpilih = gridSkPmp.dataTerpilih;
                setPanel(formSkPmpDetail);
                formSkPmpDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskPmpKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkPmp);
            setTombolRskGrid();
            gridSkPmp.dsDataSource = dsGridRskPmp;
            gridSkPmp.displayData();
        }

        private void bbiRskPmpRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkPmp.teNamaKolom.Text = "";
            gridSkPmp.teCari.Text = "";
            gridSkPmp.fieldDicari = "";
            gridSkPmp.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskPmp();
        }

        private void bbiRskPmpMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskPmp();
            }
        }

        private void bbiRskPmpKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskPmpKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }
        #endregion --++ Tombol Ribbon  Tukar Menukar

        private void nbiRskPmp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan14;
            konfigApp.kdPelayanan = "14";
            konfigApp.namaPelayanan = konfigApp.namaLayanan14;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkPmp();
            modeCari = false;
            gridSkPmp.teNamaKolom.Text = "";
            gridSkPmp.teCari.Text = "";
            gridSkPmp.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskPmp();
        }

        #region --++ Ambil Data PMP
        private void getInitRskPmp()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPmpSkSelect.InputParameters parInp = new SvcWasdalPmpSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskPmp = new SvcWasdalPmpSkSelect.execute_pttClient();
                ambilRskPmp.Open();
                ambilRskPmp.Beginexecute(parInp, new AsyncCallback(getRskPmp), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskPmp(IAsyncResult result)
        {
            try
            {
                dOutRskPmp = ambilRskPmp.Endexecute(result);
                ambilRskPmp.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskPmp(dsRskPmp), dOutRskPmp);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskPmp(SvcWasdalPmpSkSelect.OutputParameters dataOut);

        private void dsRskPmp(SvcWasdalPmpSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PT_MODAL.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PT_MODAL[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskPmp = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PT_MODAL[i].IS_TB = (dataOut.SF_READ_WASDAL_PT_MODAL[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskPmp.Add(dataOut.SF_READ_WASDAL_PT_MODAL[i]);
            }
            gridSkPmp.labelTotData.Text = "";
            gridSkPmp.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkPmp.sbCariOnline.Enabled = !modeCari;
            gridSkPmp.dsDataSource = dsGridRskPmp;
            gridSkPmp.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkPmp.teNamaKolom.Text.Trim();
                string xDua = gridSkPmp.teCari.Text.Trim();
                string xTiga = gridSkPmp.fieldDicari;
                gridSkPmp.gvGridSk.ClearColumnsFilter();
                gridSkPmp.teNamaKolom.Text = xSatu;
                gridSkPmp.teCari.Text = xDua;
                gridSkPmp.fieldDicari = xTiga;
            }
            else
                gridSkPmp.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskPmp(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskPmp();
        }
        #endregion Ambil Pmp

        #region --++ Simpan Data PMP
        SvcWasdalPmpCrud.OutputParameters dOutAmbilDataPmp;
        SvcWasdalPmpCrud.execute_pttClient ambilDataPmp;

        private void simpanDataRskPmp(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPmpCrud.InputParameters parInp = new SvcWasdalPmpCrud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.idSkWasdal : formSkPmpUbah.idSkWasdal);//
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.idPemohon : formSkPmpUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.rgJenisAset.EditValue.ToString() : formSkPmpUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teJabatan.Text.Trim() : formSkPmpUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.lePenerbitSk.EditValue.ToString() : formSkPmpUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.kodePenerbitSkDetail : formSkPmpUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkPmpTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPmpTambah.teNilaiPenetapan.Text)) : (formSkPmpUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPmpUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teNipPenandaTangan.Text : formSkPmpUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teNamaPenandaTangan.Text : formSkPmpUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.lePenerbitSk.Text : formSkPmpUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teNmPenerbitSkDetail.Text : formSkPmpUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teNomorSk.Text.Trim() : formSkPmpUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teTanggalSk.EditValue : formSkPmpUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teJenisPemohon.Text : formSkPmpUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teUraianKeputusan.Text : formSkPmpUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teTahunAnggaran.Text : formSkPmpUbah.teTahunAnggaran.Text);
                parInp.P_ALAMAT_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teAlamatPihakLain.Text : formSkPmpUbah.teAlamatPihakLain.Text);
                //parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU") ? (formSkPmpTambah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPmpTambah.teJangkaWaktu.Text)) : (formSkPmpUbah.teJangkaWaktu.Text == "" ? 0 : Convert.ToDecimal(formSkPmpUbah.teJangkaWaktu.Text)));
                //parInp.P_JNS_MITRA = "";
                parInp.P_NM_PHK_LAIN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.teNamaPihakLain.Text : formSkPmpUbah.teNamaPihakLain.Text);
                //parInp.P_PERIODE = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.tePeriode.Text : formSkPmpUbah.tePeriode.Text);
                parInp.P_PERUNTUKAN = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.tePeruntukan.Text : formSkPmpUbah.tePeruntukan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkPmpTambah.tipePengelola : formSkPmpUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkPmpTambah.filePath) : konfigApp.FileToByteArray(formSkPmpUbah.filePath));
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;

                ambilDataPmp = new SvcWasdalPmpCrud.execute_pttClient();
                ambilDataPmp.Open();
                ambilDataPmp.Beginexecute(parInp, new AsyncCallback(cudRskPmp), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskPmp(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPmp = ambilDataPmp.Endexecute(result);
                ambilDataPmp.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPmp(this.ubahDsPmp), dOutAmbilDataPmp);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPmp(SvcWasdalPmpCrud.OutputParameters dataOutPmpCrud);

        private void ubahDsPmp(SvcWasdalPmpCrud.OutputParameters dataOutPmpCrud)
        {
            if (dataOutPmpCrud.PO_RESULT == "Y")
            {
                SvcWasdalPmpSkSelect.WASDALSROW_READ_WASDAL_PT_MODAL dataPenyama = new SvcWasdalPmpSkSelect.WASDALSROW_READ_WASDAL_PT_MODAL();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkPmpTambah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPmpTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPmpTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkPmpTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPmpTambah.teJabatan.Text;
                        //dataPenyama.JANGKA_WAKTU = Convert.ToDecimal(formSkPmpTambah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkPmpTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPmpTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPmpTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPmpTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPmpTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPmpTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPmpTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPmpTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPmpTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPmpTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkPmpTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPmpTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PHK_LAIN = formSkPmpTambah.teNamaPihakLain.Text;
                        dataPenyama.NIP_PENANDATANGAN = formSkPmpTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPmpTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPmpTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskPmp == null ? 1 : dsGridRskPmp.Count + 1);
                        dataPenyama.PERUNTUKAN = formSkPmpTambah.tePeruntukan.Text;
                        dataPenyama.SK_KEPUTUSAN = formSkPmpTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPmpTambah.teTanggalSk.Text);
                        dataPenyama.THN_ANG = formSkPmpTambah.teTahunAnggaran.Text;
                        dataPenyama.TIPE_PEMOHON = formSkPmpTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkPmpTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPmpTambah.teNamaPemohon.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPmpTambah.teAlamatPihakLain.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPmpTambah.teUraianKeputusan.Text;
                        if (dsGridRskPmp == null) dsGridRskPmp = new ArrayList();
                        dsGridRskPmp.Add(dataPenyama);
                        formSkPmpTambah.gcDaftarAset.Enabled = true;
                        formSkPmpTambah.sbTambah.Enabled = true;
                        formSkPmpTambah.sbHapus.Enabled = true;
                        formSkPmpTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkPmpTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkPmpTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkPmpTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkPmpTambah.sbCariPemohon.Enabled = false;
                        formSkPmpTambah.sbRefresh.Enabled = true;
                        formSkPmpTambah.sbValidasi.Enabled = true;
                        formSkPmpTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkPmpTambah.cePilihSemua.Enabled = true;
                        formSkPmpTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkPmpTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL_PINDAHTANGAN = formSkPmpUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkPmpUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkPmpUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkPmpUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkPmpUbah.teJabatan.Text;
                        //dataPenyama.JANGKA_WAKTU = Convert.ToDecimal(formSkPmpUbah.teJangkaWaktu.Text);
                        dataPenyama.KD_KL = formSkPmpUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkPmpUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkPmpUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkPmpUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkPmpUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkPmpUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkPmpUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkPmpUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkPmpUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkPmpUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkPmp.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkPmpUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkPmpUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkPmpUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkPmpUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkPmp.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NM_PHK_LAIN = formSkPmpUbah.teNamaPihakLain.Text;
                        dataPenyama.NUM = gridSkPmp.dataTerpilih.NUM;
                        dataPenyama.PERUNTUKAN = formSkPmpUbah.tePeruntukan.Text;
                        dataPenyama.SK_KEPUTUSAN = formSkPmpUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkPmp.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkPmp.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkPmpUbah.teTanggalSk.Text);
                        dataPenyama.THN_ANG = formSkPmpUbah.teTahunAnggaran.Text;
                        dataPenyama.TIPE_PEMOHON = formSkPmpUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkPmp.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkPmp.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkPmp.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkPmpUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkPmpUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkPmpUbah.teUraianKeputusan.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formSkPmpUbah.teAlamatPihakLain.Text;
                        int _indeksData = dsGridRskPmp.IndexOf(gridSkPmp.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskPmp.Remove(gridSkPmp.dataTerpilih);
                        dsGridRskPmp.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskPmp.Remove(gridSkPmp.dataTerpilih);
                        break;
                }
                gridSkPmp.dsDataSource = dsGridRskPmp;
                gridSkPmp.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutPmpCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data PMP

        #endregion PMP

        #region penghapusan
        #region -->> [15] Pemusnahan BMN
        RSK.ucRskMusnahBmnGrid gridSkMusnahBmn;
        RSK.ucRskMusnahBmnForm formSkMusnahBmnTambah;
        RSK.ucRskMusnahBmnForm formSkMusnahBmnUbah;
        RSK.ucRskMusnahBmnForm formSkMusnahBmnDetail;
        private ArrayList dsGridRskMusnahBmn;
        SvcWasdalHapusSkSelect.OutputParameters dOutRskMusnahBmn;
        SvcWasdalHapusSkSelect.execute_pttClient ambilRskMusnahBmn;

        private void setEventTombolRskMusnahBmn()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskMusnahBmnKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkMusnahBmn()
        {
            //if (gridSkMusnahBmn == null)
            //{
                gridSkMusnahBmn = new RSK.ucRskMusnahBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskMusnahBmn),
                    detailDataGrid = new DetailDataGrid(bbiRskMusnahBmnUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskMusnahBmn();
            setPanel(gridSkMusnahBmn);
        }

        #region --++ Tombol Ribbon Pemusnahan BMN
        private void bbiRskMusnahBmnTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan15), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkMusnahBmnTambah == null)
                {
                    formSkMusnahBmnTambah = new RSK.ucRskMusnahBmnForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskMusnahBmn),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridMusnahBmn)
                    };
                }
                setPanel(formSkMusnahBmnTambah);
                formSkMusnahBmnTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskMusnahBmnUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkMusnahBmn.dataTerpilih != null)
            {
                if (formSkMusnahBmnUbah == null)
                {
                    formSkMusnahBmnUbah = new RSK.ucRskMusnahBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskMusnahBmn),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridMusnahBmn)
                    };
                }
                formSkMusnahBmnUbah.dataTerpilih = gridSkMusnahBmn.dataTerpilih;
                setPanel(formSkMusnahBmnUbah);
                formSkMusnahBmnUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskMusnahBmnHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkMusnahBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkMusnahBmn.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_HAPUS = gridSkMusnahBmn.dataTerpilih.ID_SK_WASDAL_HAPUS;
                        parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                        parInp.P_ID_PEMOHON = gridSkMusnahBmn.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkMusnahBmn.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkMusnahBmn.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkMusnahBmn.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkMusnahBmn.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkMusnahBmn.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkMusnahBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkMusnahBmn.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkMusnahBmn.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkMusnahBmn.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkMusnahBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkMusnahBmn.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkMusnahBmn.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkMusnahBmn.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkMusnahBmn.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkMusnahBmn.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkMusnahBmn.dataTerpilih.UR_SATKER;
                        simpanDataMusnahBmn = new SvcWasdalHapusCud.execute_pttClient();
                        simpanDataMusnahBmn.Open();
                        simpanDataMusnahBmn.Beginexecute(parInp, new AsyncCallback(cudRskMusnahBmn), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskMusnahBmnDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkMusnahBmn.dataTerpilih != null)
            {
                if (formSkMusnahBmnDetail == null)
                {
                    formSkMusnahBmnDetail = new RSK.ucRskMusnahBmnForm("A");
                    formSkMusnahBmnDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkMusnahBmnDetail.dataTerpilih = gridSkMusnahBmn.dataTerpilih;
                setPanel(formSkMusnahBmnDetail);
                formSkMusnahBmnDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskMusnahBmnKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkMusnahBmn);
            setTombolRskGrid();
            gridSkMusnahBmn.dsDataSource = dsGridRskMusnahBmn;
            gridSkMusnahBmn.displayData();
        }

        private void bbiRskMusnahBmnRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkMusnahBmn.teNamaKolom.Text = "";
            gridSkMusnahBmn.teCari.Text = "";
            gridSkMusnahBmn.fieldDicari = "";
            gridSkMusnahBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskMusnahBmn();
        }

        private void bbiRskMusnahBmnMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskMusnahBmn();
            }
        }

        private void bbiRskMusnahBmnKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskMusnahBmnKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon  Pemusnahan BMN

        private void nbiRskPemusnahanBmn_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan15;
            konfigApp.kdPelayanan = "15";
            konfigApp.namaPelayanan = konfigApp.namaLayanan15;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkMusnahBmn();
            modeCari = false;
            gridSkMusnahBmn.teNamaKolom.Text = "";
            gridSkMusnahBmn.teCari.Text = "";
            gridSkMusnahBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskMusnahBmn();
        }

        #region --++ Ambil Data Pemusnahan BMN
        private void getInitRskMusnahBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusSkSelect.InputParameters parInp = new SvcWasdalHapusSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskMusnahBmn = new SvcWasdalHapusSkSelect.execute_pttClient();
                ambilRskMusnahBmn.Open();
                ambilRskMusnahBmn.Beginexecute(parInp, new AsyncCallback(getRskMusnahBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskMusnahBmn(IAsyncResult result)
        {
            try
            {
                dOutRskMusnahBmn = ambilRskMusnahBmn.Endexecute(result);
                ambilRskMusnahBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskMusnahBmn(dsRskMusnahBmn), dOutRskMusnahBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskMusnahBmn(SvcWasdalHapusSkSelect.OutputParameters dataOut);

        private void dsRskMusnahBmn(SvcWasdalHapusSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskMusnahBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskMusnahBmn.Add(dataOut.SF_READ_WASDAL_HAPUS[i]);
            }
            gridSkMusnahBmn.labelTotData.Text = "";
            gridSkMusnahBmn.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkMusnahBmn.sbCariOnline.Enabled = !modeCari;
            gridSkMusnahBmn.dsDataSource = dsGridRskMusnahBmn;
            gridSkMusnahBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkMusnahBmn.teNamaKolom.Text.Trim();
                string xDua = gridSkMusnahBmn.teCari.Text.Trim();
                string xTiga = gridSkMusnahBmn.fieldDicari;
                gridSkMusnahBmn.gvGridSk.ClearColumnsFilter();
                gridSkMusnahBmn.teNamaKolom.Text = xSatu;
                gridSkMusnahBmn.teCari.Text = xDua;
                gridSkMusnahBmn.fieldDicari = xTiga;
            }
            else
                gridSkMusnahBmn.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskMusnahBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskMusnahBmn();
        }
        #endregion Ambil Pemusnahan BMN

        #region --++ Simpan Data Pemusnahan BMN
        SvcWasdalHapusCud.OutputParameters dOutAmbilDataMusnahBmn;
        SvcWasdalHapusCud.execute_pttClient simpanDataMusnahBmn;

        private void simpanDataRskMusnahBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.idSkWasdal : formSkMusnahBmnUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.idPemohon : formSkMusnahBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_SATKER = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.idPemohon : formSkMusnahBmnUbah.idPemohon);//
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teKodePemohon.Text : formSkMusnahBmnUbah.teKodePemohon.Text);//
                parInp.P_UR_SATKER = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teNamaPemohon.Text : formSkMusnahBmnUbah.teNamaPemohon.Text);//

                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.rgJenisAset.EditValue.ToString() : formSkMusnahBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teJabatan.Text.Trim() : formSkMusnahBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.lePenerbitSk.EditValue.ToString() : formSkMusnahBmnUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.kodePenerbitSkDetail : formSkMusnahBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkMusnahBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnTambah.teNilaiPenetapan.Text)) : (formSkMusnahBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teNipPenandaTangan.Text : formSkMusnahBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teNamaPenandaTangan.Text : formSkMusnahBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.lePenerbitSk.Text : formSkMusnahBmnUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teNmPenerbitSkDetail.Text : formSkMusnahBmnUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teNomorSk.Text.Trim() : formSkMusnahBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teTanggalSk.EditValue : formSkMusnahBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teJenisPemohon.Text : formSkMusnahBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teUraianKeputusan.Text : formSkMusnahBmnUbah.teUraianKeputusan.Text);
                parInp.P_ALASAN = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teAlasan.Text : formSkMusnahBmnUbah.teAlasan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.tipePengelola : formSkMusnahBmnUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkMusnahBmnTambah.filePath) : konfigApp.FileToByteArray(formSkMusnahBmnUbah.filePath));
                parInp.P_NAMA_PENGADILAN = null;
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teTahunAnggaran.Text : formSkMusnahBmnUbah.teTahunAnggaran.Text);
                parInp.P_KD_KL = ((_mode == "C" || _mode == "CU") ? formSkMusnahBmnTambah.teKodeKl.Text : formSkMusnahBmnUbah.teKodeKl.Text);//
               
                simpanDataMusnahBmn = new SvcWasdalHapusCud.execute_pttClient();
                simpanDataMusnahBmn.Open();
                simpanDataMusnahBmn.Beginexecute(parInp, new AsyncCallback(cudRskMusnahBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskMusnahBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataMusnahBmn = simpanDataMusnahBmn.Endexecute(result);
                simpanDataMusnahBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsMusnahBmn(this.ubahDsMusnahBmn), dOutAmbilDataMusnahBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsMusnahBmn(SvcWasdalHapusCud.OutputParameters dataOutMusnahBmnCrud);

        private void ubahDsMusnahBmn(SvcWasdalHapusCud.OutputParameters dataOutMusnahBmnCrud)
        {
            if (dataOutMusnahBmnCrud.PO_RESULT == "Y")
            {
                SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALASAN = formSkMusnahBmnTambah.teAlasan.Text;
                        dataPenyama.ID_PEMOHON = formSkMusnahBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkMusnahBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkMusnahBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkMusnahBmnTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkMusnahBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkMusnahBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkMusnahBmnTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkMusnahBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkMusnahBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkMusnahBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkMusnahBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkMusnahBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkMusnahBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkMusnahBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkMusnahBmnTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkMusnahBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskMusnahBmn == null ? 1 : dsGridRskMusnahBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkMusnahBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkMusnahBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkMusnahBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkMusnahBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkMusnahBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkMusnahBmnTambah.teUraianKeputusan.Text;
                        dataPenyama.NAMA_PENGADILAN = null;
                        if (dsGridRskMusnahBmn == null) dsGridRskMusnahBmn = new ArrayList();
                        dsGridRskMusnahBmn.Add(dataPenyama);
                        gridSkMusnahBmn.dataTerpilih = dataPenyama;
                        formSkMusnahBmnTambah.gcDaftarAset.Enabled = true;
                        formSkMusnahBmnTambah.sbTambah.Enabled = true;
                        formSkMusnahBmnTambah.sbHapus.Enabled = true;
                        formSkMusnahBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkMusnahBmnTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkMusnahBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkMusnahBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkMusnahBmnTambah.sbCariPemohon.Enabled = false;
                        formSkMusnahBmnTambah.sbRefresh.Enabled = true;
                        formSkMusnahBmnTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkMusnahBmnTambah.cePilihSemua.Enabled = true;
                        formSkMusnahBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkMusnahBmnTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formSkMusnahBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkMusnahBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkMusnahBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkMusnahBmnUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkMusnahBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkMusnahBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkMusnahBmnUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkMusnahBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkMusnahBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkMusnahBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkMusnahBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkMusnahBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkMusnahBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkMusnahBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkMusnahBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkMusnahBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkMusnahBmnUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkMusnahBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkMusnahBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkMusnahBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkMusnahBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkMusnahBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkMusnahBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkMusnahBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkMusnahBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkMusnahBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkMusnahBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkMusnahBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkMusnahBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkMusnahBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkMusnahBmnUbah.teUraianKeputusan.Text;
                        int _indeksData = dsGridRskMusnahBmn.IndexOf(gridSkMusnahBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskMusnahBmn.Remove(gridSkMusnahBmn.dataTerpilih);
                        dsGridRskMusnahBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskMusnahBmn.Remove(gridSkMusnahBmn.dataTerpilih);
                        break;
                }
                gridSkMusnahBmn.dsDataSource = dsGridRskMusnahBmn;
                gridSkMusnahBmn.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutMusnahBmnCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data Pemusnahan BMN

        #region --++ Refresh Grid Karena Perubahan Tindak Lanjut
        private void refreshDsGridMusnahBmn(string _nilaiPenetapan = "0", string _kuantitas = "0")
        {
            SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
            dataPenyama.ALASAN = gridSkMusnahBmn.dataTerpilih.ALASAN;
            dataPenyama.ID_PEMOHON = gridSkMusnahBmn.dataTerpilih.ID_PEMOHON;
            dataPenyama.ID_PEMOHONSpecified = gridSkMusnahBmn.dataTerpilih.ID_PEMOHONSpecified;
            dataPenyama.ID_SATKER = gridSkMusnahBmn.dataTerpilih.ID_SATKER;
            dataPenyama.ID_SATKERSpecified = gridSkMusnahBmn.dataTerpilih.ID_SATKERSpecified;
            dataPenyama.ID_USER = gridSkMusnahBmn.dataTerpilih.ID_USER;
            dataPenyama.ID_USERSpecified = gridSkMusnahBmn.dataTerpilih.ID_USERSpecified;
            dataPenyama.IS_TB = gridSkMusnahBmn.dataTerpilih.IS_TB;
            dataPenyama.JABATAN_TTD = gridSkMusnahBmn.dataTerpilih.JABATAN_TTD;
            dataPenyama.KD_KL = gridSkMusnahBmn.dataTerpilih.KD_KL;
            dataPenyama.KD_PELAYANAN = gridSkMusnahBmn.dataTerpilih.KD_PELAYANAN;
            dataPenyama.KD_PEMOHON = gridSkMusnahBmn.dataTerpilih.KD_PEMOHON;
            dataPenyama.KD_PENERBIT_SK = gridSkMusnahBmn.dataTerpilih.KD_PENERBIT_SK;
            dataPenyama.KD_PENERBIT_SK_DTL = gridSkMusnahBmn.dataTerpilih.KD_PENERBIT_SK_DTL;
            dataPenyama.KD_SATKER = gridSkMusnahBmn.dataTerpilih.KD_SATKER;
            dataPenyama.KUANTITAS_SK = Convert.ToDecimal(_kuantitas);
            dataPenyama.KUANTITAS_SKSpecified = gridSkMusnahBmn.dataTerpilih.KUANTITAS_SKSpecified;
            dataPenyama.NAMA_PENGADILAN = gridSkMusnahBmn.dataTerpilih.NAMA_PENGADILAN;
            dataPenyama.NILAI_PENETAPAN = Convert.ToDecimal(_nilaiPenetapan);
            dataPenyama.NILAI_PENETAPANSpecified = gridSkMusnahBmn.dataTerpilih.NILAI_PENETAPANSpecified;
            dataPenyama.NIP_PENANDATANGAN = gridSkMusnahBmn.dataTerpilih.NIP_PENANDATANGAN;
            dataPenyama.NM_PELAYANAN = gridSkMusnahBmn.dataTerpilih.NM_PELAYANAN;
            dataPenyama.NM_PEMOHON = gridSkMusnahBmn.dataTerpilih.NM_PEMOHON;
            dataPenyama.NM_PENANDATANGAN = gridSkMusnahBmn.dataTerpilih.NM_PENANDATANGAN;
            dataPenyama.NM_PENERBIT_SK = gridSkMusnahBmn.dataTerpilih.NM_PENERBIT_SK;
            dataPenyama.NM_PENERBIT_SK_DTL = gridSkMusnahBmn.dataTerpilih.NM_PENERBIT_SK_DTL;
            dataPenyama.NM_PENGGUNA = gridSkMusnahBmn.dataTerpilih.NM_PENGGUNA;
            dataPenyama.NUM = gridSkMusnahBmn.dataTerpilih.NUM;
            dataPenyama.NUMSpecified = gridSkMusnahBmn.dataTerpilih.NUMSpecified;
            dataPenyama.SK_KEPUTUSAN = gridSkMusnahBmn.dataTerpilih.SK_KEPUTUSAN;
            dataPenyama.STATUS_BMN = gridSkMusnahBmn.dataTerpilih.STATUS_BMN;
            dataPenyama.TGL_CREATED = gridSkMusnahBmn.dataTerpilih.TGL_CREATED;
            dataPenyama.TGL_CREATEDSpecified = gridSkMusnahBmn.dataTerpilih.TGL_CREATEDSpecified;
            dataPenyama.TGL_SK = gridSkMusnahBmn.dataTerpilih.TGL_SK;
            dataPenyama.TGL_SKSpecified = gridSkMusnahBmn.dataTerpilih.TGL_SKSpecified;
            dataPenyama.TIPE_PEMOHON = gridSkMusnahBmn.dataTerpilih.TIPE_PEMOHON;
            dataPenyama.TOT_BMN = gridSkMusnahBmn.dataTerpilih.TOT_BMN;
            dataPenyama.TOT_BMNSpecified = gridSkMusnahBmn.dataTerpilih.TOT_BMNSpecified;
            dataPenyama.TOT_STATUS = gridSkMusnahBmn.dataTerpilih.TOT_STATUS;
            dataPenyama.TOT_STATUSSpecified = gridSkMusnahBmn.dataTerpilih.TOT_STATUSSpecified;
            dataPenyama.TOTAL_DATA = gridSkMusnahBmn.dataTerpilih.TOTAL_DATA;
            dataPenyama.TOTAL_DATASpecified = gridSkMusnahBmn.dataTerpilih.TOTAL_DATASpecified;
            dataPenyama.UR_KL = gridSkMusnahBmn.dataTerpilih.UR_KL;
            dataPenyama.UR_SATKER = gridSkMusnahBmn.dataTerpilih.UR_SATKER;
            dataPenyama.URAIAN_KEPUTUSAN = gridSkMusnahBmn.dataTerpilih.URAIAN_KEPUTUSAN;
            int _indeksData = dsGridRskMusnahBmn.IndexOf(gridSkMusnahBmn.dataTerpilih);
            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
            dsGridRskMusnahBmn.Remove(gridSkMusnahBmn.dataTerpilih);
            dsGridRskMusnahBmn.Insert(_indeksData, dataPenyama);
            gridSkMusnahBmn.dsDataSource = dsGridRskMusnahBmn;
            gridSkMusnahBmn.displayData();
        }
        #endregion

        #endregion Pemusnahan BMN

        #region -->> [16] Hapus BMN KPP
        RSK.ucRskHapusBmnKppGrid gridSkHapusBmnKpp;
        RSK.ucRskHapusBmnKppForm formSkHapusBmnKppTambah;
        RSK.ucRskHapusBmnKppForm formSkHapusBmnKppUbah;
        RSK.ucRskHapusBmnKppForm formSkHapusBmnKppDetail;
        private ArrayList dsGridRskHapusBmnKpp;
        SvcWasdalHapusSkSelect.OutputParameters dOutRskHapusBmnKpp;
        SvcWasdalHapusSkSelect.execute_pttClient ambilRskHapusBmnKpp;

        private void setEventTombolRskHapusBmnKpp()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKppKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkHapusBmnKpp()
        {
            //if (gridSkHapusBmnKpp == null)
            //{
                gridSkHapusBmnKpp = new RSK.ucRskHapusBmnKppGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskHapusBmnKpp),
                    detailDataGrid = new DetailDataGrid(bbiRskHapusBmnKppUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskHapusBmnKpp();
            setPanel(gridSkHapusBmnKpp);
        }

        #region --++ Tombol Ribbon Hapus BMN KPP
        private void bbiRskHapusBmnKppTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan16), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkHapusBmnKppTambah == null)
                {
                    formSkHapusBmnKppTambah = new RSK.ucRskHapusBmnKppForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHapusBmnKpp),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridHapusBmnKpp)
                    };
                }
                setPanel(formSkHapusBmnKppTambah);
                formSkHapusBmnKppTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskHapusBmnKppUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKpp.dataTerpilih != null)
            {
                if (formSkHapusBmnKppUbah == null)
                {
                    formSkHapusBmnKppUbah = new RSK.ucRskHapusBmnKppForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHapusBmnKpp),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridHapusBmnKpp)
                    };
                }
                formSkHapusBmnKppUbah.dataTerpilih = gridSkHapusBmnKpp.dataTerpilih;
                setPanel(formSkHapusBmnKppUbah);
                formSkHapusBmnKppUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHapusBmnKppHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKpp.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkHapusBmnKpp.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_HAPUS = gridSkHapusBmnKpp.dataTerpilih.ID_SK_WASDAL_HAPUS;
                        parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                        parInp.P_ID_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkHapusBmnKpp.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkHapusBmnKpp.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkHapusBmnKpp.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkHapusBmnKpp.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkHapusBmnKpp.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkHapusBmnKpp.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkHapusBmnKpp.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkHapusBmnKpp.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkHapusBmnKpp.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkHapusBmnKpp.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkHapusBmnKpp.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkHapusBmnKpp.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkHapusBmnKpp.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkHapusBmnKpp.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkHapusBmnKpp.dataTerpilih.UR_SATKER;
                        simpanDataHapusBmnKpp = new SvcWasdalHapusCud.execute_pttClient();
                        simpanDataHapusBmnKpp.Open();
                        simpanDataHapusBmnKpp.Beginexecute(parInp, new AsyncCallback(cudRskHapusBmnKpp), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskHapusBmnKppDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKpp.dataTerpilih != null)
            {
                if (formSkHapusBmnKppDetail == null)
                {
                    formSkHapusBmnKppDetail = new RSK.ucRskHapusBmnKppForm("A");
                    formSkHapusBmnKppDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkHapusBmnKppDetail.dataTerpilih = gridSkHapusBmnKpp.dataTerpilih;
                setPanel(formSkHapusBmnKppDetail);
                formSkHapusBmnKppDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHapusBmnKppKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkHapusBmnKpp);
            setTombolRskGrid();
            gridSkHapusBmnKpp.dsDataSource = dsGridRskHapusBmnKpp;
            gridSkHapusBmnKpp.displayData();
        }

        private void bbiRskHapusBmnKppRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkHapusBmnKpp.teNamaKolom.Text = "";
            gridSkHapusBmnKpp.teCari.Text = "";
            gridSkHapusBmnKpp.fieldDicari = "";
            gridSkHapusBmnKpp.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskHapusBmnKpp();
        }

        private void bbiRskHapusBmnKppMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskHapusBmnKpp();
            }
        }

        private void bbiRskHapusBmnKppKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskHapusBmnKppKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon Hapus BMN KPP

        private void nbiRskHapusBmnKpp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan16;
            konfigApp.kdPelayanan = "16";
            konfigApp.namaPelayanan = konfigApp.namaLayanan16;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkHapusBmnKpp();
            modeCari = false;
            gridSkHapusBmnKpp.teNamaKolom.Text = "";
            gridSkHapusBmnKpp.teCari.Text = "";
            gridSkHapusBmnKpp.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskHapusBmnKpp();
        }

        #region --++ Ambil Data Hapus BMN KPP
        private void getInitRskHapusBmnKpp()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusSkSelect.InputParameters parInp = new SvcWasdalHapusSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskHapusBmnKpp = new SvcWasdalHapusSkSelect.execute_pttClient();
                ambilRskHapusBmnKpp.Open();
                ambilRskHapusBmnKpp.Beginexecute(parInp, new AsyncCallback(getRskHapusBmnKpp), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskHapusBmnKpp(IAsyncResult result)
        {
            try
            {
                dOutRskHapusBmnKpp = ambilRskHapusBmnKpp.Endexecute(result);
                ambilRskHapusBmnKpp.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskHapusBmnKpp(dsRskHapusBmnKpp), dOutRskHapusBmnKpp);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskHapusBmnKpp(SvcWasdalHapusSkSelect.OutputParameters dataOut);

        private void dsRskHapusBmnKpp(SvcWasdalHapusSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskHapusBmnKpp = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskHapusBmnKpp.Add(dataOut.SF_READ_WASDAL_HAPUS[i]);
            }
            gridSkHapusBmnKpp.labelTotData.Text = "";
            gridSkHapusBmnKpp.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkHapusBmnKpp.sbCariOnline.Enabled = !modeCari;
            gridSkHapusBmnKpp.dsDataSource = dsGridRskHapusBmnKpp;
            gridSkHapusBmnKpp.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkHapusBmnKpp.teNamaKolom.Text.Trim();
                string xDua = gridSkHapusBmnKpp.teCari.Text.Trim();
                string xTiga = gridSkHapusBmnKpp.fieldDicari;
                gridSkHapusBmnKpp.gvGridSk.ClearColumnsFilter();
                gridSkHapusBmnKpp.teNamaKolom.Text = xSatu;
                gridSkHapusBmnKpp.teCari.Text = xDua;
                gridSkHapusBmnKpp.fieldDicari = xTiga;
            }
            else
                gridSkHapusBmnKpp.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskHapusBmnKpp(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskHapusBmnKpp();
        }
        #endregion Ambil Hapus BMN KPP

        #region --++ Simpan Data Hapus BMN KPP
        SvcWasdalHapusCud.OutputParameters dOutAmbilDataHapusBmnKpp;
        SvcWasdalHapusCud.execute_pttClient simpanDataHapusBmnKpp;

        private void simpanDataRskHapusBmnKpp(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.idSkWasdal : formSkHapusBmnKppUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.idPemohon : formSkHapusBmnKppUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.idPemohon : formSkHapusBmnKppUbah.idPemohon);//
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teKodePemohon.Text : formSkHapusBmnKppUbah.teKodePemohon.Text);//
                parInp.P_UR_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNamaPemohon.Text : formSkHapusBmnKppUbah.teNamaPemohon.Text);//

                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.rgJenisAset.EditValue.ToString() : formSkHapusBmnKppUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teJabatan.Text.Trim() : formSkHapusBmnKppUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.lePenerbitSk.EditValue.ToString() : formSkHapusBmnKppUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.kodePenerbitSkDetail : formSkHapusBmnKppUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkHapusBmnKppTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppTambah.teNilaiPenetapan.Text)) : (formSkHapusBmnKppUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNipPenandaTangan.Text : formSkHapusBmnKppUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNamaPenandaTangan.Text : formSkHapusBmnKppUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.lePenerbitSk.Text : formSkHapusBmnKppUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNmPenerbitSkDetail.Text : formSkHapusBmnKppUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNomorSk.Text.Trim() : formSkHapusBmnKppUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teTanggalSk.EditValue : formSkHapusBmnKppUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teJenisPemohon.Text : formSkHapusBmnKppUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teUraianKeputusan.Text : formSkHapusBmnKppUbah.teUraianKeputusan.Text);
                parInp.P_ALASAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teAlasan.Text : formSkHapusBmnKppUbah.teAlasan.Text);
                parInp.P_NAMA_PENGADILAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teNamaPengadilan.Text.Trim() : formSkHapusBmnKppUbah.teNamaPengadilan.Text.Trim());
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.tipePengelola : formSkHapusBmnKppUbah.tipePengelola);
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkHapusBmnKppTambah.filePath) : konfigApp.FileToByteArray(formSkHapusBmnKppUbah.filePath));
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teTahunAnggaran.Text : formSkHapusBmnKppUbah.teTahunAnggaran.Text);
                parInp.P_KD_KL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKppTambah.teKodeKl.Text : formSkHapusBmnKppUbah.teKodeKl.Text);//
                simpanDataHapusBmnKpp = new SvcWasdalHapusCud.execute_pttClient();
                simpanDataHapusBmnKpp.Open();
                simpanDataHapusBmnKpp.Beginexecute(parInp, new AsyncCallback(cudRskHapusBmnKpp), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskHapusBmnKpp(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataHapusBmnKpp = simpanDataHapusBmnKpp.Endexecute(result);
                simpanDataHapusBmnKpp.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsHapusBmnKpp(this.ubahDsHapusBmnKpp), dOutAmbilDataHapusBmnKpp);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsHapusBmnKpp(SvcWasdalHapusCud.OutputParameters dataOutHapusBmnKppCrud);

        private void ubahDsHapusBmnKpp(SvcWasdalHapusCud.OutputParameters dataOutHapusBmnKppCrud)
        {
            if (dataOutHapusBmnKppCrud.PO_RESULT == "Y")
            {
                SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALASAN = formSkHapusBmnKppTambah.teAlasan.Text;
                        dataPenyama.ID_PEMOHON = formSkHapusBmnKppTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHapusBmnKppTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkHapusBmnKppTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHapusBmnKppTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHapusBmnKppTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHapusBmnKppTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHapusBmnKppTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHapusBmnKppTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHapusBmnKppTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHapusBmnKppTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHapusBmnKppTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHapusBmnKppTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkHapusBmnKppTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHapusBmnKppTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHapusBmnKppTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHapusBmnKppTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskHapusBmnKpp == null ? 1 : dsGridRskHapusBmnKpp.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkHapusBmnKppTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHapusBmnKppTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkHapusBmnKppTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkHapusBmnKppTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHapusBmnKppTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHapusBmnKppTambah.teUraianKeputusan.Text;
                        dataPenyama.NAMA_PENGADILAN = formSkHapusBmnKppTambah.teNamaPengadilan.Text;
                        if (dsGridRskHapusBmnKpp == null) dsGridRskHapusBmnKpp = new ArrayList();
                        dsGridRskHapusBmnKpp.Add(dataPenyama);
                        gridSkHapusBmnKpp.dataTerpilih = dataPenyama;
                        formSkHapusBmnKppTambah.gcDaftarAset.Enabled = true;
                        formSkHapusBmnKppTambah.sbTambah.Enabled = true;
                        formSkHapusBmnKppTambah.sbHapus.Enabled = true;
                        formSkHapusBmnKppTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkHapusBmnKppTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkHapusBmnKppTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkHapusBmnKppTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkHapusBmnKppTambah.sbCariPemohon.Enabled = false;
                        formSkHapusBmnKppTambah.sbRefresh.Enabled = true;
                        formSkHapusBmnKppTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkHapusBmnKppTambah.cePilihSemua.Enabled = true;
                        formSkHapusBmnKppTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkHapusBmnKppTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ALASAN = formSkHapusBmnKppUbah.teAlasan.Text;
                        dataPenyama.ID_PEMOHON = formSkHapusBmnKppUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHapusBmnKppUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkHapusBmnKppUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHapusBmnKppUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHapusBmnKppUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHapusBmnKppUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHapusBmnKppUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHapusBmnKppUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHapusBmnKppUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHapusBmnKppUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHapusBmnKppUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKppUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHapusBmnKppUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkHapusBmnKpp.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkHapusBmnKppUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHapusBmnKppUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHapusBmnKppUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHapusBmnKppUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkHapusBmnKpp.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkHapusBmnKpp.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkHapusBmnKppUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkHapusBmnKpp.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkHapusBmnKpp.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHapusBmnKppUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkHapusBmnKppUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkHapusBmnKpp.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkHapusBmnKpp.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkHapusBmnKpp.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkHapusBmnKppUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHapusBmnKppUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHapusBmnKppUbah.teUraianKeputusan.Text;
                        dataPenyama.NAMA_PENGADILAN = formSkHapusBmnKppUbah.teNamaPengadilan.Text;
                        int _indeksData = dsGridRskHapusBmnKpp.IndexOf(gridSkHapusBmnKpp.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskHapusBmnKpp.Remove(gridSkHapusBmnKpp.dataTerpilih);
                        dsGridRskHapusBmnKpp.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskHapusBmnKpp.Remove(gridSkHapusBmnKpp.dataTerpilih);
                        break;
                }
                gridSkHapusBmnKpp.dsDataSource = dsGridRskHapusBmnKpp;
                gridSkHapusBmnKpp.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutHapusBmnKppCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data Hapus BMN KPP

        #region --++ Refresh Grid Karena Perubahan Tindak Lanjut
        private void refreshDsGridHapusBmnKpp(string _nilaiPenetapan = "0", string _kuantitas = "0")
        {
            SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
            dataPenyama.ALASAN = gridSkHapusBmnKpp.dataTerpilih.ALASAN;
            dataPenyama.ID_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.ID_PEMOHON;
            dataPenyama.ID_PEMOHONSpecified = gridSkHapusBmnKpp.dataTerpilih.ID_PEMOHONSpecified;
            dataPenyama.ID_SATKER = gridSkHapusBmnKpp.dataTerpilih.ID_SATKER;
            dataPenyama.ID_SATKERSpecified = gridSkHapusBmnKpp.dataTerpilih.ID_SATKERSpecified;
            dataPenyama.ID_USER = gridSkHapusBmnKpp.dataTerpilih.ID_USER;
            dataPenyama.ID_USERSpecified = gridSkHapusBmnKpp.dataTerpilih.ID_USERSpecified;
            dataPenyama.IS_TB = gridSkHapusBmnKpp.dataTerpilih.IS_TB;
            dataPenyama.JABATAN_TTD = gridSkHapusBmnKpp.dataTerpilih.JABATAN_TTD;
            dataPenyama.KD_KL = gridSkHapusBmnKpp.dataTerpilih.KD_KL;
            dataPenyama.KD_PELAYANAN = gridSkHapusBmnKpp.dataTerpilih.KD_PELAYANAN;
            dataPenyama.KD_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.KD_PEMOHON;
            dataPenyama.KD_PENERBIT_SK = gridSkHapusBmnKpp.dataTerpilih.KD_PENERBIT_SK;
            dataPenyama.KD_PENERBIT_SK_DTL = gridSkHapusBmnKpp.dataTerpilih.KD_PENERBIT_SK_DTL;
            dataPenyama.KD_SATKER = gridSkHapusBmnKpp.dataTerpilih.KD_SATKER;
            dataPenyama.KUANTITAS_SK = Convert.ToDecimal(_kuantitas);
            dataPenyama.KUANTITAS_SKSpecified = gridSkHapusBmnKpp.dataTerpilih.KUANTITAS_SKSpecified;
            dataPenyama.NAMA_PENGADILAN = gridSkHapusBmnKpp.dataTerpilih.NAMA_PENGADILAN;
            dataPenyama.NILAI_PENETAPAN = Convert.ToDecimal(_nilaiPenetapan);
            dataPenyama.NILAI_PENETAPANSpecified = gridSkHapusBmnKpp.dataTerpilih.NILAI_PENETAPANSpecified;
            dataPenyama.NIP_PENANDATANGAN = gridSkHapusBmnKpp.dataTerpilih.NIP_PENANDATANGAN;
            dataPenyama.NM_PELAYANAN = gridSkHapusBmnKpp.dataTerpilih.NM_PELAYANAN;
            dataPenyama.NM_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.NM_PEMOHON;
            dataPenyama.NM_PENANDATANGAN = gridSkHapusBmnKpp.dataTerpilih.NM_PENANDATANGAN;
            dataPenyama.NM_PENERBIT_SK = gridSkHapusBmnKpp.dataTerpilih.NM_PENERBIT_SK;
            dataPenyama.NM_PENERBIT_SK_DTL = gridSkHapusBmnKpp.dataTerpilih.NM_PENERBIT_SK_DTL;
            dataPenyama.NM_PENGGUNA = gridSkHapusBmnKpp.dataTerpilih.NM_PENGGUNA;
            dataPenyama.NUM = gridSkHapusBmnKpp.dataTerpilih.NUM;
            dataPenyama.NUMSpecified = gridSkHapusBmnKpp.dataTerpilih.NUMSpecified;
            dataPenyama.SK_KEPUTUSAN = gridSkHapusBmnKpp.dataTerpilih.SK_KEPUTUSAN;
            dataPenyama.STATUS_BMN = gridSkHapusBmnKpp.dataTerpilih.STATUS_BMN;
            dataPenyama.TGL_CREATED = gridSkHapusBmnKpp.dataTerpilih.TGL_CREATED;
            dataPenyama.TGL_CREATEDSpecified = gridSkHapusBmnKpp.dataTerpilih.TGL_CREATEDSpecified;
            dataPenyama.TGL_SK = gridSkHapusBmnKpp.dataTerpilih.TGL_SK;
            dataPenyama.TGL_SKSpecified = gridSkHapusBmnKpp.dataTerpilih.TGL_SKSpecified;
            dataPenyama.TIPE_PEMOHON = gridSkHapusBmnKpp.dataTerpilih.TIPE_PEMOHON;
            dataPenyama.TOT_BMN = gridSkHapusBmnKpp.dataTerpilih.TOT_BMN;
            dataPenyama.TOT_BMNSpecified = gridSkHapusBmnKpp.dataTerpilih.TOT_BMNSpecified;
            dataPenyama.TOT_STATUS = gridSkHapusBmnKpp.dataTerpilih.TOT_STATUS;
            dataPenyama.TOT_STATUSSpecified = gridSkHapusBmnKpp.dataTerpilih.TOT_STATUSSpecified;
            dataPenyama.TOTAL_DATA = gridSkHapusBmnKpp.dataTerpilih.TOTAL_DATA;
            dataPenyama.TOTAL_DATASpecified = gridSkHapusBmnKpp.dataTerpilih.TOTAL_DATASpecified;
            dataPenyama.UR_KL = gridSkHapusBmnKpp.dataTerpilih.UR_KL;
            dataPenyama.UR_SATKER = gridSkHapusBmnKpp.dataTerpilih.UR_SATKER;
            dataPenyama.URAIAN_KEPUTUSAN = gridSkHapusBmnKpp.dataTerpilih.URAIAN_KEPUTUSAN;
            int _indeksData = dsGridRskHapusBmnKpp.IndexOf(gridSkHapusBmnKpp.dataTerpilih);
            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
            dsGridRskHapusBmnKpp.Remove(gridSkHapusBmnKpp.dataTerpilih);
            dsGridRskHapusBmnKpp.Insert(_indeksData, dataPenyama);
            gridSkHapusBmnKpp.dsDataSource = dsGridRskHapusBmnKpp;
            gridSkHapusBmnKpp.displayData();
        }
        #endregion

        #endregion Hapus BMN KPP

        #region -->> [17] Hapus BMN KSL
        RSK.ucRskHapusBmnKslGrid gridSkHapusBmnKsl;
        RSK.ucRskHapusBmnKslForm formSkHapusBmnKslTambah;
        RSK.ucRskHapusBmnKslForm formSkHapusBmnKslUbah;
        RSK.ucRskHapusBmnKslForm formSkHapusBmnKslDetail;
        private ArrayList dsGridRskHapusBmnKsl;
        SvcWasdalHapusSkSelect.OutputParameters dOutRskHapusBmnKsl;
        SvcWasdalHapusSkSelect.execute_pttClient ambilRskHapusBmnKsl;

        private void setEventTombolRskHapusBmnKsl()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslKembaliGridKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslMoreDataKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslKeluarKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskHapusBmnKslKembaliKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkHapusBmnKsl()
        {
            //if (gridSkHapusBmnKsl == null)
            //{
                gridSkHapusBmnKsl = new RSK.ucRskHapusBmnKslGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRskHapusBmnKsl),
                    detailDataGrid = new DetailDataGrid(bbiRskHapusBmnKslUbahKlik)
                };
            //}
            setTombolRskGrid();
            setEventTombolRskHapusBmnKsl();
            setPanel(gridSkHapusBmnKsl);
        }

        #region --++ Tombol Ribbon  Hapus BMN KSL
        private void bbiRskHapusBmnKslTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan15), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkHapusBmnKslTambah == null)
                {
                    formSkHapusBmnKslTambah = new RSK.ucRskHapusBmnKslForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHapusBmnKsl),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridHapusBmnKsl)
                    };
                }
                setPanel(formSkHapusBmnKslTambah);
                formSkHapusBmnKslTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskHapusBmnKslUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKsl.dataTerpilih != null)
            {
                if (formSkHapusBmnKslUbah == null)
                {
                    formSkHapusBmnKslUbah = new RSK.ucRskHapusBmnKslForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskHapusBmnKsl),
                        //delegateDuaParameter = new DelegateDuaParameter(refreshDsGridHapusBmnKsl)
                    };
                }
                formSkHapusBmnKslUbah.dataTerpilih = gridSkHapusBmnKsl.dataTerpilih;
                setPanel(formSkHapusBmnKslUbah);
                formSkHapusBmnKslUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHapusBmnKslHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKsl.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkHapusBmnKsl.dataTerpilih.SK_KEPUTUSAN), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                        parInp.P_ID_SK_WASDAL_HAPUS = gridSkHapusBmnKsl.dataTerpilih.ID_SK_WASDAL_HAPUS;
                        parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                        parInp.P_ID_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_PEMOHONSpecified = true;
                        parInp.P_ID_USER = gridSkHapusBmnKsl.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_IS_TB = gridSkHapusBmnKsl.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkHapusBmnKsl.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_PELAYANAN = gridSkHapusBmnKsl.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkHapusBmnKsl.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkHapusBmnKsl.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_NIP_PENANDATANGAN = gridSkHapusBmnKsl.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkHapusBmnKsl.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkHapusBmnKsl.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkHapusBmnKsl.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN = gridSkHapusBmnKsl.dataTerpilih.SK_KEPUTUSAN;
                        parInp.P_TIPE_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.TIPE_PEMOHON;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkHapusBmnKsl.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SATKER = gridSkHapusBmnKsl.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SATKERSpecified = true;
                        parInp.P_KD_SATKER = gridSkHapusBmnKsl.dataTerpilih.KD_SATKER;
                        parInp.P_UR_SATKER = gridSkHapusBmnKsl.dataTerpilih.UR_SATKER;
                        simpanDataHapusBmnKsl = new SvcWasdalHapusCud.execute_pttClient();
                        simpanDataHapusBmnKsl.Open();
                        simpanDataHapusBmnKsl.Beginexecute(parInp, new AsyncCallback(cudRskHapusBmnKsl), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskHapusBmnKslDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkHapusBmnKsl.dataTerpilih != null)
            {
                if (formSkHapusBmnKslDetail == null)
                {
                    formSkHapusBmnKslDetail = new RSK.ucRskHapusBmnKslForm("A");
                    formSkHapusBmnKslDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkHapusBmnKslDetail.dataTerpilih = gridSkHapusBmnKsl.dataTerpilih;
                setPanel(formSkHapusBmnKslDetail);
                formSkHapusBmnKslDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskHapusBmnKslKembaliGridKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkHapusBmnKsl);
            setTombolRskGrid();
            gridSkHapusBmnKsl.dsDataSource = dsGridRskHapusBmnKsl;
            gridSkHapusBmnKsl.displayData();
        }

        private void bbiRskHapusBmnKslRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkHapusBmnKsl.teNamaKolom.Text = "";
            gridSkHapusBmnKsl.teCari.Text = "";
            gridSkHapusBmnKsl.fieldDicari = "";
            gridSkHapusBmnKsl.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskHapusBmnKsl();
        }

        private void bbiRskHapusBmnKslMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskHapusBmnKsl();
            }
        }

        private void bbiRskHapusBmnKslKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiRskHapusBmnKslKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRekamSK.Visible = false;
        }

        #endregion --++ Tombol Ribbon  Hapus BMN KSL

        private void nbiRskHapusBmnKsl_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan17;
            konfigApp.kdPelayanan = "17";
            konfigApp.namaPelayanan = konfigApp.namaLayanan17;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkHapusBmnKsl();
            modeCari = false;
            gridSkHapusBmnKsl.teNamaKolom.Text = "";
            gridSkHapusBmnKsl.teCari.Text = "";
            gridSkHapusBmnKsl.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskHapusBmnKsl();
        }

        #region --++ Ambil Data  Hapus BMN KSL
        private void getInitRskHapusBmnKsl()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusSkSelect.InputParameters parInp = new SvcWasdalHapusSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_KPKNL = {1} AND THN_ANG='{2}' {3}", konfigApp.kdPelayanan, konfigApp.idKpknl, konfigApp.tahunAnggaran, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND " +
            " (ID_USER={1} " +
             "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
             "OR ID_SATKER = {2} " +
             "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskHapusBmnKsl = new SvcWasdalHapusSkSelect.execute_pttClient();
                ambilRskHapusBmnKsl.Open();
                ambilRskHapusBmnKsl.Beginexecute(parInp, new AsyncCallback(getRskHapusBmnKsl), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskHapusBmnKsl(IAsyncResult result)
        {
            try
            {
                dOutRskHapusBmnKsl = ambilRskHapusBmnKsl.Endexecute(result);
                ambilRskHapusBmnKsl.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskHapusBmnKsl(dsRskHapusBmnKsl), dOutRskHapusBmnKsl);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskHapusBmnKsl(SvcWasdalHapusSkSelect.OutputParameters dataOut);

        private void dsRskHapusBmnKsl(SvcWasdalHapusSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
            }

            if (dataInisial == true)
            {
                dsGridRskHapusBmnKsl = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskHapusBmnKsl.Add(dataOut.SF_READ_WASDAL_HAPUS[i]);
            }
            gridSkHapusBmnKsl.labelTotData.Text = "";
            gridSkHapusBmnKsl.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkHapusBmnKsl.sbCariOnline.Enabled = !modeCari;
            gridSkHapusBmnKsl.dsDataSource = dsGridRskHapusBmnKsl;
            gridSkHapusBmnKsl.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkHapusBmnKsl.teNamaKolom.Text.Trim();
                string xDua = gridSkHapusBmnKsl.teCari.Text.Trim();
                string xTiga = gridSkHapusBmnKsl.fieldDicari;
                gridSkHapusBmnKsl.gvGridSk.ClearColumnsFilter();
                gridSkHapusBmnKsl.teNamaKolom.Text = xSatu;
                gridSkHapusBmnKsl.teCari.Text = xDua;
                gridSkHapusBmnKsl.fieldDicari = xTiga;
            }
            else
                gridSkHapusBmnKsl.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskHapusBmnKsl(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskHapusBmnKsl();
        }
        #endregion Ambil  Hapus BMN KSL

        #region --++ Simpan Data  Hapus BMN KSL
        SvcWasdalHapusCud.OutputParameters dOutAmbilDataHapusBmnKsl;
        SvcWasdalHapusCud.execute_pttClient simpanDataHapusBmnKsl;

        private void simpanDataRskHapusBmnKsl(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusCud.InputParameters parInp = new SvcWasdalHapusCud.InputParameters();
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.idSkWasdal : formSkHapusBmnKslUbah.idSkWasdal);//
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.idPemohon : formSkHapusBmnKslUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.idPemohon : formSkHapusBmnKslUbah.idPemohon);//
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teKodePemohon.Text : formSkHapusBmnKslUbah.teKodePemohon.Text);//
                parInp.P_UR_SATKER = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNamaPemohon.Text : formSkHapusBmnKslUbah.teNamaPemohon.Text);//
                

                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.rgJenisAset.EditValue.ToString() : formSkHapusBmnKslUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teJabatan.Text.Trim() : formSkHapusBmnKslUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.lePenerbitSk.EditValue.ToString() : formSkHapusBmnKslUbah.lePenerbitSk.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.kodePenerbitSkDetail : formSkHapusBmnKslUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkHapusBmnKslTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslTambah.teNilaiPenetapan.Text)) : (formSkHapusBmnKslUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNipPenandaTangan.Text : formSkHapusBmnKslUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNamaPenandaTangan.Text : formSkHapusBmnKslUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.lePenerbitSk.Text : formSkHapusBmnKslUbah.lePenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNmPenerbitSkDetail.Text : formSkHapusBmnKslUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNomorSk.Text.Trim() : formSkHapusBmnKslUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = ((_mode == "C" || _mode == "CU") ? konfigApp.DateToString(DateTime.Now) : null);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teTanggalSk.EditValue : formSkHapusBmnKslUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teJenisPemohon.Text : formSkHapusBmnKslUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teUraianKeputusan.Text : formSkHapusBmnKslUbah.teUraianKeputusan.Text);
                parInp.P_ALASAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teAlasan.Text : formSkHapusBmnKslUbah.teAlasan.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.tipePengelola : formSkHapusBmnKslUbah.tipePengelola);
                parInp.P_NAMA_PENGADILAN = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teNamaPengadilan.Text.Trim() : formSkHapusBmnKslUbah.teNamaPengadilan.Text.Trim());
                //parInp.P_FILE_DOK = ((_mode == "C" || _mode == "CU") ? konfigApp.FileToByteArray(formSkHapusBmnKslTambah.filePath) : konfigApp.FileToByteArray(formSkHapusBmnKslUbah.filePath));
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teTahunAnggaran.Text : formSkHapusBmnKslUbah.teTahunAnggaran.Text);
                parInp.P_KD_KL = ((_mode == "C" || _mode == "CU") ? formSkHapusBmnKslTambah.teKodeKl.Text : formSkHapusBmnKslUbah.teKodeKl.Text);//
                
                simpanDataHapusBmnKsl = new SvcWasdalHapusCud.execute_pttClient();
                simpanDataHapusBmnKsl.Open();
                simpanDataHapusBmnKsl.Beginexecute(parInp, new AsyncCallback(cudRskHapusBmnKsl), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRskHapusBmnKsl(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataHapusBmnKsl = simpanDataHapusBmnKsl.Endexecute(result);
                simpanDataHapusBmnKsl.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsHapusBmnKsl(this.ubahDsHapusBmnKsl), dOutAmbilDataHapusBmnKsl);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsHapusBmnKsl(SvcWasdalHapusCud.OutputParameters dataOutHapusBmnKslCrud);

        private void ubahDsHapusBmnKsl(SvcWasdalHapusCud.OutputParameters dataOutHapusBmnKslCrud)
        {
            if (dataOutHapusBmnKslCrud.PO_RESULT == "Y")
            {
                SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ALASAN = formSkHapusBmnKslTambah.teAlasan.Text;
                        dataPenyama.ID_PEMOHON = formSkHapusBmnKslTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHapusBmnKslTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkHapusBmnKslTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHapusBmnKslTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHapusBmnKslTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHapusBmnKslTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHapusBmnKslTambah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHapusBmnKslTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHapusBmnKslTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHapusBmnKslTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHapusBmnKslTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHapusBmnKslTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkHapusBmnKslTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHapusBmnKslTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHapusBmnKslTambah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHapusBmnKslTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskHapusBmnKsl == null ? 1 : dsGridRskHapusBmnKsl.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formSkHapusBmnKslTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHapusBmnKslTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkHapusBmnKslTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formSkHapusBmnKslTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHapusBmnKslTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHapusBmnKslTambah.teUraianKeputusan.Text;
                        dataPenyama.NAMA_PENGADILAN = formSkHapusBmnKslTambah.teNamaPengadilan.Text;
                        dsGridRskHapusBmnKsl.Add(dataPenyama);
                        gridSkHapusBmnKsl.dataTerpilih = dataPenyama;
                        formSkHapusBmnKslTambah.gcDaftarAset.Enabled = true;
                        formSkHapusBmnKslTambah.sbTambah.Enabled = true;
                        formSkHapusBmnKslTambah.sbHapus.Enabled = true;
                        formSkHapusBmnKslTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkHapusBmnKslTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkHapusBmnKslTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkHapusBmnKslTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkHapusBmnKslTambah.sbCariPemohon.Enabled = false;
                        formSkHapusBmnKslTambah.sbRefresh.Enabled = true;
                        formSkHapusBmnKslTambah.lePenerbitSk.Properties.ReadOnly = true;
                        formSkHapusBmnKslTambah.cePilihSemua.Enabled = true;
                        formSkHapusBmnKslTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkHapusBmnKslTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ALASAN = formSkHapusBmnKslUbah.teAlasan.Text;
                        dataPenyama.ID_PEMOHON = formSkHapusBmnKslUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkHapusBmnKslUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkHapusBmnKslUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkHapusBmnKslUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkHapusBmnKslUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkHapusBmnKslUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkHapusBmnKslUbah.lePenerbitSk.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkHapusBmnKslUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkHapusBmnKslUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkHapusBmnKslUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkHapusBmnKslUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkHapusBmnKslUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkHapusBmnKslUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkHapusBmnKsl.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkHapusBmnKslUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkHapusBmnKslUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkHapusBmnKslUbah.lePenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkHapusBmnKslUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkHapusBmnKsl.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkHapusBmnKsl.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formSkHapusBmnKslUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkHapusBmnKsl.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkHapusBmnKsl.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formSkHapusBmnKslUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formSkHapusBmnKslUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkHapusBmnKsl.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkHapusBmnKsl.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkHapusBmnKsl.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkHapusBmnKslUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkHapusBmnKslUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkHapusBmnKslUbah.teUraianKeputusan.Text;
                        dataPenyama.NAMA_PENGADILAN = formSkHapusBmnKslUbah.teNamaPengadilan.Text;
                        int _indeksData = dsGridRskHapusBmnKsl.IndexOf(gridSkHapusBmnKsl.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskHapusBmnKsl.Remove(gridSkHapusBmnKsl.dataTerpilih);
                        dsGridRskHapusBmnKsl.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskHapusBmnKsl.Remove(gridSkHapusBmnKsl.dataTerpilih);
                        break;
                }
                gridSkHapusBmnKsl.dsDataSource = dsGridRskHapusBmnKsl;
                gridSkHapusBmnKsl.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutHapusBmnKslCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data  Hapus BMN KSL

        #region --++ Refresh Grid Karena Perubahan Tindak Lanjut
        private void refreshDsGridHapusBmnKsl(string _nilaiPenetapan = "0", string _kuantitas = "0")
        {
            SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS dataPenyama = new SvcWasdalHapusSkSelect.WASDALSROW_READ_WASDAL_HAPUS();
            dataPenyama.ALASAN = gridSkHapusBmnKsl.dataTerpilih.ALASAN;
            dataPenyama.ID_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.ID_PEMOHON;
            dataPenyama.ID_PEMOHONSpecified = gridSkHapusBmnKsl.dataTerpilih.ID_PEMOHONSpecified;
            dataPenyama.ID_SATKER = gridSkHapusBmnKsl.dataTerpilih.ID_SATKER;
            dataPenyama.ID_SATKERSpecified = gridSkHapusBmnKsl.dataTerpilih.ID_SATKERSpecified;
            dataPenyama.ID_USER = gridSkHapusBmnKsl.dataTerpilih.ID_USER;
            dataPenyama.ID_USERSpecified = gridSkHapusBmnKsl.dataTerpilih.ID_USERSpecified;
            dataPenyama.IS_TB = gridSkHapusBmnKsl.dataTerpilih.IS_TB;
            dataPenyama.JABATAN_TTD = gridSkHapusBmnKsl.dataTerpilih.JABATAN_TTD;
            dataPenyama.KD_KL = gridSkHapusBmnKsl.dataTerpilih.KD_KL;
            dataPenyama.KD_PELAYANAN = gridSkHapusBmnKsl.dataTerpilih.KD_PELAYANAN;
            dataPenyama.KD_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.KD_PEMOHON;
            dataPenyama.KD_PENERBIT_SK = gridSkHapusBmnKsl.dataTerpilih.KD_PENERBIT_SK;
            dataPenyama.KD_PENERBIT_SK_DTL = gridSkHapusBmnKsl.dataTerpilih.KD_PENERBIT_SK_DTL;
            dataPenyama.KD_SATKER = gridSkHapusBmnKsl.dataTerpilih.KD_SATKER;
            dataPenyama.KUANTITAS_SK = Convert.ToDecimal(_kuantitas);
            dataPenyama.KUANTITAS_SKSpecified = gridSkHapusBmnKsl.dataTerpilih.KUANTITAS_SKSpecified;
            dataPenyama.NAMA_PENGADILAN = gridSkHapusBmnKsl.dataTerpilih.NAMA_PENGADILAN;
            dataPenyama.NILAI_PENETAPAN = Convert.ToDecimal(_nilaiPenetapan);
            dataPenyama.NILAI_PENETAPANSpecified = gridSkHapusBmnKsl.dataTerpilih.NILAI_PENETAPANSpecified;
            dataPenyama.NIP_PENANDATANGAN = gridSkHapusBmnKsl.dataTerpilih.NIP_PENANDATANGAN;
            dataPenyama.NM_PELAYANAN = gridSkHapusBmnKsl.dataTerpilih.NM_PELAYANAN;
            dataPenyama.NM_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.NM_PEMOHON;
            dataPenyama.NM_PENANDATANGAN = gridSkHapusBmnKsl.dataTerpilih.NM_PENANDATANGAN;
            dataPenyama.NM_PENERBIT_SK = gridSkHapusBmnKsl.dataTerpilih.NM_PENERBIT_SK;
            dataPenyama.NM_PENERBIT_SK_DTL = gridSkHapusBmnKsl.dataTerpilih.NM_PENERBIT_SK_DTL;
            dataPenyama.NM_PENGGUNA = gridSkHapusBmnKsl.dataTerpilih.NM_PENGGUNA;
            dataPenyama.NUM = gridSkHapusBmnKsl.dataTerpilih.NUM;
            dataPenyama.NUMSpecified = gridSkHapusBmnKsl.dataTerpilih.NUMSpecified;
            dataPenyama.SK_KEPUTUSAN = gridSkHapusBmnKsl.dataTerpilih.SK_KEPUTUSAN;
            dataPenyama.STATUS_BMN = gridSkHapusBmnKsl.dataTerpilih.STATUS_BMN;
            dataPenyama.TGL_CREATED = gridSkHapusBmnKsl.dataTerpilih.TGL_CREATED;
            dataPenyama.TGL_CREATEDSpecified = gridSkHapusBmnKsl.dataTerpilih.TGL_CREATEDSpecified;
            dataPenyama.TGL_SK = gridSkHapusBmnKsl.dataTerpilih.TGL_SK;
            dataPenyama.TGL_SKSpecified = gridSkHapusBmnKsl.dataTerpilih.TGL_SKSpecified;
            dataPenyama.TIPE_PEMOHON = gridSkHapusBmnKsl.dataTerpilih.TIPE_PEMOHON;
            dataPenyama.TOT_BMN = gridSkHapusBmnKsl.dataTerpilih.TOT_BMN;
            dataPenyama.TOT_BMNSpecified = gridSkHapusBmnKsl.dataTerpilih.TOT_BMNSpecified;
            dataPenyama.TOT_STATUS = gridSkHapusBmnKsl.dataTerpilih.TOT_STATUS;
            dataPenyama.TOT_STATUSSpecified = gridSkHapusBmnKsl.dataTerpilih.TOT_STATUSSpecified;
            dataPenyama.TOTAL_DATA = gridSkHapusBmnKsl.dataTerpilih.TOTAL_DATA;
            dataPenyama.TOTAL_DATASpecified = gridSkHapusBmnKsl.dataTerpilih.TOTAL_DATASpecified;
            dataPenyama.UR_KL = gridSkHapusBmnKsl.dataTerpilih.UR_KL;
            dataPenyama.UR_SATKER = gridSkHapusBmnKsl.dataTerpilih.UR_SATKER;
            dataPenyama.URAIAN_KEPUTUSAN = gridSkHapusBmnKsl.dataTerpilih.URAIAN_KEPUTUSAN;
            int _indeksData = dsGridRskHapusBmnKsl.IndexOf(gridSkHapusBmnKsl.dataTerpilih);
            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
            dsGridRskHapusBmnKsl.Remove(gridSkHapusBmnKsl.dataTerpilih);
            dsGridRskHapusBmnKsl.Insert(_indeksData, dataPenyama);
            gridSkHapusBmnKsl.dsDataSource = dsGridRskHapusBmnKsl;
            gridSkHapusBmnKsl.displayData();
        }
        #endregion

        #endregion Hapus BMNKSL

        #endregion

        #region bongkaran
        AppPengguna.KSK.RSK.ucRskBongkaranGrid gridSkBongkaran;
        AppPengguna.KSK.RSK.ucRskBongkaranForm formSkBongkaranTambah;
        AppPengguna.KSK.RSK.ucRskBongkaranForm formSkBongkaranUbah;
        AppPengguna.KSK.RSK.ucRskBongkaranForm formSkBongkaranDetail;
        private ArrayList dsGridRskBongkaran;
        SvcWasdalRSKBongkaranSkSelect.OutputParameters dOutRskBongkaran;
        SvcWasdalRSKBongkaranSkSelect.execute_pttClient ambilRskBongkaran;

        private void setEventTombolRskBongkaran()
        {
            resetEventTombolRsk();
            bbiRskTambah.ItemClick += new ItemClickEventHandler(bbiRskBongkaranTambahKlik);
            bbiRskUbah.ItemClick += new ItemClickEventHandler(bbiRskBongkaranUbahKlik);
            bbiRskHapus.ItemClick += new ItemClickEventHandler(bbiRskBongkaranHapusKlik);
            bbiRskDetail.ItemClick += new ItemClickEventHandler(bbiRskBongkaranDetailKlik);
            bbiRskKembaliGrid.ItemClick += new ItemClickEventHandler(bbiRskBongkaranKembaliKlik);
            bbiRskRefresh.ItemClick += new ItemClickEventHandler(bbiRskBongkaranRefreshKlik);
            bbiRskMoreData.ItemClick += new ItemClickEventHandler(bbiRskBongkaranMoreDataKlik);
            bbiRskKembali.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKembaliKlik);
            bbiRskKeluar.ItemClick += new ItemClickEventHandler(bbiRskPspBmnKeluarKlik);
            bbiExportSk.ItemClick += new ItemClickEventHandler(bbiRskExportKlik);
        }

        private void initGridSkBongkaran()
        {
            //if (gridSkBongkaran == null)
            //{
            gridSkBongkaran = new AppPengguna.KSK.RSK.ucRskBongkaranGrid()
            {
                cariDataOnline = new CariDataOnline(cariDataRskBongkaran),
                detailDataGrid = new DetailDataGrid(bbiRskBongkaranUbahKlik)
            };
            //}
            setTombolRskGrid();
            setEventTombolRskBongkaran();
            setPanel(gridSkBongkaran);
        }

        #region --++ Tombol Ribbon Bongkaran
        private void bbiRskBongkaranTambahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Surat Keputusan Baru \n{0}?", konfigApp.namaLayanan22), konfigApp.judulKonfirmasi,
                MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                if (formSkBongkaranTambah == null)
                {
                    formSkBongkaranTambah = new AppPengguna.KSK.RSK.ucRskBongkaranForm("C")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBongkaran)
                    };
                }
                setPanel(formSkBongkaranTambah);
                formSkBongkaranTambah.inisialisasiForm();
                setTombolRskForm();
            }
        }

        private void bbiRskBongkaranUbahKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBongkaran.dataTerpilih != null)
            {
                if (formSkBongkaranUbah == null)
                {
                    formSkBongkaranUbah = new AppPengguna.KSK.RSK.ucRskBongkaranForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRskBongkaran)
                    };
                }
                formSkBongkaranUbah.dataTerpilih = gridSkBongkaran.dataTerpilih;
                setPanel(formSkBongkaranUbah);
                formSkBongkaranUbah.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBongkaranHapusKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBongkaran.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusSk, gridSkBongkaran.dataTerpilih.SK_KEPUTUSAN_BNK), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();    
                        SvcWasdalRSKBongkaranCrud2.InputParameters parInp = new SvcWasdalRSKBongkaranCrud2.InputParameters();
                        parInp.P_ID_KPKNL = gridSkBongkaran.dataTerpilih.ID_KPKNL;
                        parInp.P_ID_PEMOHON = gridSkBongkaran.dataTerpilih.ID_PEMOHON;
                        parInp.P_ID_SATKER = gridSkBongkaran.dataTerpilih.ID_SATKER;
                        parInp.P_ID_SK_BNK = gridSkBongkaran.dataTerpilih.ID_SK_BNK;
                        parInp.P_ID_USER = gridSkBongkaran.dataTerpilih.ID_USER;
                        parInp.P_IS_TB = gridSkBongkaran.dataTerpilih.IS_TB;
                        parInp.P_JABATAN_TTD = gridSkBongkaran.dataTerpilih.JABATAN_TTD;
                        parInp.P_KD_KL = gridSkBongkaran.dataTerpilih.KD_KL;
                        parInp.P_KD_PELAYANAN = gridSkBongkaran.dataTerpilih.KD_PELAYANAN;
                        parInp.P_KD_PENERBIT_SK = gridSkBongkaran.dataTerpilih.KD_PENERBIT_SK;
                        parInp.P_KD_PENERBIT_SK_DTL = gridSkBongkaran.dataTerpilih.KD_PENERBIT_SK_DTL;
                        parInp.P_KD_SATKER = gridSkBongkaran.dataTerpilih.KD_SATKER;
                        parInp.P_NIP_PENANDATANGAN = gridSkBongkaran.dataTerpilih.NIP_PENANDATANGAN;
                        parInp.P_NM_PENANDATANGAN = gridSkBongkaran.dataTerpilih.NM_PENANDATANGAN;
                        parInp.P_NM_PENERBIT_SK = gridSkBongkaran.dataTerpilih.NM_PENERBIT_SK;
                        parInp.P_NM_PENERBIT_SK_DTL = gridSkBongkaran.dataTerpilih.NM_PENERBIT_SK_DTL;
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_SK_KEPUTUSAN_BNK = gridSkBongkaran.dataTerpilih.SK_KEPUTUSAN_BNK;
                        parInp.P_TGL_CREATED = konfigApp.DateToString(gridSkBongkaran.dataTerpilih.TGL_CREATED);
                        parInp.P_TGL_SK_BNK = konfigApp.DateToString(gridSkBongkaran.dataTerpilih.TGL_SK_BNK);
                        parInp.P_THN_ANG = gridSkBongkaran.dataTerpilih.THN_ANG;
                        parInp.P_TIPE_PEMOHON = gridSkBongkaran.dataTerpilih.TIPE_PEMOHON;
                        //parInp.P_TIPE_PENGELOLA = gridSkBongkaran.dataTerpilih.tipe_penge;
                        parInp.P_UR_SATKER = gridSkBongkaran.dataTerpilih.UR_SATKER;
                        parInp.P_URAIAN_KEPUTUSAN = gridSkBongkaran.dataTerpilih.URAIAN_KEPUTUSAN;
                        parInp.P_ID_SK_BNKSpecified = true;
                        ambilDataBongkaran = new SvcWasdalRSKBongkaranCrud2.execute_pttClient();
                        ambilDataBongkaran.Open();
                        ambilDataBongkaran.Beginexecute(parInp, new AsyncCallback(cudRskBongkaran), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiRskBongkaranDetailKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridSkBongkaran.dataTerpilih != null)
            {
                if (formSkBongkaranDetail == null)
                {
                    formSkBongkaranDetail = new AppPengguna.KSK.RSK.ucRskBongkaranForm("A");
                    formSkBongkaranDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formSkBongkaranDetail.dataTerpilih = gridSkBongkaran.dataTerpilih;
                setPanel(formSkBongkaranDetail);
                formSkBongkaranDetail.inisialisasiForm();
                setTombolRskForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiRskBongkaranKembaliKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridSkBongkaran);
            setTombolRskGrid();
            gridSkBongkaran.dsDataSource = dsGridRskBongkaran;
            gridSkBongkaran.displayData();
        }

        private void bbiRskBongkaranRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridSkBongkaran.teNamaKolom.Text = "";
            gridSkBongkaran.teCari.Text = "";
            gridSkBongkaran.fieldDicari = "";
            gridSkBongkaran.dataInisial = true;
            this.dataInisial = true;
            this.getInitRskBongkaran();
        }

        private void bbiRskBongkaranMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRskBongkaran();
            }
        }
        #endregion --++ Tombol Ribbon Bongkaran

        private void nbiRskBongkaran_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perekaman SK";
            konfigApp.strSubMenu = konfigApp.namaLayanan22;
            konfigApp.kdPelayanan = "22";
            konfigApp.namaPelayanan = konfigApp.namaLayanan22;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRekamSK.Visible = true;
            ribbon.SelectedPage = rpRekamSK;
            initGridSkBongkaran();
            modeCari = false;
            gridSkBongkaran.teNamaKolom.Text = "";
            gridSkBongkaran.teCari.Text = "";
            gridSkBongkaran.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRskBongkaran();
        }

        #region --++ Ambil Data Bongkaran
        private void getInitRskBongkaran()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalRSKBongkaranSkSelect.InputParameters parInp = new SvcWasdalRSKBongkaranSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("id_user = {0}", konfigApp.idUser);
                // parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON={2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                //    parInp.str_where = String.Format("KD_PELAYANAN = '{0}' AND " +
                //" (ID_USER={1} " +
                // "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
                // "OR ID_SATKER = {2} " +
                // "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilRskBongkaran = new SvcWasdalRSKBongkaranSkSelect.execute_pttClient();
                ambilRskBongkaran.Open();
                ambilRskBongkaran.Beginexecute(parInp, new AsyncCallback(getRskBongkaran), "");
                //ambilRskBongkaran.Beginexecute(parInp, new AsyncCallback(getRskBongkaran), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRskBongkaran(IAsyncResult result)
        {
            try
            {
                dOutRskBongkaran = ambilRskBongkaran.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRskBongkaran(dsRskBongkaran), dOutRskBongkaran);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRskBongkaran(SvcWasdalRSKBongkaranSkSelect.OutputParameters dataOut);

        private void dsRskBongkaran(SvcWasdalRSKBongkaranSkSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_SK_BONGKARAN_GRID.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_SK_BONGKARAN_GRID[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRskMoreData.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiRskMoreData.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRskBongkaran = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dataOut.SF_SK_BONGKARAN_GRID[i].IS_TB = (dataOut.SF_SK_BONGKARAN_GRID[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRskBongkaran.Add(dataOut.SF_SK_BONGKARAN_GRID[i]);
            }
            gridSkBongkaran.labelTotData.Text = "";
            gridSkBongkaran.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridSkBongkaran.sbCariOnline.Enabled = !modeCari;
            gridSkBongkaran.dsDataSource = dsGridRskBongkaran;
            gridSkBongkaran.displayData();
            if (modeCari == true)
            {
                string xSatu = gridSkBongkaran.teNamaKolom.Text.Trim();
                string xDua = gridSkBongkaran.teCari.Text.Trim();
                string xTiga = gridSkBongkaran.fieldDicari;
                gridSkBongkaran.gvGridSk.ClearColumnsFilter();
                gridSkBongkaran.teNamaKolom.Text = xSatu;
                gridSkBongkaran.teCari.Text = xDua;
                gridSkBongkaran.fieldDicari = xTiga;
            }
            else
                gridSkBongkaran.gvGridSk.ClearColumnsFilter();
        }

        private void cariDataRskBongkaran(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRskBongkaran();
        }
        #endregion Ambil Bongkaran

        #region --++ Simpan Data Bongkaran
        SvcWasdalRSKBongkaranCrud2.OutputParameters dOutAmbilDataBongkaran;
        SvcWasdalRSKBongkaranCrud2.execute_pttClient ambilDataBongkaran;

        private void simpanDataRskBongkaran(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalRSKBongkaranCrud2.InputParameters parInp = new SvcWasdalRSKBongkaranCrud2.InputParameters();
                parInp.P_ID_SK_BNK = (_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.idSkWasdal : formSkBongkaranUbah.idSkWasdal;//
                parInp.P_ID_SK_BNKSpecified = true;
                parInp.P_ID_KPKNL = konfigApp.idKpknl;
                parInp.P_ID_KPKNLSpecified = true;
                parInp.P_ID_PEMOHON = (_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.idPemohon : formSkBongkaranUbah.idPemohon;//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.rgJenisAset.EditValue.ToString() : formSkBongkaranUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teJabatan.Text.Trim() : formSkBongkaranUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkBongkaranTambah.teNmPenerbitSk.ItemIndex).ToString() : formSkBongkaranUbah.teNmPenerbitSk.Properties.GetDataSourceValue("KD_INSTANSI", formSkBongkaranUbah.teNmPenerbitSk.ItemIndex).ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.kodePenerbitSkDetail : formSkBongkaranUbah.kodePenerbitSkDetail);
                //parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formSkBongkaranTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranTambah.teNilaiPenetapan.Text)) : (formSkBongkaranUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranUbah.teNilaiPenetapan.Text)));
                //parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNipPenandaTangan.Text : formSkBongkaranUbah.teNipPenandaTangan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teTahunAnggaran.Text : formSkBongkaranUbah.teTahunAnggaran.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNamaPenandaTangan.Text : formSkBongkaranUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNmPenerbitSk.Text : formSkBongkaranUbah.teNmPenerbitSk.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNamaInstansi.Text : formSkBongkaranUbah.teNamaInstansi.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN_BNK = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teNomorSk.Text.Trim() : formSkBongkaranUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = konfigApp.DateToString((_mode == "C" || _mode == "CU") ? DateTime.Now : formSkBongkaranUbah.dataTerpilih.TGL_CREATED);
                parInp.P_TGL_SK_BNK = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teTanggalSk.EditValue : formSkBongkaranUbah.teTanggalSk.EditValue));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teJenisPemohon.Text : formSkBongkaranUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.tipePengelola : formSkBongkaranUbah.tipePengelola);
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teUraianKeputusan.Text : formSkBongkaranUbah.teUraianKeputusan.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formSkBongkaranTambah.teTahunAnggaran.Text : formSkBongkaranUbah.teTahunAnggaran.Text);
                parInp.P_KD_KL = konfigApp.kodeKl;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                ambilDataBongkaran = new SvcWasdalRSKBongkaranCrud2.execute_pttClient();
                ambilDataBongkaran.Open();
                ambilDataBongkaran.Beginexecute(parInp, new AsyncCallback(cudRskBongkaran), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudRskBongkaran(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBongkaran = ambilDataBongkaran.Endexecute(result);
                ambilDataBongkaran.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsBongkaran(this.ubahDsBongkaran), dOutAmbilDataBongkaran);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsBongkaran(SvcWasdalRSKBongkaranCrud2.OutputParameters dataOutBongkaranCrud);

        private void ubahDsBongkaran(SvcWasdalRSKBongkaranCrud2.OutputParameters dataOutBongkaranCrud)
        {
            if (dataOutBongkaranCrud.PO_RESULT == "Y")
            {
                SvcWasdalRSKBongkaranSkSelect.WASDALSROW_SK_BONGKARAN_GRID dataPenyama = new SvcWasdalRSKBongkaranSkSelect.WASDALSROW_SK_BONGKARAN_GRID();
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_BNK = formSkBongkaranTambah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkBongkaranTambah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBongkaranTambah.idPemohon;
                        dataPenyama.IS_TB = (formSkBongkaranTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBongkaranTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkBongkaranTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBongkaranTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBongkaranTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBongkaranTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBongkaranTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBongkaranTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBongkaranTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBongkaranTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formSkBongkaranTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBongkaranTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBongkaranTambah.teNmPenerbitSk.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBongkaranTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRskBongkaran == null ? 1 : dsGridRskBongkaran.Count + 1);
                        dataPenyama.SK_KEPUTUSAN_BNK = formSkBongkaranTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK_BNK = formSkBongkaranTambah.teTanggalSk.DateTime;
                        dataPenyama.TIPE_PEMOHON = formSkBongkaranTambah.teJenisPemohon.Text;
                        //dataPenyama.THN_ANG = formSkBongkaranTambah.teTahunAnggaran.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = 0;
                        dataPenyama.TOTAL_DATA = 0;
                        dataPenyama.UR_KL = formSkBongkaranTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBongkaranTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBongkaranTambah.teUraianKeputusan.Text;
                        if (dsGridRskBongkaran == null) dsGridRskBongkaran = new ArrayList();
                        dsGridRskBongkaran.Add(dataPenyama);
                        formSkBongkaranTambah.gcDaftarAset.Enabled = true;
                        formSkBongkaranTambah.sbTambah.Enabled = true;
                        formSkBongkaranTambah.sbHapus.Enabled = true;
                        formSkBongkaranTambah.sbValidasi.Enabled = true;
                        formSkBongkaranTambah.rgJenisAset.Properties.ReadOnly = true;
                        formSkBongkaranTambah.teNomorSk.Properties.ReadOnly = true;
                        formSkBongkaranTambah.teTanggalSk.Properties.ReadOnly = true;
                        formSkBongkaranTambah.teJenisPemohon.Properties.ReadOnly = true;
                        formSkBongkaranTambah.sbCariPemohon.Enabled = false;
                        formSkBongkaranTambah.sbRefresh.Enabled = true;
                        formSkBongkaranTambah.teNamaInstansi.Properties.ReadOnly = true;
                        formSkBongkaranTambah.cePilihSemua.Enabled = true;
                        formSkBongkaranTambah.teKodePemohon.Properties.ReadOnly = true;
                        //formSkBongkaranTambah.statusForm = "CU";
                        break;
                    case "U":
                        dataPenyama.ID_SK_BNK = formSkBongkaranUbah.idSkWasdal;
                        dataPenyama.ID_PEMOHON = formSkBongkaranUbah.idPemohon;
                        dataPenyama.ID_SATKER = formSkBongkaranUbah.idPemohon;
                        dataPenyama.IS_TB = (formSkBongkaranUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formSkBongkaranUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formSkBongkaranUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formSkBongkaranUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formSkBongkaranUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formSkBongkaranUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formSkBongkaranUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formSkBongkaranUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formSkBongkaranUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formSkBongkaranUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formSkBongkaranUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridSkBongkaran.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formSkBongkaranUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formSkBongkaranUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formSkBongkaranUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formSkBongkaranUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridSkBongkaran.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridSkBongkaran.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN_BNK = formSkBongkaranUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridSkBongkaran.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridSkBongkaran.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK_BNK = formSkBongkaranUbah.teTanggalSk.DateTime;
                        dataPenyama.TIPE_PEMOHON = formSkBongkaranUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridSkBongkaran.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridSkBongkaran.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridSkBongkaran.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formSkBongkaranUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formSkBongkaranUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formSkBongkaranUbah.teUraianKeputusan.Text;
                        //dataPenyama.THN_ANG = formSkBongkaranUbah.teTahunAnggaran.Text;
                        int _indeksData = dsGridRskBongkaran.IndexOf(gridSkBongkaran.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRskBongkaran.Remove(gridSkBongkaran.dataTerpilih);
                        dsGridRskBongkaran.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRskBongkaran.Remove(gridSkBongkaran.dataTerpilih);
                        break;
                }
                gridSkBongkaran.dsDataSource = dsGridRskBongkaran;
                gridSkBongkaran.displayData();
            }
            else
            {
                if (modeCrud.ToString() == "D")
                {
                    MessageBox.Show(dataOutBongkaranCrud.PO_RESULT_MESSAGE);
                }
                else
                {
                    MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
                }

            } 
        }
        #endregion Simpan Data Bongkaran

        #endregion Bongkaran
        
        #endregion

        #region MONITORING WASDAL
        
        string koneksiSqlServer = String.Format(@"Data Source=localhost\SQLBPSIMAN;Initial Catalog=LOCALBPSIMAN;User Id=sa;Password=SHTbpD*1");
        SqlConnection connection = null;
        KSK.WL.PENGGUNAAN.xrLapWasdalGuna xrlapGuna;
        public KSK.WL.ucLapWasdal lapWasdal;
        string fileteks;
        FrmProgressBar frmProbar;
  
        #region PENGGUNAAN BMN
        
        private void initGridMonWlGunaBMN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalGuna();
            //this.setGridMonWasdal(this.menuLapWasdal, this.subMenuMonWasdal);
            
            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Penggunaan BMN"); 
            
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '02') OR (KD_PELAYANAN = '03') OR (KD_PELAYANAN = '04') OR (KD_PELAYANAN = '05'))";
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
            setEnabledButtonMWasdal("Export To Excel", true);
            frmProbar = new FrmProgressBar();
        }

        private void setEventButtonMWasdalGuna()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlGunaRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlGunaMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlGunaPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlGunaTutup);
            this.barMonWasdalExcel.ItemClick +=new ItemClickEventHandler(this.mWLGunaExcel);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Always;
        }

        private void nbiMonitoringWasdalGunaBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlGunaBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void mWlGunaRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlGunaBMN();
        }

        private void mWlGunaMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.penggunaan1.modeLoadData == "normal" || lapWasdal.penggunaan1.modeLoadData == "cari")
                    lapWasdal.penggunaan1.dataInisial = false;

                lapWasdal.penggunaan1.getTindakLanjut();
            }
        }

        public string _closeMode;
        private void mWlGunaPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdate())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                       //this.lapWasdal.layoutControlGroup2.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                        getInitWasdalBMN();
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        this.dataLokalAda(); //data lokal
                    }
                }
                else
                {
                    //this.lapWasdal.layoutControlGroup2.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    getInitWasdalBMN(); //ambil data lagi dari server
                }
            }
            //lapWasdal.print("penggunaan");
        }

        private void mWlGunaTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }
        private void mWLGunaExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            lapWasdal.ExportToExcel();
        }

        #region  Show Data Wasdal penggunaan
        
        #region Cek Data Lokal
        private bool pernahUpdate()
        {
            
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_GUNA_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        private void dataLokalAda()
        {

            ReportPrintTool pt;
            try
            {
                 DataTable dtLapGuna = new DataTable();
                 xrlapGuna = null;
                 if (xrlapGuna == null)
                     xrlapGuna = new KSK.WL.PENGGUNAAN.xrLapWasdalGuna();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT DISTINCT(IS_TB) FROM RPT_WASDAL_GUNA_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapGuna);

                    DataTable DTLapGuna = new DataTable("DTLapGuna");
                    
                    DTLapGuna.Columns.Add("IS_TB", typeof(string));
                    
                    if (dtLapGuna.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapGuna.Rows)
                        {
                            DTLapGuna.Rows.Add(Convert.ToString(dr[0]));
                            _no++;
                        }
                        xrlapGuna.DataSource = DTLapGuna;
                        xrlapGuna.DataMember = "DTLapGuna";
                    }
                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }

            
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            param.Value = (tahunAnggaran);
            param.Description = "";
            param.Visible = false;
            
            xrlapGuna.xrKdSatker.Text = konfigApp.kodeSatker;
            xrlapGuna.xrUrSatker.Text = konfigApp.namaSatker;
            xrlapGuna.Parameters.Add(param);

            xrlapGuna.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrlapGuna.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin
           
            pt = new ReportPrintTool(xrlapGuna);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();
            
            #region setting margin, paperkind
            //DevExpress.XtraPrinting.Preview.PrintPreviewFormEx form = new DevExpress.XtraPrinting.Preview.PrintPreviewFormEx();
            //xrlapGuna.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            //xrlapGuna.Margins = new System.Drawing.Printing.Margins(75, 75, 75, 0); //margin
            //form.PrintingSystem = xrlapGuna.PrintingSystem;
            //xrlapGuna.CreateDocument();
            //form.PrintingSystem.ExecCommand(DevExpress.XtraPrinting.PrintingSystemCommand.Scale, new object[] { 1 }); //autofit
            //form.PrintingSystem.ExecCommand(DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth, new object[] { 1 }); //autozoom
            //form.ShowDialog();

            #endregion
            //fToggleProgressBar("stop");


        }
        #endregion Get Data Lokal

        #region Get Data From Server
        SvcGnrtLapPenggunaan.execute_pttClient ambilGnrtLap;
        SvcGnrtLapPenggunaan.OutputParameters outGnrtLap;
        public void getInitWasdalBMN()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGnrtLapPenggunaan.InputParameters inPar = new SvcGnrtLapPenggunaan.InputParameters();
                //SvcWasdalPSPBMNSelect.InputParameters inPar = new SvcWasdalPSPBMNSelect.InputParameters();
                inPar.P_MAX = 0;
                inPar.P_MAXSpecified = true;
                inPar.P_MIN = 0;
                inPar.P_MINSpecified = true;
                inPar.P_COUNT = "y";
                inPar.P_ID_USER = konfigApp.idUser;
                inPar.P_ID_USERSpecified = true;
                //if (konfigApp.idGroup == 2) { inPar.STR_WHERE = "ID_SATKER = " + konfigApp.idSatker + " AND THN_ANG='" + (konfigApp.tahunAnggaran-1)+"'"; }
                //inPar.STR_WHERE = "KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0,15) + "%' AND THN_ANG='" + (konfigApp.tahunAnggaran - 1) + "'";
                inPar.STR_WHERE = "KD_PENERBIT_SK!='05' AND KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%' AND THN_ANG='" + tahunAnggaran + "'" + " AND ((KD_PELAYANAN = '02') OR (KD_PELAYANAN = '03') OR (KD_PELAYANAN = '04') OR (KD_PELAYANAN = '05'))";
                inPar.P_COL = "IS_TB,KD_BRG,NO_ASET";
                inPar.P_SORT = "DESC";
                ambilGnrtLap = new SvcGnrtLapPenggunaan.execute_pttClient();
                ambilGnrtLap.Beginexecute(inPar, new AsyncCallback(getDataWasdalBMN), null);
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getDataWasdalBMN(IAsyncResult result)
        {
            try
            {
                outGnrtLap = ambilGnrtLap.Endexecute(result);
                ambilGnrtLap.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new SimpanDataWasdalBMN(this.simpanDataWasdalBMN), outGnrtLap);
            }
            catch (Exception e)
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
                
                
            }
        }

        private delegate void SimpanDataWasdalBMN(SvcGnrtLapPenggunaan.OutputParameters dataOut);

        private void simpanDataWasdalBMN(SvcGnrtLapPenggunaan.OutputParameters dataOut)
        {
            /*untuk pengembangan, laporan dilokalkan*/
            //string namaFileDownload = String.Format("{0}.zip", DataLokal.nmFolder);
            //string lokasiDiFile = String.Format("{0}\\" + DataLokal.nmFolder + "\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            //string FolderFile = String.Format("{0}\\" + DataLokal.nmFolder + "", System.IO.Directory.GetCurrentDirectory());
            string namaFileDownload = String.Format("Penggunaan.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }

            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_GUNA_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSql("Penggunaan");
            dataLokalAda();
            
            
        }
        #endregion Get Data From Server

        private bool CheckTabelAvail(string namaTabel)
        {
            bool result = true;
            try
            {
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    SqlTransaction transaksi = connection.BeginTransaction();
                    cmd.Connection = connection;
                    cmd.Transaction = transaksi;
                    try
                    {
                        string perintahSql = string.Format("SELECT * FROM information_schema.tables WHERE table_schema = 'dbo' AND table_name = '{0}'" , namaTabel);
                        cmd.CommandText = perintahSql;
                        SqlDataReader dataReader = cmd.ExecuteReader();
                        if (dataReader.Read())
                        {
                            result = true;
                        }
                        else
                        {
                            result = false;
                        }
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("Table not found", konfigApp.judulGagalSimpan);
                        result = false;
                    }
                }
            }
            catch
            {
                MessageBox.Show("Eksekusi Query SQL Gagal dilakukan", konfigApp.judulGagalSimpan);
                result = false;
            }
            finally
            {
                connection.Close();
            }
            return result;
        }

        private void KosongkanTabel(string namaTabel)
        {
            try
            {
                if (!CheckTabelAvail(namaTabel))
                {
                    DataLokal dtLokal = new DataLokal();
                    dtLokal.CheckDb();
                }

                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    SqlTransaction transaksi = connection.BeginTransaction();
                    cmd.Connection = connection;
                    cmd.Transaction = transaksi;
                    try
                    {
                        string perintahSql = "truncate table " + namaTabel + ";";
                        cmd.CommandText = perintahSql;
                        cmd.ExecuteNonQuery();
                        transaksi.Commit();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("Eksekusi Query SQL Gagal dilakukan", konfigApp.judulGagalSimpan);
                    }
                }
            }
            catch
            {
                MessageBox.Show("Eksekusi Query SQL Gagal dilakukan", konfigApp.judulGagalSimpan);
            }
            finally
            {
                connection.Close();

            }
        }

        private void eksekusiFileSql(string nmZip)
        {
            string FolderDiFile = String.Format("{0}\\Laporan\\", System.IO.Directory.GetCurrentDirectory());
            string lokasiDiFile = String.Format("{0}\\Laporan\\"+nmZip+"", System.IO.Directory.GetCurrentDirectory());
            DirectoryInfo directorySelected = new DirectoryInfo(FolderDiFile);
            foreach (FileInfo fileToDecompress in directorySelected.GetFiles("*.zip")) //dekompresi result dari service
            {
              DataLokal.Decompress(fileToDecompress);
            }
            bool adaGagal = false;
            string daftarBarisGagal = "";
            int noBaris = 0;
            string barisFile;
            StreamReader fileDibaca = new StreamReader(lokasiDiFile);
            fileteks = "";
            fileteks = fileDibaca.ReadToEnd();
            string[] cacahBaris = fileteks.Split('#');
            
            int j = 0;
            frmProbar = new FrmProgressBar();
            frmProbar.total = cacahBaris.Count();
            frmProbar.cacahBaris = cacahBaris;
            frmProbar.ShowDialog();
            
            if (adaGagal == true)
            {
                MessageBox.Show("Daftar record (baris) data yang gagal: " + daftarBarisGagal, "Perhatian");
            }
            //eksekusiDone = true;
            fileDibaca.Close();
            File.Delete(lokasiDiFile);
        }

        #endregion

        #endregion

        #region PEMANFAATAN BMN
        KSK.WL.PEMANFAATAN.xrLapManfaat xrLapWasManfaat;
        private void initGridMonWlManfaatBMN()
        {
            this.setEventButtonMWasdalManfaat();
            //this.setGridMonWasdal(this.menuLapWasdal, this.subMenuMonWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Pemanfaatan BMN");
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '06')OR(KD_PELAYANAN = '07')OR(KD_PELAYANAN = '08')OR(KD_PELAYANAN = '09')OR(KD_PELAYANAN = '10'))";
            //lapWasdal.namaModul = ;
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalManfaat()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlManfaatRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlManfaatMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlManfaatPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlManfaatTutup);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlManfaatExcel);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Always;
        }

        private void nbiMonitoringWasdalManfaatBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlManfaatBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void mWlManfaatRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlManfaatBMN();

        }

        private void mWlManfaatMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Manfaat
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.pemanfaatan1.modeLoadData == "normal" || lapWasdal.pemanfaatan1.modeLoadData == "cari")
                    lapWasdal.pemanfaatan1.dataInisial = false;

                lapWasdal.pemanfaatan1.getTindakLanjut();
            }
            #endregion
        }

        private void mWlManfaatPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdateManfaat())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        GetIniLapManfaat();
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        this.dataLokalManfaatAda(); //data lokal
                    }
                }
                else
                {
                    GetIniLapManfaat(); //ambil data lagi dari server
                }
            }
        }

        private void mWlManfaatTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void mWlManfaatExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            lapWasdal.ExportToExcel();
        }
   
        #region Init Data Lap Manfaat

        #region Cek Data Lokal
        private bool pernahUpdateManfaat() 
        {
            
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_MANFAAT_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        private void dataLokalManfaatAda() 
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtLapManfaat = new DataTable();
                xrLapWasManfaat = null;
                if (xrLapWasManfaat == null)
                    xrLapWasManfaat = new KSK.WL.PEMANFAATAN.xrLapManfaat();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,NUP,UR_SSKEL,NM_LAYANAN, NM_PHK_LAIN,NO_SK,TGL_SK,NM_PENERBIT_SK_DTL,NILAI_PNBP,TGL_SETOR,KET FROM RPT_WASDAL_MANFAAT_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapManfaat);

                    DataTable DTLapManfaat = new DataTable("DTLapManfaat");

                    DTLapManfaat.Columns.Add("NUM", typeof(string));
                    DTLapManfaat.Columns.Add("KD_BRG", typeof(string));
                    DTLapManfaat.Columns.Add("NUP", typeof(string));
                    DTLapManfaat.Columns.Add("UR_SSKEL", typeof(string));
                    DTLapManfaat.Columns.Add("NM_LAYANAN", typeof(string));//4
                    DTLapManfaat.Columns.Add("NM_PHK_LAIN", typeof(string));
                    DTLapManfaat.Columns.Add("NO_SK", typeof(string));
                    DTLapManfaat.Columns.Add("TGL_SK", typeof(string));
                    DTLapManfaat.Columns.Add("NM_PENERBIT_SK_DTL", typeof(string));
                    DTLapManfaat.Columns.Add("NILAI_PNBP", typeof(string));
                    DTLapManfaat.Columns.Add("TGL_SETOR", typeof(string));//10
                    DTLapManfaat.Columns.Add("KET", typeof(string));
                    xrLapWasManfaat.DataSource = null;
                    if (dtLapManfaat.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapManfaat.Rows)
                        {
                            string tglSk = (Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy");
                            string tglSetor = (Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy");
                            decimal nilaiPnbp = Convert.ToDecimal(dr[9]);
                            DTLapManfaat.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), Convert.ToString(dr[6]),tglSk, Convert.ToString(dr[8]),nilaiPnbp.ToString("n0"), tglSetor, Convert.ToString(dr[11]));
                            _no++;
                        }
                        xrLapWasManfaat.DataSource = DTLapManfaat;
                        xrLapWasManfaat.DataMember = "DTLapManfaat";
                        //if (DataLokal.dt == null)
                        //    xrLapWasManfaat.bsLapWasdalBMN.DataSource = DTLapManfaat;

                        //else
                        //    xrLapWasManfaat.bsLapWasdalBMN.DataSource = DataLokal.dt;
                    }

                    
                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }
            //xrLapWasManfaat.bsLapWasdalBMN.DataSource = DataLokal.dt;
            //konfigApp.setTahunAnggaran();
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;

            xrLapWasManfaat.Parameters.Add(param);
            xrLapWasManfaat.xrlKdSatker.Text = konfigApp.kodeSatker;
            xrLapWasManfaat.xrlUrSatker.Text = konfigApp.namaSatker;

            xrLapWasManfaat.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrLapWasManfaat.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrLapWasManfaat);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();


        }
        #endregion Get Data Lokal

        #region get data from server
        SvcGnrtLapPemanfaatan.execute_pttClient ambilGnrtLapManfaat;
        SvcGnrtLapPemanfaatan.OutputParameters outGnrtLapManfaat;
        private void GetIniLapManfaat()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGnrtLapPemanfaatan.InputParameters parInp = new SvcGnrtLapPemanfaatan.InputParameters();
                if (dataInisial == true)
                {
                    this.currentMaks = konfigApp.dataAkhir;
                    this.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    this.currentMin = this.currentMaks + 1;
                    this.currentMaks = this.currentMaks + konfigApp.dataAkhir;
                }

                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                //parInp.STR_WHERE = "KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%' AND THN_ANG='" + (konfigApp.tahunAnggaran - 1) + "'";
                parInp.STR_WHERE = "KD_PENERBIT_SK!='05' AND KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%' AND THN_ANG='" + tahunAnggaran + "'" + " AND ((KD_LAYANAN = '06') OR (KD_LAYANAN = '07') OR (KD_LAYANAN = '08') OR (KD_LAYANAN = '09') OR (KD_LAYANAN = '10'))";
                parInp.P_COL = "KD_BRG,NUP";
                parInp.P_SORT = "ASC";
                parInp.P_COUNT = "y";
                ambilGnrtLapManfaat = new SvcGnrtLapPemanfaatan.execute_pttClient();
                ambilGnrtLapManfaat.Beginexecute(parInp, new AsyncCallback(getDataLapManfaat), null);
            }
            catch (Exception e)
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
                //try
                //{
                //    using (StreamWriter tulis = new StreamWriter(@"C:\errorPemanfaatan.txt", false))
                //    {
                //        tulis.Write("Message : " + e.Message + "\nStack Trace :" + e.StackTrace + "\nSource :" + e.Source);
                //    }
                //}
                //catch (Exception error)
                //{
                //    MessageBox.Show("Terjadi kesalahan\n" + error.ToString());
                //}
                //MessageBox.Show("Message : " + e.Message + "\nStack Trace :" + e.StackTrace + "\nSource :" + e.Source, konfigApp.judulGagalAmbil);

            }
        }

        private void getDataLapManfaat(IAsyncResult result)
        {
            try
            {
                outGnrtLapManfaat = ambilGnrtLapManfaat.Endexecute(result);
                ambilGnrtLapManfaat.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new LoadDataLapManfaat(this.loadDataLapManfaat), outGnrtLapManfaat);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void LoadDataLapManfaat(SvcGnrtLapPemanfaatan.OutputParameters dataOut);

        private void loadDataLapManfaat(SvcGnrtLapPemanfaatan.OutputParameters dataOut)
        {

            string namaFileDownload = String.Format("Pemanfaatan.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_MANFAAT_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSql("Pemanfaatan");
            
            dataLokalManfaatAda();
            
        }
        #endregion get data from server
        #endregion


        #endregion

        #region PEMINDAHTANGANAN BMN
        KSK.WL.PEMINDAHTANGANAN.xrLapPindahtangan xrLapPindahtgn;

        private void initGridMonWlPndhTgnBMN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalPndhTgn();
            //this.setGridMonWasdal(this.menuLapWasdal, this.subMenuMonWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Pemindahtanganan BMN");
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '11') OR (KD_PELAYANAN = '12') OR (KD_PELAYANAN = '13') OR (KD_PELAYANAN = '14'))";
           // lapWasdal.namaModul = ;
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalPndhTgn()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnTutup);
            this.barMonWasdalExcel.ItemClick +=new ItemClickEventHandler(this.mWlPnddTgnExcel);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Always;
        }

        private void nbiMonitoringWasdalPndhTgnBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPndhTgnBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void mWlPndhTgnRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPndhTgnBMN();
        }

        private void mWlPndhTgnMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Pemindahtangan
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.pemindahtanganan1.modeLoadData == "normal" || lapWasdal.pemindahtanganan1.modeLoadData == "cari")
                    lapWasdal.pemindahtanganan1.dataInisial = false;

                lapWasdal.pemindahtanganan1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlPndhTgnPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdatePT())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        GetIniLapPemindahtanganan();
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        this.dataLokalPTAda(); //data lokal
                    }
                }
                else
                {
                    GetIniLapPemindahtanganan(); //ambil data lagi dari server
                }
            }
        }

        private void mWlPndhTgnTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void mWlPnddTgnExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            lapWasdal.ExportToExcel();
        }

        #region Init Data Lap Pemindahtanganan

        #region Cek Data Lokal
        private bool pernahUpdatePT()
        {
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_PINDAHTANGAN_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        private void dataLokalPTAda()
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtLapPindahtgn = new DataTable();
                xrLapPindahtgn = null;
                if (xrLapPindahtgn == null)
                    xrLapPindahtgn = new KSK.WL.PEMINDAHTANGANAN.xrLapPindahtangan();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,NUP,UR_SSKEL,NM_LAYANAN,NM_PHK_LAIN,NO_SK,TGL_SK,NM_PENERBIT_SK_DTL,NILAI_PNBP,TGL_SETOR,KET FROM RPT_WASDAL_PINDAHTANGAN_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapPindahtgn);

                    DataTable DTLapPindahtgn = new DataTable("DTLapPindahtgn");
                    DTLapPindahtgn.Columns.Add("NUM", typeof(string));
                    DTLapPindahtgn.Columns.Add("KD_BRG", typeof(string));
                    DTLapPindahtgn.Columns.Add("NUP", typeof(string));
                    DTLapPindahtgn.Columns.Add("UR_SSKEL", typeof(string));
                    DTLapPindahtgn.Columns.Add("NM_LAYANAN", typeof(string));//4
                    DTLapPindahtgn.Columns.Add("NM_PHK_LAIN", typeof(string));
                    DTLapPindahtgn.Columns.Add("NO_SK", typeof(string));
                    DTLapPindahtgn.Columns.Add("TGL_SK", typeof(string));
                    DTLapPindahtgn.Columns.Add("NM_PENERBIT_SK_DTL", typeof(string));
                    DTLapPindahtgn.Columns.Add("NILAI_PNBP", typeof(string));
                    DTLapPindahtgn.Columns.Add("TGL_SETOR", typeof(string));//10
                    DTLapPindahtgn.Columns.Add("KET", typeof(string));
                    if (dtLapPindahtgn.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapPindahtgn.Rows)
                        {
                            string tglSk = (Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[7]).Date.ToString("dd/MM/yyyy");
                            string tglSetor = (Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy");
                            decimal nilaiPnbp = Convert.ToDecimal(dr[9]);
                            DTLapPindahtgn.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), Convert.ToString(dr[6]), tglSk, Convert.ToString(dr[8]), nilaiPnbp.ToString("n0"), tglSetor, Convert.ToString(dr[11]));
                            _no++;
                        }
                        xrLapPindahtgn.DataSource = DTLapPindahtgn;
                        xrLapPindahtgn.DataMember = "DTLapPindahtgn";
                    }
                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }

            
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            //param.Value = konfigApp.tahunAnggaran-1;
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;
            xrLapPindahtgn.xrlKdSatker.Text = konfigApp.kodeSatker;
            xrLapPindahtgn.xrlUrSatker.Text = konfigApp.namaSatker;
            xrLapPindahtgn.Parameters.Add(param);
            xrLapPindahtgn.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrLapPindahtgn.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrLapPindahtgn);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();



        }
        #endregion Get Data Lokal

        #region get data from server
        SvcGnrtLapPindahtangan.execute_pttClient ambilGnrtLapPindahtangan;
        SvcGnrtLapPindahtangan.OutputParameters outGnrtLapPindahtangan;
        private void GetIniLapPemindahtanganan()
        {
            try
            {
                Thread mythread = new Thread(new ThreadStart(ShowProgresBar));
                mythread.Start();
                SvcGnrtLapPindahtangan.InputParameters parInp = new SvcGnrtLapPindahtangan.InputParameters();
                
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                //if (konfigApp.idGroup == 2) { parInp.STR_WHERE = "ID_SATKER = " + konfigApp.idSatker + " AND THN_ANG='" + (konfigApp.tahunAnggaran - 1) + "'"; }
                parInp.STR_WHERE = "KD_PENERBIT_SK!='05' AND KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%' AND THN_ANG='" + (tahunAnggaran) + "'" + " AND ((KD_LAYANAN = '11') OR (KD_LAYANAN = '12') OR (KD_LAYANAN = '13') OR (KD_LAYANAN = '14'))";
                parInp.P_COL = "KD_BRG,NUP";
                parInp.P_SORT = "ASC";
                parInp.P_COUNT = "y";
                ambilGnrtLapPindahtangan = new SvcGnrtLapPindahtangan.execute_pttClient();
                ambilGnrtLapPindahtangan.Beginexecute(parInp, new AsyncCallback(getDataLapPemindahtanganan), null);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getDataLapPemindahtanganan(IAsyncResult result)
        {
            try
            {
                outGnrtLapPindahtangan = ambilGnrtLapPindahtangan.Endexecute(result);
                ambilGnrtLapPindahtangan.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new LoadDataLapPemindahtanganan(this.loadDataLapPemindahtanganan), outGnrtLapPindahtangan);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void LoadDataLapPemindahtanganan(SvcGnrtLapPindahtangan.OutputParameters dataOut);

        private void loadDataLapPemindahtanganan(SvcGnrtLapPindahtangan.OutputParameters dataOut)
        {
            /*laporan untuk pengembangan*/

            string namaFileDownload = String.Format("Pemindahtanganan.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_PINDAHTANGAN_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSql("Pemindahtanganan");
            dataLokalPTAda();
        }
        #endregion get data from server

        #endregion
        
        #endregion

        #region PENGHAPUSAN BMN
        private void initGridMonWlHapusBMN()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalHapus();
            //this.setGridMonWasdal(this.menuLapWasdal, this.subMenuMonHapus);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Penghapusan BMN");
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '15')OR(KD_PELAYANAN = '16')OR(KD_PELAYANAN = '17'))";
            //lapWasdal.namaModul = ;
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalHapus()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlHapusRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlHapusMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlHapusPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlHapusTutup);
        }

        private void nbiMonitoringWasdalHapusBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlHapusBMN();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Always;
        }

        private void mWlHapusRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlHapusBMN();
        }

        private void mWlHapusMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Penghapusan
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.penghapusan1.modeLoadData == "normal" || lapWasdal.penghapusan1.modeLoadData == "cari")
                    lapWasdal.penghapusan1.dataInisial = false;

                lapWasdal.penghapusan1.getTindakLanjut();
            }
            #endregion
        }

        private void mWlHapusPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            GetIniLapPenghapusan();
        }

        private void mWlHapusTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #region Init Data Lap Penghapusan
        //KSK.WL.PEMINDAHTANGANAN.xrPemindahtangananBMN xrpemindahtangananBMN;
        private void GetIniLapPenghapusan()
        {
            try
            {
                Thread mythread = new Thread(new ThreadStart(ShowProgresBar));
                mythread.Start();
                SvcWasdalHapusLapWasdalMSK.InputParameters parInp = new SvcWasdalHapusLapWasdalMSK.InputParameters();

                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                if (konfigApp.idGroup == 2) { parInp.STR_WHERE = "ID_SATKER = " + konfigApp.idSatker + " AND THN_ANG=" + (tahunAnggaran); }
                parInp.P_COL = "KD_BRG,NUP";
                parInp.P_SORT = "ASC";
                parInp.P_COUNT = "n";
                svcLapPenghapusan = new SvcWasdalHapusLapWasdalMSK.lapWasdalMSK_pttClient();
                svcLapPenghapusan.Beginexecute(parInp, new AsyncCallback(getDataLapPenghapusan), null);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getDataLapPenghapusan(IAsyncResult result)
        {
            try
            {
                outLapPenghapusan = svcLapPenghapusan.Endexecute(result);
                svcLapPenghapusan.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new LoadDataLapPenghapusan(this.loadDataLapPenghapusan), outLapPenghapusan);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void LoadDataLapPenghapusan(SvcWasdalHapusLapWasdalMSK.OutputParameters dataOut);

        private void loadDataLapPenghapusan(SvcWasdalHapusLapWasdalMSK.OutputParameters dataOut)
        {
            ReportPrintTool pt;
            int jmlData = dataOut.SF_LAP_WASDAL_HAPUS_SK.Count();

            for (int i = 0; i <= jmlData - 1; i++)
            {
                dataOut.SF_LAP_WASDAL_HAPUS_SK[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_LAP_WASDAL_HAPUS_SK[i].TGL_SK);
            }

            xrPenghapusanBMN xrpemindahtangananBMN = new xrPenghapusanBMN();
            xrpemindahtangananBMN.bsLapWasdalBMN.DataSource = dataOut.SF_LAP_WASDAL_HAPUS_SK;
            pt = new ReportPrintTool(xrpemindahtangananBMN);
            pt.AutoShowParametersPanel = true;
            pt.ShowPreviewDialog();
            fToggleProgressBar("stop");
        }
        #endregion


        #endregion

        #region Penertiban BMN
   
        private void setEventTombolPenertiban()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.bbiPenertibanRefreshKlik);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.bbiPenertibanMoreDataKlik);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.bbiPenertibanPrintKlik);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.bbiPenertibanKeluarKlik);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.bbiPenertibanExcel);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Always;
        }

        #region --++ Tombol Ribbon
        private void bbiPenertibanPrintKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdatePT())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        getInitLapPenertiban_RPMK();
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        this.dataLokalPenertibanAda(); //data lokal
                    }
                }
                else
                {
                    getInitLapPenertiban_RPMK(); //ambil data lagi dari server
                }
            }
        }

        private void bbiPenertibanRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            nbiMonitoringWasdalPenertibanBMN_LinkClicked(null, null);
        }

        private void bbiPenertibanMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.monitoringPenertiban.modeLoadData == "normal" || lapWasdal.monitoringPenertiban.modeLoadData == "cari")
                    lapWasdal.monitoringPenertiban.dataInisial = false;

                lapWasdal.monitoringPenertiban.getDataMonitoring();
            }
        }

        private void bbiPenertibanKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiPenertibanExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            lapWasdal.ExportToExcel();
        }
        #endregion --++ Tombol Ribbon

        private void nbiMonitoringWasdalPenertibanBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            inisialisasiForm();
            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Penertiban BMN");
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '02') OR (KD_PELAYANAN = '03') OR (KD_PELAYANAN = '04') OR (KD_PELAYANAN = '05'))";
            //lapWasdal.namaModul = ;
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
            setEnabledButtonMWasdal("Export To Excel", true);
            frmProbar = new FrmProgressBar();
            this.setEventTombolPenertiban();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        #region Init Lap Data Penertiban
        private void getInitLapPenertiban_RPMK()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                //SvcWasdalPenertibanSelect.InputParameters parInp = new SvcWasdalPenertibanSelect.InputParameters(); 
                SvcWasdalRptPenertiban.InputParameters parInp = new SvcWasdalRptPenertiban.InputParameters();
                parInp.P_COL = "";
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "N";
                //parInp.STR_WHERE = String.Format("ID_USER = {0} AND THN_ANG='{1}' {2}", konfigApp.idUser, (konfigApp.tahunAnggaran - 1), this.strCari);  //ini diganti jadi gini
                parInp.STR_WHERE = String.Format("KD_SATKER LIKE '{0}%' AND THN_ANG='{1}' {2}", konfigApp.kodeSatker.Substring(0, 15), (tahunAnggaran), this.strCari);  //ini diganti jadi gini                
                ambilGnrtPenertiban = new SvcWasdalRptPenertiban.execute_pttClient();
                ambilGnrtPenertiban.Open();
                ambilGnrtPenertiban.Beginexecute(parInp, new AsyncCallback(getLapPenertiban_RPMK), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLapPenertiban_RPMK(IAsyncResult result)
        {
            try
            {
                outputGnrtPenertiban = ambilGnrtPenertiban.Endexecute(result);    //dari sini langsung ke catch
                ambilGnrtPenertiban.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsLapPenertiban_RPMK(dsLapPenertiban_RPMK), outputGnrtPenertiban);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private delegate void DsLapPenertiban_RPMK(SvcWasdalRptPenertiban.OutputParameters dataOut);

        private void dsLapPenertiban_RPMK(SvcWasdalRptPenertiban.OutputParameters dataOut)
        {
            /*laporan untuk pengembangan*/
            ReportPrintTool pt;
            string namaFileDownload = String.Format("{0}.zip", DataLokal.nmFolder);
            string lokasiDiFile = String.Format("{0}\\" + DataLokal.nmFolder + "\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\" + DataLokal.nmFolder + "", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            dl.pilihLaporan("penertiban");


            xrPenertiban xrTertib = new xrPenertiban();
            xrTertib.bsLapPenertiban.DataSource = DataLokal.dt;

            //ReportPrintTool pt;
            //xrPenertiban1 xrTertib = new xrPenertiban1();
            //xrTertib.bsLapPenertiban.DataSource = dataOut.SF_ROW_WASDAL_PENERTIBAN;

            konfigApp.setTahunAnggaran();
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            //param.Value = konfigApp.tahunAnggaran-1;
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;

            xrTertib.Parameters.Add(param);

            #region setting margin, paperkind
            DevExpress.XtraPrinting.Preview.PrintPreviewFormEx form = new DevExpress.XtraPrinting.Preview.PrintPreviewFormEx();
            xrTertib.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrTertib.Margins = new System.Drawing.Printing.Margins(75, 75, 75, 75); //margin
            form.PrintingSystem = xrTertib.PrintingSystem;
            xrTertib.CreateDocument();
            form.PrintingSystem.ExecCommand(DevExpress.XtraPrinting.PrintingSystemCommand.Scale, new object[] { 1 }); //autofit
            form.ShowDialog();
            #endregion

            fToggleProgressBar("stop");
        }

        #endregion

        private void barButtonItem9_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelSatker.Controls.Clear();
            rpPenertibanBMN.Visible = false;
        }

        /// <summary>
        ///  Button print digunakan pada Menu Penertiban dan Laporan Wasdal
        ///  pembeda untuk print dilakukan pada variabel activeMenu
        ///  dimana bila = "P" merupakan menu penertiban, dan = "LW" merupakan Laporan Wasdal
        ///  default = "P"
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// 

        string activeMenu = "P";
        //dipake untuk penertiban dan monitoring lap wasdal
        private void barButtonItem10_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam._closeMode;
            if (this._closeMode == "Y")
            {

                if (activeMenu == "P")
                {
                    if (pernahUpdatePenertiban())
                    {
                        DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (dialogResult == DialogResult.Yes)
                        {
                            getInitLapPenertiban();
                        }
                        else if (dialogResult == DialogResult.No)
                        {
                            this.dataLokalPenertibanAda(); //data lokal
                        }
                    }
                    else
                    {
                        getInitLapPenertiban(); //ambil data lagi dari server
                    }
                }
                else
                {
                    // Mencetak Laporan Wasdal
                   // getInitLaporanWasdalRpt();
                }

            }
        }

        #region Init Lap Data Penertiban

        #region Cek Data Lokal
        private bool pernahUpdatePenertiban()
        {
            string koneksiSqlServer = String.Format(@"Data Source=localhost\SQLBPSIMAN;Initial Catalog=LOCALBPSIMAN;User Id=sa;Password=SHTbpD*1");
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_PENERTIBAN";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        private void dataLokalPenertibanAda()
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtLapTertib = new DataTable();
                xrTertib = null;
                if (xrTertib == null)
                    xrTertib = new xrLapPenertiban();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,UR_SSKEL,NUP,DASAR_PENERTIBAN,NO_LAPORAN ,TGL_LAPORAN,BENTUK_PENERTIBAN BENTUK_PENERTIBAN1,UR_BENTUK_PENERTIBAN,NO_SURAT_PENERTIBAN,TGL_SURAT_PENERTIBAN,TINDAK_LANJUT_HSL, BENTUK_PENERTIBAN BENTUK_PENERTIBAN2,BENTUK_PENERTIBAN BENTUK_PENERTIBAN3 FROM RPT_WASDAL_PENERTIBAN";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapTertib);

                    DataTable DTLapTertib = new DataTable("DTLapTertib");
                    DTLapTertib.Columns.Add("NUM", typeof(string));//0
                    DTLapTertib.Columns.Add("KD_BRG", typeof(string));//1
                    DTLapTertib.Columns.Add("UR_SSKEL", typeof(string));//2
                    DTLapTertib.Columns.Add("NUP", typeof(string));//3
                    DTLapTertib.Columns.Add("DASAR_PENERTIBAN", typeof(string));//4
                    DTLapTertib.Columns.Add("NO_LAPORAN", typeof(string));//5
                    DTLapTertib.Columns.Add("TGL_LAPORAN", typeof(string));//6
                    DTLapTertib.Columns.Add("BENTUK_PENERTIBAN1", typeof(string));//7
                    DTLapTertib.Columns.Add("UR_BENTUK_PENERTIBAN", typeof(string));//8
                    DTLapTertib.Columns.Add("NO_SURAT_PENERTIBAN", typeof(string));//9
                    DTLapTertib.Columns.Add("TGL_SURAT_PENERTIBAN", typeof(string));//10
                    DTLapTertib.Columns.Add("TINDAK_LANJUT_HSL", typeof(string));//11
                    DTLapTertib.Columns.Add("BENTUK_PENERTIBAN2", typeof(string));//12
                    DTLapTertib.Columns.Add("BENTUK_PENERTIBAN3", typeof(string));//13

                    if (dtLapTertib.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapTertib.Rows)
                        {
                            string tglLap = (Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[6]).Date.ToString("dd/MM/yyyy");
                            string tglSrtPenertiban = (Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[10]).Date.ToString("dd/MM/yyyy");
                            string dsrPenertiban = (Convert.ToString(dr[4]) == "" || Convert.ToString(dr[4]) == null || Convert.ToString(dr[4]) == "-") ? "-" : dr[5].ToString() + " \r\n" + tglLap;
                            string btkPenggunaan = (dr[7].ToString() == "PENGGUNAAN") ? string.Format("{0} \r\n {1}", dr[9].ToString(), tglSrtPenertiban) : "-";
                            string btkPemanfaatan = (dr[7].ToString() == "PEMANFAATAN") ? string.Format("{0} \r\n {1}", dr[9].ToString(), tglSrtPenertiban) : "-";
                            string btkPemindahtangan = (dr[7].ToString() == "PEMINDAHTANGANAN") ? string.Format("{0} \r\n {1}", dr[9].ToString(), tglSrtPenertiban) : "-";

                            DTLapTertib.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), dsrPenertiban, Convert.ToString(dr[5]), konfigApp.ToDate(tglLap), btkPenggunaan, Convert.ToString(dr[8]), Convert.ToString(dr[9]), Convert.ToString(tglSrtPenertiban) , Convert.ToString(dr[11]), btkPemanfaatan, btkPemindahtangan);
                            _no++;
                        }
                        xrTertib.DataSource = DTLapTertib;
                        xrTertib.DataMember = "DTLapTertib";
                    }
                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }

            

            //konfigApp.setTahunAnggaran();
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;

            xrTertib.xrKdSatker.Text = konfigApp.kodeSatker;
            xrTertib.xrUrSatker.Text = konfigApp.namaSatker;
            xrTertib.Parameters.Add(param);
            xrTertib.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrTertib.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrTertib);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();

            


        }
        #endregion Get Data Lokal

        #region Get Data From Server
        SvcWasdalRptPenertiban.execute_pttClient ambilGnrtPenertiban;
        SvcWasdalRptPenertiban.OutputParameters outputGnrtPenertiban;
        private void getInitLapPenertiban()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                //SvcWasdalPenertibanSelect.InputParameters parInp = new SvcWasdalPenertibanSelect.InputParameters();
                SvcWasdalRptPenertiban.InputParameters parInp = new SvcWasdalRptPenertiban.InputParameters();
                parInp.P_COL = "";
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "N";
                //parInp.STR_WHERE = String.Format("ID_USER = {0} AND THN_ANG='{1}' {2}", konfigApp.idUser, (konfigApp.tahunAnggaran - 1), this.strCari);  //ini diganti jadi gini
                parInp.STR_WHERE = String.Format("KD_SATKER LIKE '{0}%' AND THN_ANG='{1}' {2}", konfigApp.kodeSatker.Substring(0,15), (tahunAnggaran), this.strCari);  //ini diganti jadi gini                
                ambilGnrtPenertiban = new SvcWasdalRptPenertiban.execute_pttClient();
                ambilGnrtPenertiban.Open();
                ambilGnrtPenertiban.Beginexecute(parInp, new AsyncCallback(getLapPenertiban), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLapPenertiban(IAsyncResult result)
        {
            try
            {
                outputGnrtPenertiban = ambilGnrtPenertiban.Endexecute(result);    //dari sini langsung ke catch
                ambilGnrtPenertiban.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsLapPenertiban(dsLapPenertiban), outputGnrtPenertiban);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private delegate void DsLapPenertiban(SvcWasdalRptPenertiban.OutputParameters dataOut);

        private void dsLapPenertiban(SvcWasdalRptPenertiban.OutputParameters dataOut)
        {
            /*laporan untuk pengembangan*/
            ReportPrintTool pt;
            string namaFileDownload = String.Format("Penertiban.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_PENERTIBAN"); //mengosongkan isi table lokal
            eksekusiFileSql("Penertiban");
            dataLokalPenertibanAda();
        }
        #endregion Get Data From Server
        
        #endregion

        #endregion

        #region Init Lap Wasdal
        SvcLapMonWasdalRpt.execute_pttClient clientGetDataLapWasda;
        SvcLapMonWasdalRpt.OutputParameters outputGetDataLapWasdal;
        private delegate void DsLapWasdal(SvcLapMonWasdalRpt.OutputParameters dataOut);

        private void getInitLaporanWasdalRpt()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapMonWasdalRpt.InputParameters parInp = new SvcLapMonWasdalRpt.InputParameters();
                parInp.P_COL = "";
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "N";
                //parInp.STR_WHERE = String.Format("ID_USER = {0} AND THN_ANG='{1}' {2}", konfigApp.idUser, (konfigApp.tahunAnggaran - 1), this.strCari);  //ini diganti jadi gini
                parInp.STR_WHERE = String.Format("KD_SATKER LIKE '{0}%' AND THN_ANG='{1}' {2}", konfigApp.kodeSatker.Substring(0, 15), (tahunAnggaran), this.strCari);  //ini diganti jadi gini                
                clientGetDataLapWasda = new SvcLapMonWasdalRpt.execute_pttClient();
                clientGetDataLapWasda.Open();
                clientGetDataLapWasda.Beginexecute(parInp, new AsyncCallback(getDataLaporanWasdal), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        
        }

        private void getDataLaporanWasdal(IAsyncResult result)
        {
            try
            {
                outputGetDataLapWasdal = clientGetDataLapWasda.Endexecute(result);    //dari sini langsung ke catch
                clientGetDataLapWasda.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsLapWasdal(dsLapWasdal), outputGetDataLapWasdal);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private void dsLapWasdal(SvcLapMonWasdalRpt.OutputParameters dataOut)
        {
            ReportPrintTool pt;
            string namaFileDownload = String.Format("monLapWasdal.zip");
            string lokasiDiFile = String.Format("{0}\\Penggunaan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Penggunaan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }

            DataLokal dl = new DataLokal();
            dl.pilihLaporan("monLapWasdal");

            this.dataLokalMonLapWasdalAda();
            //xrPenertiban xrTertib = new xrPenertiban();
            //xrTertib.bsLapPenertiban.DataSource = DataLokal.dt;

            ////ReportPrintTool pt;
            ////xrPenertiban1 xrTertib = new xrPenertiban1();
            ////xrTertib.bsLapPenertiban.DataSource = dataOut.SF_ROW_WASDAL_PENERTIBAN;

            //konfigApp.setTahunAnggaran();
            //Parameter param = new Parameter();
            //param.Name = "tahunAnggaran";
            //param.Type = typeof(System.String);
            ////param.Value = konfigApp.tahunAnggaran-1;
            //param.Value = tahunAnggaran;
            //param.Description = "";
            //param.Visible = false;

            //xrTertib.Parameters.Add(param);

            //#region setting margin, paperkind
            //DevExpress.XtraPrinting.Preview.PrintPreviewFormEx form = new DevExpress.XtraPrinting.Preview.PrintPreviewFormEx();
            //xrTertib.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            //xrTertib.Margins = new System.Drawing.Printing.Margins(75, 75, 75, 75); //margin
            //form.PrintingSystem = xrTertib.PrintingSystem;
            //xrTertib.CreateDocument();
            //form.PrintingSystem.ExecCommand(DevExpress.XtraPrinting.PrintingSystemCommand.Scale, new object[] { 1 }); //autofit
            //form.ShowDialog();
            //#endregion

            //fToggleProgressBar("stop");
        }

        
        #endregion

        #region MONITORING INSIDENTIL
        //KSK.WL.PEMINDAHTANGANAN.xrLapPindahtangan xrLapPindahtgn;

        private void initGridMonWlMonInsident()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalMonInsiden();
            //this.setGridMonWasdal(this.menuLapWasdal, this.subMenuMonWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Monitoring Insidentil");
            lapWasdal.strKdPelayanan = "AND ((KD_PELAYANAN = '11') OR (KD_PELAYANAN = '12') OR (KD_PELAYANAN = '13') OR (KD_PELAYANAN = '14'))";
            //lapWasdal.namaModul = ;
            SetBarNameMonitoringWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalMonInsiden()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlMonInsidentilRefresh);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMonInsidentilMore);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlMonInsidentilPrint);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlMonInsidentilTutup);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlMonInsidentilExcel);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Always;
        }

        private void nbiMonitoringWasdalMonInsident_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlMonInsident();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
        }

        private void mWlMonInsidentilRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlMonInsident();
        }

        private void mWlMonInsidentilMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Pemindahtangan
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.pemindahtanganan1.modeLoadData == "normal" || lapWasdal.pemindahtanganan1.modeLoadData == "cari")
                    lapWasdal.pemindahtanganan1.dataInisial = false;

                lapWasdal.pemindahtanganan1.getTindakLanjut();
            }

            #endregion
        }

        private void mWlMonInsidentilPrint(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdatePT())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        GetIniLapPemindahtanganan();
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        this.dataLokalPTAda(); //data lokal
                    }
                }
                else
                {
                    GetIniLapPemindahtanganan(); //ambil data lagi dari server
                }
            }
        }

        private void mWlMonInsidentilTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void mWlMonInsidentilExcel(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            lapWasdal.ExportToExcel();
        }

        #endregion

        #endregion

        #region PMK 52 atau MENU LAPORAN WASDAL
        //public KSK.WL.ucLapWasdal lapWasdal;

        private void eksekusiFileSqlPmk(string nmZip)
        {
            string FolderDiFile = String.Format("{0}\\Laporan\\", System.IO.Directory.GetCurrentDirectory());
            string lokasiDiFile = String.Format("{0}\\Laporan\\" + nmZip + "", System.IO.Directory.GetCurrentDirectory());
            DirectoryInfo directorySelected = new DirectoryInfo(FolderDiFile);
            foreach (FileInfo fileToDecompress in directorySelected.GetFiles("*.zip")) //dekompresi result dari service
            {
                DataLokal.Decompress(fileToDecompress);
            }
            bool adaGagal = false;
            string daftarBarisGagal = "";
            int noBaris = 0;
            string barisFile;
            StreamReader fileDibaca = new StreamReader(lokasiDiFile);
            fileteks = "";
            fileteks = fileDibaca.ReadToEnd();
            //fileteks = fileteks.Replace("\n",string.Empty);
            string[] cacahBaris = fileteks.Split(';');

            int j = 0;
            frmProbar = new FrmProgressBar();
            frmProbar.total = cacahBaris.Count();
            frmProbar.cacahBaris = cacahBaris;
            frmProbar.ShowDialog();

            if (adaGagal == true)
            {
                MessageBox.Show("Daftar record (baris) data yang gagal: " + daftarBarisGagal, "Perhatian");
            }
            //eksekusiDone = true;
            fileDibaca.Close();
            File.Delete(lokasiDiFile);
        }

        #region PENGGUNAAN BMN PMK

        private void initGridMonWlGunaBMN_RPMK()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalGuna_RPMK();
            //this.setGridMonWasdal(this.menuMonWasdal, this.subMenuLapWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Penggunaan BMN RPMK");
            lapWasdal.strKdPelayanan = "";
            //lapWasdal.namaModul = "";
            SetBarNameLaporanWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalGuna_RPMK()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlGunaRefresh_RPMK);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlGunaMore_RPMK);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlGunaPrint_RPMK);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlGunaTutup_RPMK);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Never;
        }

        private void nbiMonitoringWasdalGunaBMN_RPMK_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlGunaBMN_RPMK();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Always;
        }

        private void mWlGunaRefresh_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlGunaBMN_RPMK();
        }

        private void mWlGunaMore_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.penggunaanRpmk.modeLoadData == "normal" || lapWasdal.penggunaanRpmk.modeLoadData == "cari")
                    lapWasdal.penggunaanRpmk.dataInisial = false;

                lapWasdal.penggunaanRpmk.getTindakLanjut();
                
            }
        }

        //public string _closeMode;
        private void mWlGunaPrint_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdateRpmk())
                {
                    DialogResult dialogResult = MessageBox.Show("Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        getInitWasdalBMN_RPMK("1");
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        //this.dataLokalGunaRpmk("2"); //data lokal
                        getInitWasdalBMN_RPMK("2"); 
                    }
                }
                else
                {
                    getInitWasdalBMN_RPMK("2"); //ambil data lagi dari server
                }
            }
            
        }

        private void mWlGunaTutup_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #region  Show Data Wasdal penggunaan rpmk
        
        #region Cek Data Lokal
        private bool pernahUpdateRpmk() 
        {
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_GUNA_PMK_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        KSK.WL.PENGGUNAAN.xrLapWasdalRpmk xrLapGunaRpmk;
        private void dataLokalGunaRpmk() 
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtLapGunaRpmk = new DataTable();
                xrLapGunaRpmk = null;
                if (xrLapGunaRpmk == null)
                    xrLapGunaRpmk = new KSK.WL.PENGGUNAAN.xrLapWasdalRpmk();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,UR_SSKEL,NO_ASET,JNS_DOK, NO_DOK,LUAS,NO_SK,TGL_SK,KD_PELAYANAN,NM_PELAYANAN,NM_PENERBIT_SK_DTL,NM_PHK_LAIN,NILAI_PNBP,NO_REG_PERKARA,KD_STATUS,UR_STATUS,NO_PSP,TGL_PSP,TA_PSP,THN_ANG,NO_BUKTI_LAKSANA,TGL_BUKTI_LAKSANA,NM_PENERBIT_SK FROM RPT_WASDAL_GUNA_PMK_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapGunaRpmk);

                    DataTable DTLapGunaRpmk = new DataTable("DTLapGunaRpmk");

                    DTLapGunaRpmk.Columns.Add("NUM", typeof(string));//0
                    DTLapGunaRpmk.Columns.Add("KD_BRG", typeof(string));//1
                    DTLapGunaRpmk.Columns.Add("UR_SSKEL", typeof(string));//2
                    DTLapGunaRpmk.Columns.Add("NO_ASET", typeof(string));//3
                    DTLapGunaRpmk.Columns.Add("JNS_DOK", typeof(string));//4
                    DTLapGunaRpmk.Columns.Add("NO_DOK", typeof(string));//5
                    DTLapGunaRpmk.Columns.Add("LUAS", typeof(string));//6
                    DTLapGunaRpmk.Columns.Add("NO_SK", typeof(string));//7
                    DTLapGunaRpmk.Columns.Add("TGL_SK", typeof(string));//8
                    DTLapGunaRpmk.Columns.Add("KD_PELAYANAN", typeof(string));//9
                    DTLapGunaRpmk.Columns.Add("NM_PELAYANAN", typeof(string));//10
                    DTLapGunaRpmk.Columns.Add("NM_PENERBIT_SK_DTL", typeof(string));//11
                    DTLapGunaRpmk.Columns.Add("NM_PHK_LAIN", typeof(string));//12
                    DTLapGunaRpmk.Columns.Add("NILAI_PNBP", typeof(string));//13
                    DTLapGunaRpmk.Columns.Add("NO_REG_PERKARA", typeof(string));//14
                    DTLapGunaRpmk.Columns.Add("KD_STATUS", typeof(string));//15
                    DTLapGunaRpmk.Columns.Add("UR_STATUS", typeof(string));//16
                    DTLapGunaRpmk.Columns.Add("NO_PSP", typeof(string));//17
                    DTLapGunaRpmk.Columns.Add("TGL_PSP", typeof(string));//18
                    DTLapGunaRpmk.Columns.Add("TA_PSP", typeof(string)); // 19
                    DTLapGunaRpmk.Columns.Add("THN_ANG", typeof(string));//20
                    DTLapGunaRpmk.Columns.Add("NO_BUKTI_LAKSANA", typeof(string));//21
                    DTLapGunaRpmk.Columns.Add("TGL_BUKTI_LAKSANA", typeof(string));//22
                    DTLapGunaRpmk.Columns.Add("NM_PENERBIT_SK", typeof(string));//23


                    xrLapGunaRpmk.DataSource = null;
                    if (dtLapGunaRpmk.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapGunaRpmk.Rows)
                        {
                            string tglSk = (Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy");
                            decimal luas = Convert.ToDecimal(dr[6]);
                            decimal nilaiPnbp = Convert.ToDecimal(dr[13]);
                            string tglnonPsp = (Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[22]).Date.ToString("dd/MM/yyyy");
                            
                            int n = 0;
                            int thnAnggaran = (Int32.TryParse(dr[19].ToString(), out n)) ? Convert.ToInt32(dr[19]) : 0;
                            DTLapGunaRpmk.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), luas.ToString("n0"), Convert.ToString(dr[7]), tglSk, Convert.ToString(dr[9]), Convert.ToString(dr[10]), Convert.ToString(dr[11]), Convert.ToString(dr[12]), nilaiPnbp.ToString("n0"), Convert.ToString(dr[14]), Convert.ToString(dr[15]), Convert.ToString(dr[16]), Convert.ToString(dr[17]), Convert.ToString(dr[18]), thnAnggaran, Convert.ToString(dr[20]), Convert.ToString(dr[21]), tglnonPsp, Convert.ToString(dr[23]));
                            _no++;
                        }
                        xrLapGunaRpmk.DataSource = DTLapGunaRpmk;
                        xrLapGunaRpmk.DataMember = "DTLapGunaRpmk";
                        
                    }


                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }
            
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.Int32);
            param.Value = Convert.ToInt32(tahunAnggaran);
            param.Description = "";
            param.Visible = false;

            Parameter param1 = new Parameter();
            param1.Name = "kdSatker";
            param1.Type = typeof(System.String);
            param1.Value = konfigApp.kodeSatker;
            param1.Description = "";
            param1.Visible = false;

            Parameter param2 = new Parameter();
            param2.Name = "urSatker";
            param2.Type = typeof(System.String);
            param2.Value = konfigApp.namaSatker;
            param2.Description = "";
            param2.Visible = false;

           
            
            xrLapGunaRpmk.Parameters.Add(param);
            xrLapGunaRpmk.Parameters.Add(param1);
            xrLapGunaRpmk.Parameters.Add(param2);
            xrLapGunaRpmk.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrLapGunaRpmk.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrLapGunaRpmk);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();

        }
        #endregion Get Data Lokal

        SvcGnrtLapGunaPmkSkNew.execute_pttClient ambilGnrtLapRpmk;
        SvcGnrtLapGunaPmkSkNew.OutputParameters outGnrtLapRpmk;

        #region Get Data From Server
        public void getInitWasdalBMN_RPMK(string p_jns)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGnrtLapGunaPmkSkNew.InputParameters inPar = new SvcGnrtLapGunaPmkSkNew.InputParameters();
                inPar.P_MAX = 0;
                inPar.P_MAXSpecified = true;
                inPar.P_MIN = 0;
                inPar.P_MINSpecified = true;
                inPar.P_COUNT = "Y";
                //string strWhere = " (KD_JNS_BMN = 1 OR KD_JNS_BMN = 2 OR KD_JNS_BMN = 3 OR KD_JNS_BMN = 8 OR KD_JNS_BMN = 9 OR KD_JNS_BMN = 4) AND KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%'";
                string strWhere = "(ID_SATKER= "+konfigApp.idSatker + " OR ID_SATKER_PARENT= "+konfigApp.idSatker+")";
                inPar.STR_WHERE = "";
                inPar.P_COL = "KD_BRG,NO_ASET";
                inPar.P_SORT = "ASC";
                inPar.P_JNS = p_jns;
                inPar.P_THN_ANG = tahunAnggaran;
                inPar.P_THN_ANGSpecified = true;
                inPar.P_ID_SATKER = konfigApp.idSatker;
                inPar.P_ID_SATKERSpecified = true;
              
                ambilGnrtLapRpmk = new SvcGnrtLapGunaPmkSkNew.execute_pttClient();
                ambilGnrtLapRpmk.Beginexecute(inPar, new AsyncCallback(getDataWasdalBMN_RPMK), null);
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getDataWasdalBMN_RPMK(IAsyncResult result)
        {
            try
            {
                outGnrtLapRpmk = ambilGnrtLapRpmk.Endexecute(result);
                ambilGnrtLapRpmk.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new SimpanDataWasdalBMN_RPMK(this.simpanDataWasdalBMN_RPMK), outGnrtLapRpmk);
            }
            catch (Exception e)
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);

             }
        }

        private delegate void SimpanDataWasdalBMN_RPMK(SvcGnrtLapGunaPmkSkNew.OutputParameters dataOut);

        private void simpanDataWasdalBMN_RPMK(SvcGnrtLapGunaPmkSkNew.OutputParameters dataOut)
        {
            /*untuk pengembangan, laporan dilokalkan*/
            
            string namaFileDownload = String.Format("PenggunaanRpmk.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_GUNA_PMK_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSqlPmk("PenggunaanRpmk");
            dataLokalGunaRpmk();
        }
        #endregion Get Data From Server
        
        #endregion


        #endregion

        #region PEMANFAATAN BMN PMK

        private void initGridMonWlManfaatBMN_RPMK()
        {
            this.setEventButtonMWasdalManfaat_RPMK();
            //this.setGridMonWasdal(this.menuMonWasdal, this.subMenuLapWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this, "Pemanfaatan BMN RPMK");
            lapWasdal.strKdPelayanan = "";
           // lapWasdal.namaModul =;
            SetBarNameLaporanWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalManfaat_RPMK()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlManfaatRefresh_RPMK);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlManfaatMore_RPMK);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlManfaatPrint_RPMK);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlManfaatTutup_RPMK);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Never;
        }

        private void nbiMonitoringWasdalManfaatBMN_RPMK_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlManfaatBMN_RPMK();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Always;
        }

        private void mWlManfaatRefresh_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlManfaatBMN_RPMK();
        }

        private void mWlManfaatMore_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Manfaat
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.pemanfaatanRpmk.modeLoadData == "normal" || lapWasdal.pemanfaatanRpmk.modeLoadData == "cari")
                    lapWasdal.pemanfaatanRpmk.dataInisial = false;

                lapWasdal.pemanfaatanRpmk.getTindakLanjut();
            }
            #endregion
        }

        private void mWlManfaatPrint_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdateManfaatRpmk())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        GetIniLapManfaat_RPMK("1");
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        //this.dataLokalManfaatRpmk(); //data lokal
                        GetIniLapManfaat_RPMK("2");
                    
                    }
                }
                else
                {
                    GetIniLapManfaat_RPMK("2"); //ambil data lagi dari server
                }
            }
            //lapWasdal.print("pemanfaatan");
        }

        private void mWlManfaatTutup_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #region Init Data Lap Manfaat

        #region Cek Data Lokal
        private bool pernahUpdateManfaatRpmk()
        {
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_MANFAAT_PMK_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        KSK.WL.PEMANFAATAN.xrLapManfaatRpmk xrLapManfaatRpmk;
        private void dataLokalManfaatRpmk() 
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtLapManfaatRpmk = new DataTable();
                xrLapManfaatRpmk = null;
                if (xrLapManfaatRpmk == null)
                    xrLapManfaatRpmk = new KSK.WL.PEMANFAATAN.xrLapManfaatRpmk();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,UR_SSKEL,NUP,KD_PELAYANAN, NM_PELAYANAN,LUAS,NO_SK,TGL_SK,JANGKA_WAKTU,NM_PENERBIT_SK_DTL,NO_BUKTI_LAKSANA,TGL_BUKTI_LAKSANA,NM_PHK_LAIN,NILAI_PNBP,NTPN,TGL_SETOR,DARI_TGL,SD_TGL,PERIODE,NO_REKAM_PERJANJIAN,TGL_REKAM,THN_ANG,TA_PSP FROM RPT_WASDAL_MANFAAT_PMK_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapManfaatRpmk);

                    DataTable DTLapManfaatRpmk = new DataTable("DTLapManfaatRpmk");

                    DTLapManfaatRpmk.Columns.Add("NUM", typeof(string));//0
                    DTLapManfaatRpmk.Columns.Add("KD_BRG", typeof(string));//1
                    DTLapManfaatRpmk.Columns.Add("UR_SSKEL", typeof(string));//2
                    DTLapManfaatRpmk.Columns.Add("NUP", typeof(string));//3
                    DTLapManfaatRpmk.Columns.Add("KD_PELAYANAN", typeof(string));//4
                    DTLapManfaatRpmk.Columns.Add("NM_PELAYANAN", typeof(string));//5
                    DTLapManfaatRpmk.Columns.Add("LUAS", typeof(string));//6
                    DTLapManfaatRpmk.Columns.Add("NO_SK", typeof(string));//7
                    DTLapManfaatRpmk.Columns.Add("TGL_SK", typeof(string));//8
                    DTLapManfaatRpmk.Columns.Add("JANGKA_WAKTU", typeof(string));//9
                    DTLapManfaatRpmk.Columns.Add("NM_PENERBIT_SK_DTL", typeof(string));//10
                    DTLapManfaatRpmk.Columns.Add("NO_BUKTI_LAKSANA", typeof(string));//11
                    DTLapManfaatRpmk.Columns.Add("TGL_BUKTI_LAKSANA", typeof(string));//12
                    DTLapManfaatRpmk.Columns.Add("NM_PHK_LAIN", typeof(string));//13
                    DTLapManfaatRpmk.Columns.Add("NILAI_PNBP", typeof(string));//14
                    DTLapManfaatRpmk.Columns.Add("NTPN", typeof(string));
                    DTLapManfaatRpmk.Columns.Add("TGL_SETOR", typeof(string));//16
                    DTLapManfaatRpmk.Columns.Add("DARI_TGL", typeof(string));
                    DTLapManfaatRpmk.Columns.Add("SD_TGL", typeof(string));
                    DTLapManfaatRpmk.Columns.Add("PERIODE", typeof(string));//19
                    DTLapManfaatRpmk.Columns.Add("NO_REKAM_PERJANJIAN", typeof(string));//20
                    DTLapManfaatRpmk.Columns.Add("TGL_REKAM", typeof(string));//21
                    DTLapManfaatRpmk.Columns.Add("THN_ANG", typeof(string));//22
                    DTLapManfaatRpmk.Columns.Add("TA_PSP", typeof(string));//23

                    xrLapManfaatRpmk.DataSource = null;
                    if (dtLapManfaatRpmk.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapManfaatRpmk.Rows)
                        {
                            string tglSk = (Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy");
                            string tglBuktiLaksana = (Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy");
                            string tglSetor = (Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[16]).Date.ToString("dd/MM/yyyy");
                            string DariTgl = (Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy");
                            string SdTgl = (Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[18]).Date.ToString("dd/MM/yyyy");
                            decimal luas = Convert.ToDecimal(dr[6]);
                            decimal nilaiPnbp = Convert.ToDecimal(dr[14]);
                            int n = 0;
                            int thnAnggaran = (Int32.TryParse(dr[23].ToString(),out n))?Convert.ToInt32(dr[23]):0;
                            string tglRekamPerjanjian = (Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[12]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[21]).Date.ToString("dd/MM/yyyy");

                            DTLapManfaatRpmk.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), luas.ToString("n0"), Convert.ToString(dr[7]), tglSk, Convert.ToString(dr[9]), Convert.ToString(dr[10]), Convert.ToString(dr[11]), tglBuktiLaksana, Convert.ToString(dr[13]), nilaiPnbp.ToString("n0"), Convert.ToString(dr[15]), tglSetor, DariTgl, SdTgl, Convert.ToString(dr[19]), Convert.ToString(dr[19]),tglRekamPerjanjian,Convert.ToString(dr[22]),thnAnggaran);
                            _no++;
                        }
                        xrLapManfaatRpmk.DataSource = DTLapManfaatRpmk;
                        xrLapManfaatRpmk.DataMember = "DTLapManfaatRpmk";

                    }


                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }

            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.Int32);
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;

            Parameter param1 = new Parameter();
            param1.Name = "kdSatker";
            param1.Type = typeof(System.String);
            param1.Value = konfigApp.kodeSatker;
            param1.Description = "";
            param1.Visible = false;

            Parameter param2 = new Parameter();
            param2.Name = "urSatker";
            param2.Type = typeof(System.String);
            param2.Value = konfigApp.namaSatker;
            param2.Description = "";
            param2.Visible = false;
            
            xrLapManfaatRpmk.Parameters.Add(param);
            xrLapManfaatRpmk.Parameters.Add(param1);
            xrLapManfaatRpmk.Parameters.Add(param2);
            xrLapManfaatRpmk.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrLapManfaatRpmk.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrLapManfaatRpmk);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();

        }
        #endregion Get Data Lokal

        #region Get data from server
        SvcGnrtLapManfaatPmkSkNew.execute_pttClient ambilGnrtLapManfaatPmk;
        SvcGnrtLapManfaatPmkSkNew.OutputParameters outGnrtLapManfaatPmk;
        private void GetIniLapManfaat_RPMK(string p_jns)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGnrtLapManfaatPmkSkNew.InputParameters parInp = new SvcGnrtLapManfaatPmkSkNew.InputParameters();
                if (dataInisial == true)
                {
                    this.currentMaks = konfigApp.dataAkhir;
                    this.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    this.currentMin = this.currentMaks + 1;
                    this.currentMaks = this.currentMaks + konfigApp.dataAkhir;
                }

                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                parInp.P_JNS = p_jns;
                //string strWhere = "KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%' AND ((KD_PELAYANAN = '06') OR (KD_PELAYANAN = '07') OR (KD_PELAYANAN = '08') OR (KD_PELAYANAN = '09') OR (KD_PELAYANAN = '10'))";
                //string strWhere = " KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%'";
                string strWhere = "(ID_SATKER= " + konfigApp.idSatker + " OR ID_SATKER_PARENT= " + konfigApp.idSatker + ")";
                parInp.STR_WHERE = "";
                parInp.P_COL = "KD_BRG,NUP";
                parInp.P_SORT = "ASC";
                parInp.P_COUNT = "y";
                parInp.P_THN_ANG = tahunAnggaran;
                parInp.P_THN_ANGSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
              
                ambilGnrtLapManfaatPmk = new SvcGnrtLapManfaatPmkSkNew.execute_pttClient();
                ambilGnrtLapManfaatPmk.Beginexecute(parInp, new AsyncCallback(getDataLapManfaat_RPMK), null);
            }
            catch (Exception e)
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
                
            }
        }

        private void getDataLapManfaat_RPMK(IAsyncResult result)
        {
            try
            {
                outGnrtLapManfaatPmk = ambilGnrtLapManfaatPmk.Endexecute(result);
                ambilGnrtLapManfaatPmk.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new LoadDataLapManfaat_RPMK(this.loadDataLapManfaat_RPMK), outGnrtLapManfaatPmk);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void LoadDataLapManfaat_RPMK(SvcGnrtLapManfaatPmkSkNew.OutputParameters dataOut);

        private void loadDataLapManfaat_RPMK(SvcGnrtLapManfaatPmkSkNew.OutputParameters dataOut)
        {
            /*untuk pengembangan, laporan dilokalkan*/

            string namaFileDownload = String.Format("PemanfaatanRpmk.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_MANFAAT_PMK_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSqlPmk("PemanfaatanRpmk");
            dataLokalManfaatRpmk();

            
        }
        #endregion Get data from server

        #endregion


        #endregion

        #region PEMINDAHTANGANAN BMN PMK

        private void initGridMonWlPndhTgnBMN_RPMK()
        {
            inisialisasiForm();

            this.setEventButtonMWasdalPndhTgn_RPMK();
            //this.setGridMonWasdal(this.menuMonWasdal, this.subMenuLapWasdal);

            this.lapWasdal = new KSK.WL.ucLapWasdal(this,"Pemindahtanganan BMN RPMK");
            lapWasdal.strKdPelayanan = "";
            //lapWasdal.namaModul = ;
            SetBarNameLaporanWasdal(lapWasdal.namaModul);
            this.setPanel(this.lapWasdal);
            setEnabledButtonMWasdal("Refresh", true);
            setEnabledButtonMWasdal("More", true);
            setEnabledButtonMWasdal("Print", true);
            setEnabledButtonMWasdal("Tutup", true);
        }

        private void setEventButtonMWasdalPndhTgn_RPMK()
        {
            this.resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnRefresh_RPMK);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnMore_RPMK);
            this.bbiMWasdalPrint.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnPrint_RPMK);
            this.bbiMWasdalTutup.ItemClick += new ItemClickEventHandler(this.mWlPndhTgnTutup_RPMK);
            this.barMonWasdalExcel.Visibility = BarItemVisibility.Never;
        }

        private void nbiMonitoringWasdalPndhTgnBMN_RPMK_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            this.initGridMonWlPndhTgnBMN_RPMK();
            bbiMWasdalPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Always;
        }

        private void mWlPndhTgnRefresh_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dataInisial = true;
            initGridMonWlPndhTgnBMN_RPMK();
        }

        private void mWlPndhTgnMore_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            #region Pemindahtangan
            if (lapWasdal.xtbDetail1.SelectedTabPageIndex == 0)
            {
                if (lapWasdal.pemindahtanganRpmk.modeLoadData == "normal" || lapWasdal.pemindahtanganRpmk.modeLoadData == "cari")
                    lapWasdal.pemindahtanganRpmk.dataInisial = false;

                lapWasdal.pemindahtanganRpmk.getTindakLanjut();
            }

            #endregion
        }

        private void mWlPndhTgnPrint_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam.closeMode;
            if (this._closeMode == "Y")
            {
                if (pernahUpdatePTRpmk())
                {
                    DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (dialogResult == DialogResult.Yes)
                    {
                        GetIniLapPemindahtanganan_RPMK("1");
                    }
                    else if (dialogResult == DialogResult.No)
                    {
                        //this.dataLokalPTAdaRpmk(); //data lokal
                        GetIniLapPemindahtanganan_RPMK("2");
                    }
                }
                else
                {
                    GetIniLapPemindahtanganan_RPMK("2"); //ambil data lagi dari server
                }
            }
        }

        private void mWlPndhTgnTutup_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #region Init Data Lap Pemindahtanganan

        #region Cek Data Lokal
        private bool pernahUpdatePTRpmk() 
        {
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_WASDAL_PINDAHTGN_PMK_SATKER";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        KSK.WL.PEMINDAHTANGANAN.xrLapPindahtanganRpmk xrLapPindahtgnRpmk;
        private void dataLokalPTAdaRpmk()
        {
            ReportPrintTool pt;

            SqlConnection connection = null;

            try
            {
                DataTable dtLapPindahtgnRpmk = new DataTable();
                xrLapPindahtgnRpmk = null;
                if (xrLapPindahtgnRpmk == null)
                    xrLapPindahtgnRpmk = new KSK.WL.PEMINDAHTANGANAN.xrLapPindahtanganRpmk();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,KD_BRG,UR_SSKEL,NUP,KD_PELAYANAN, NM_PELAYANAN,LUAS,NO_SK,TGL_SK,NM_PENERBIT_SK_DTL,NM_PHK_LAIN,NILAI_PNBP,NTPN,TGL_SETOR,THN_ANG,TA_PSP FROM RPT_WASDAL_PINDAHTGN_PMK_SATKER";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtLapPindahtgnRpmk);

                    DataTable DTLapPindahtgnRpmk = new DataTable("DTLapPindahtgnRpmk");

                    DTLapPindahtgnRpmk.Columns.Add("NUM", typeof(string));//0
                    DTLapPindahtgnRpmk.Columns.Add("KD_BRG", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("UR_SSKEL", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("NUP", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("KD_PELAYANAN", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("NM_PELAYANAN", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("LUAS", typeof(string));//6
                    DTLapPindahtgnRpmk.Columns.Add("NO_SK", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("TGL_SK", typeof(string));//8
                    DTLapPindahtgnRpmk.Columns.Add("NM_PENERBIT_SK_DTL", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("NM_PHK_LAIN", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("NILAI_PNBP", typeof(string));//11
                    DTLapPindahtgnRpmk.Columns.Add("NTPN", typeof(string));
                    DTLapPindahtgnRpmk.Columns.Add("TGL_SETOR", typeof(string));//13
                    DTLapPindahtgnRpmk.Columns.Add("THN_ANG", typeof(string));//14
                    DTLapPindahtgnRpmk.Columns.Add("TA_PSP", typeof(string));//14


                    xrLapPindahtgnRpmk.DataSource = null;
                    if (dtLapPindahtgnRpmk.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtLapPindahtgnRpmk.Rows)
                        {
                            string tglSk = (Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[8]).Date.ToString("dd/MM/yyyy");
                            string tglSetor = (Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[13]).Date.ToString("dd/MM/yyyy");
                            decimal luas = Convert.ToDecimal(dr[6]);
                            decimal nilaiPnbp = Convert.ToDecimal(dr[11]);
                            int n = 0;
                            int thnAnggaran = (Int32.TryParse(dr[15].ToString(), out n)) ? Convert.ToInt32(dr[15]) : 0;
                            DTLapPindahtgnRpmk.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), luas.ToString("n0"), Convert.ToString(dr[7]), tglSk, Convert.ToString(dr[9]), Convert.ToString(dr[10]), nilaiPnbp.ToString("n0"), Convert.ToString(dr[12]), tglSetor, Convert.ToInt32(dr[14]), thnAnggaran);
                            _no++;
                        }
                        xrLapPindahtgnRpmk.DataSource = DTLapPindahtgnRpmk;
                        xrLapPindahtgnRpmk.DataMember = "DTLapPindahtgnRpmk";

                    }


                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }

            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.Int32);
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;

            Parameter param1 = new Parameter();
            param1.Name = "kdSatker";
            param1.Type = typeof(System.String);
            param1.Value = konfigApp.kodeSatker;
            param1.Description = "";
            param1.Visible = false;

            Parameter param2 = new Parameter();
            param2.Name = "urSatker";
            param2.Type = typeof(System.String);
            param2.Value = konfigApp.namaSatker;
            param2.Description = "";
            param2.Visible = false;

            xrLapPindahtgnRpmk.Parameters.Add(param);
            xrLapPindahtgnRpmk.Parameters.Add(param1);
            xrLapPindahtgnRpmk.Parameters.Add(param2);
            xrLapPindahtgnRpmk.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            xrLapPindahtgnRpmk.Margins = new System.Drawing.Printing.Margins(30, 30, 30, 0); //margin

            pt = new ReportPrintTool(xrLapPindahtgnRpmk);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();


        }
        #endregion Get Data Lokal

        #region Get Data From Server
        SvcGnrtLapPindahtgnPmkSkNew.execute_pttClient ambilGnrtLapPindahtgnPmk;
        SvcGnrtLapPindahtgnPmkSkNew.OutputParameters outGnrtLapPindahtgnPmk;
        private void GetIniLapPemindahtanganan_RPMK(string p_jns)
        {
            try
            {
                Thread mythread = new Thread(new ThreadStart(ShowProgresBar));
                mythread.Start();
                SvcGnrtLapPindahtgnPmkSkNew.InputParameters parInp = new SvcGnrtLapPindahtgnPmkSkNew.InputParameters();
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                //string strWhere = " KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%'";
                string strWhere = "(ID_SATKER= " + konfigApp.idSatker + " OR ID_SATKER_PARENT= " + konfigApp.idSatker + ")";
                parInp.STR_WHERE = "";
                parInp.P_COL = "KD_BRG,NUP";
                parInp.P_SORT = "ASC";
                parInp.P_COUNT = "y";
                parInp.P_JNS = p_jns;
                parInp.P_THN_ANG = tahunAnggaran;
                parInp.P_THN_ANGSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                ambilGnrtLapPindahtgnPmk = new SvcGnrtLapPindahtgnPmkSkNew.execute_pttClient();
                ambilGnrtLapPindahtgnPmk.Beginexecute(parInp, new AsyncCallback(getDataLapPemindahtanganan_RPMK), null);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getDataLapPemindahtanganan_RPMK(IAsyncResult result)
        {
            try
            {
                outGnrtLapPindahtgnPmk = ambilGnrtLapPindahtgnPmk.Endexecute(result);
                ambilGnrtLapPindahtgnPmk.Close();
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                this.Invoke(new LoadDataLapPemindahtanganan_RPMK(this.loadDataLapPemindahtanganan_RPMK), outGnrtLapPindahtgnPmk);
            }
            catch
            {
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ToggleProgressBar(this.fToggleProgressBar), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void LoadDataLapPemindahtanganan_RPMK(SvcGnrtLapPindahtgnPmkSkNew.OutputParameters dataOut);

        private void loadDataLapPemindahtanganan_RPMK(SvcGnrtLapPindahtgnPmkSkNew.OutputParameters dataOut)
        {
            /*laporan untuk pengembangan*/
            string namaFileDownload = String.Format("PemindahtangananRpmk.zip");
            string lokasiDiFile = String.Format("{0}\\Laporan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Laporan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            DataLokal dl = new DataLokal();
            KosongkanTabel("RPT_WASDAL_PINDAHTGN_PMK_SATKER"); //mengosongkan isi table lokal
            eksekusiFileSqlPmk("PemindahtangananRpmk");
            dataLokalPTAdaRpmk();

        }
        #endregion Get Data From Server

        #endregion


        #endregion

        #region PENERTIBAN BMN
        private bool modeCariPenertiban = false;
        KSK.PENERTIBAN.ucPenertibanGrid gridPenertiban;
        KSK.PENERTIBAN.ucPenertibanForm formPenertibanTambah;
        KSK.PENERTIBAN.ucPenertibanForm formPenertibanUbah;
        KSK.PENERTIBAN.ucPenertibanForm formPenertibanDetail;
        private ArrayList dsGridPenertiban;
        SvcWasdalPenertibanSelect.OutputParameters dOutPenertiban;
        SvcWasdalPenertibanSelect.execute_pttClient ambilPenertiban;
        KSK.PENERTIBAN.xrLapPenertiban xrTertib;
        private void setEventTombolPenertiban_RPMK()
        {
            resetEventTombolPenertiban();
            bbiPenertibanTambah.ItemClick += new ItemClickEventHandler(bbiPenertibanTambahKlik_RPMK);
            bbiPenertibanUbah.ItemClick += new ItemClickEventHandler(bbiPenertibanUbahKlik_RPMK);
            bbiPenertibanHapus.ItemClick += new ItemClickEventHandler(bbiPenertibanHapusKlik_RPMK);
            bbiPenertibanDetail.ItemClick += new ItemClickEventHandler(bbiPenertibanDetailKlik_RPMK);
            bbiPenertibanKembali.ItemClick += new ItemClickEventHandler(bbiPenertibanKembaliKlik_RPMK);
            bbiPenertibanRefresh.ItemClick += new ItemClickEventHandler(bbiPenertibanRefreshKlik_RPMK);
            bbiPenertibanMoreData.ItemClick += new ItemClickEventHandler(bbiPenertibanMoreDataKlik_RPMK);
            bbiPenertibanKeluar.ItemClick += new ItemClickEventHandler(bbiPenertibanKeluarKlik_RPMK);
            barButtonItem10.ItemClick += new ItemClickEventHandler(barButtonItem10_ItemClick);
            BbiPenertibanExcel.Visibility = BarItemVisibility.Never;
            barButtonItem10.Visibility = BarItemVisibility.Always;
      
        }

        private void resetEventTombolPenertiban()
        {
            konfigApp.RemoveClickEvent (bbiPenertibanTambah);
            konfigApp.RemoveClickEvent (bbiPenertibanUbah);
            konfigApp.RemoveClickEvent (bbiPenertibanHapus);
            konfigApp.RemoveClickEvent  (bbiPenertibanDetail);
            konfigApp.RemoveClickEvent (bbiPenertibanKembali);
            konfigApp.RemoveClickEvent (bbiPenertibanRefresh);
            konfigApp.RemoveClickEvent  (bbiPenertibanMoreData);
            konfigApp.RemoveClickEvent (bbiPenertibanKeluar);
            konfigApp.RemoveClickEvent (barButtonItem10);
        }

        private void initGridPenertiban_RPMK()
        {
            if (gridPenertiban == null)
            {
                gridPenertiban = new KSK.PENERTIBAN.ucPenertibanGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataPenertiban_RPMK),
                    detailDataGrid = new DetailDataGrid(bbiPenertibanUbahKlik_RPMK)
                };
            }
            setTombolPenertibanGrid();
            setEventTombolPenertiban_RPMK();
            setPanel(gridPenertiban);
        }

        private void setTombolPenertibanGrid()
        {
            bbiPenertibanTambah.Enabled = true;
            bbiPenertibanUbah.Enabled = true;
            bbiPenertibanHapus.Enabled = true;
            bbiPenertibanDetail.Enabled = true;
            bbiPenertibanKembali.Enabled = false;
            bbiPenertibanRefresh.Enabled = true;
            bbiPenertibanMoreData.Enabled = false;  
        }

        #region --++ Tombol Ribbon
        private void bbiPenertibanTambahKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

            if (formPenertibanTambah == null)
            {
                formPenertibanTambah = new KSK.PENERTIBAN.ucPenertibanForm("C")
                {
                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    simpanDataPenertiban = new SimpanDataPenertiban(simpanDataPenertiban_RPMK)
                };
            }
            formPenertibanTambah.inisialisasiForm();
            setPanel(formPenertibanTambah);
            setTombolPenertibanForm();

        }

        private void setTombolPenertibanForm()
        {
            bbiPenertibanTambah.Enabled = false;
            bbiPenertibanUbah.Enabled = false;
            bbiPenertibanHapus.Enabled = false;
            bbiPenertibanDetail.Enabled = false;
            bbiPenertibanKembali.Enabled = true;
            bbiPenertibanRefresh.Enabled = false;
            bbiPenertibanMoreData.Enabled = false;
        }

        private void bbiPenertibanUbahKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridPenertiban.dataTerpilih != null)
            {
                if (formPenertibanUbah == null)
                {
                    formPenertibanUbah = new KSK.PENERTIBAN.ucPenertibanForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataPenertiban = new SimpanDataPenertiban(simpanDataPenertiban_RPMK)
                    };
                }

                formPenertibanUbah.dataTerpilih = gridPenertiban.dataTerpilih;
                setPanel(formPenertibanUbah);
                formPenertibanUbah.inisialisasiForm();
                setTombolPenertibanForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiPenertibanHapusKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridPenertiban.dataTerpilih != null)
            {
                //if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusPenertiban, gridPenertiban.dataTerpilih.), konfigApp.judulKonfirmasi,
                //MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusPenertiban, gridPenertiban.dataTerpilih.KD_BRG), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcWasdalPenertibanCud.InputParameters parInp = new SvcWasdalPenertibanCud.InputParameters();
                        parInp.P_ID_PENERTIBAN = gridPenertiban.dataTerpilih.ID_PENERTIBAN;
                        parInp.P_ID_PENERTIBANSpecified = true;
                        parInp.P_ID_USER = gridPenertiban.dataTerpilih.ID_USER;
                        parInp.P_ID_USERSpecified = true;
                        parInp.P_ID_SATKER = gridPenertiban.dataTerpilih.ID_SATKER;
                        parInp.P_BENTUK_PENERTIBAN = gridPenertiban.dataTerpilih.BENTUK_PENERTIBAN;
                        parInp.P_ID_ASET = gridPenertiban.dataTerpilih.ID_ASET;
                        parInp.P_ID_ASETSpecified = true;
                        parInp.P_KD_BRG = gridPenertiban.dataTerpilih.KD_BRG;
                        parInp.P_KD_SATKER = gridPenertiban.dataTerpilih.KD_SATKER;
                        parInp.P_KET = gridPenertiban.dataTerpilih.KET;
                        parInp.P_KUASA_PENGGUNA_BRG = gridPenertiban.dataTerpilih.KUASA_PENGGUNA_BRG;
                        parInp.P_NM_PENGGUNA = gridPenertiban.dataTerpilih.NM_PENGGUNA;
                        parInp.P_NOREG = gridPenertiban.dataTerpilih.NOREG;
                        parInp.P_NUP = gridPenertiban.dataTerpilih.NUP.ToString();
                        parInp.P_SELECT = "D";
                        modeCrud = Convert.ToChar(parInp.P_SELECT);
                        parInp.P_UR_SATKER = gridPenertiban.dataTerpilih.UR_SATKER;
                        parInp.P_UR_SSKEL = gridPenertiban.dataTerpilih.UR_SSKEL;
                        ambilDataPenertiban = new SvcWasdalPenertibanCud.execute_pttClient();
                        ambilDataPenertiban.Open();
                        ambilDataPenertiban.Beginexecute(parInp, new AsyncCallback(cudPenertiban_RPMK), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiPenertibanDetailKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridPenertiban.dataTerpilih != null)
            {
                if (formPenertibanDetail == null)
                {
                    formPenertibanDetail = new KSK.PENERTIBAN.ucPenertibanForm("A");
                    formPenertibanDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                }
                formPenertibanDetail.dataTerpilih = gridPenertiban.dataTerpilih;
                setPanel(formPenertibanDetail);
                formPenertibanDetail.inisialisasiForm();
                setTombolPenertibanForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiPenertibanKembaliKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridPenertiban);
            setTombolPenertibanGrid();
            gridPenertiban.dsDataSource = dsGridPenertiban;
            gridPenertiban.displayData();
        }

        private void bbiPenertibanRefreshKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridPenertiban.teNamaKolom.Text = "";
            gridPenertiban.teCari.Text = "";
            gridPenertiban.fieldDicari = "";
            gridPenertiban.dataInisial = true;
            this.dataInisial = true;
            this.getInitPenertiban_RPMK();
        }

        private void bbiPenertibanMoreDataKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitPenertiban_RPMK();
            }
        }

        private void bbiPenertibanKeluarKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion --++ Tombol Ribbon

        private void nbiMonitoringWasdalPenertibanBMN_RPMK_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Laporan Wasdal";
            konfigApp.strSubMenu = konfigApp.namaLayanan18;
            konfigApp.kdPelayanan = "02";
            konfigApp.namaPelayanan = konfigApp.namaLayanan18;
            this.Enabled = false;
            this.inisialisasiForm();
            rpPenertibanBMN.Visible = true;
            ribbon.SelectedPage = rpPenertibanBMN;
            rpPenertibanBMN.Text = this.subMenuLapWasdal;
            rpgPenertibanBMN.Text = this.subMenuLapWasdal;

            initGridPenertiban_RPMK();
            modeCariPenertiban = false;
            gridPenertiban.FiturSearch.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            gridPenertiban.teNamaKolom.Text = "";
            gridPenertiban.teCari.Text = "";
            gridPenertiban.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitPenertiban_RPMK();
            activeMenu = "P";
        }

        #region --++ Ambil Data Penertiban
        private void getInitPenertiban_RPMK()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPenertibanSelect.InputParameters parInp = new SvcWasdalPenertibanSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                //parInp.STR_WHERE = String.Format("ID_USER = {0} {1}", konfigApp.idUser, this.strCari);  //ini diganti jadi gini
                parInp.STR_WHERE = String.Format("KD_SATKER LIKE '" + konfigApp.kodeSatker.Substring(0, 15) + "%'  {0}", this.strCari); 
                ambilPenertiban = new SvcWasdalPenertibanSelect.execute_pttClient();
                ambilPenertiban.Open();
                ambilPenertiban.Beginexecute(parInp, new AsyncCallback(getPenertiban_RPMK), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getPenertiban_RPMK(IAsyncResult result)
        {
            try
            {
                dOutPenertiban = ambilPenertiban.Endexecute(result);    //dari sini langsung ke catch
                ambilPenertiban.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsPenertiban_RPMK(dsPenertiban_RPMK), dOutPenertiban);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private delegate void DsPenertiban_RPMK(SvcWasdalPenertibanSelect.OutputParameters dataOut);

        private void dsPenertiban_RPMK(SvcWasdalPenertibanSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_ROW_WASDAL_PENERTIBAN.Count();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiPenertibanMoreData.Enabled = true;
            }
            else
            {
                this.masihAdaData = false;
                bbiPenertibanMoreData.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridPenertiban = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                //dataOut.SF_ROW_WASDAL_PENERTIBAN[i] = (dataOut.SF_ROW_WASDAL_PENERTIBAN[i] == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridPenertiban.Add(dataOut.SF_ROW_WASDAL_PENERTIBAN[i]);
            }

            gridPenertiban.sbCariOnline.Enabled = !modeCari;
            gridPenertiban.dsDataSource = dsGridPenertiban;
            gridPenertiban.displayData();
            if (modeCariPenertiban == true)
            {
                string xSatu = gridPenertiban.teNamaKolom.Text.Trim();
                string xDua = gridPenertiban.teCari.Text.Trim();
                string xTiga = gridPenertiban.fieldDicari;
                gridPenertiban.bandedGridView1.ClearColumnsFilter();
                gridPenertiban.teNamaKolom.Text = xSatu;
                gridPenertiban.teCari.Text = xDua;
                gridPenertiban.fieldDicari = xTiga;
            }
            else
                gridPenertiban.bandedGridView1.ClearColumnsFilter();
        }

        private void cariDataPenertiban_RPMK(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCariPenertiban = true;
            dataInisial = initModeCari;
            getInitPenertiban_RPMK();
        }
        #endregion Ambil Penertiban

        #region --++ Simpan Data Penertiban
        SvcWasdalPenertibanCud.OutputParameters dOutAmbilDataPenertiban;
        SvcWasdalPenertibanCud.execute_pttClient ambilDataPenertiban;

        private void simpanDataPenertiban_RPMK(string _mode)
        {

            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPenertibanCud.InputParameters parInp = new SvcWasdalPenertibanCud.InputParameters();
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = (konfigApp.idSatker == 0 ? false : true);
                parInp.P_ID_PENERTIBAN = ((_mode == "C" || _mode == "CU") ? null : formPenertibanUbah._idPenertiban);
                parInp.P_ID_PENERTIBANSpecified = (parInp.P_ID_PENERTIBAN != null) ? true : false;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_KET = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teKeterangan.Text : formPenertibanUbah.teKeterangan.Text);
                parInp.P_NUP = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teNup.Text : formPenertibanUbah.teNup.Text);
                parInp.P_KUASA_PENGGUNA_BRG = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.KuasaPenggunaBarang : formPenertibanUbah.KuasaPenggunaBarang);
                parInp.P_UR_SATKER = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.urSatker : formPenertibanUbah.urSatker);
                parInp.P_KET = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teKeterangan.Text : formPenertibanUbah.teKeterangan.Text);
                parInp.P_ID_ASET = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.idAset : formPenertibanUbah.idAset);
                parInp.P_ID_ASETSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_USER = ((_mode == "C" || _mode == "CU") ? konfigApp.idUser : konfigApp.idUser);
                parInp.P_NM_PENGGUNA = ((_mode == "C" || _mode == "CU") ? konfigApp.namaUser : konfigApp.namaUser);
                parInp.P_ID_USERSpecified = true;
                parInp.P_KD_BRG = ((_mode == "C" || _mode == "CU") ? konfigApp.kodebarang : konfigApp.kodebarang);
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_NOREG = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.noReg : formPenertibanUbah.noReg);
                parInp.P_NUP = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teNup.Text : formPenertibanUbah.teNup.Text);
                parInp.P_UR_SSKEL = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teUraianBarang.Text : formPenertibanUbah.teUraianBarang.Text);
                parInp.P_THN_ANG = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teThnAnggaran.Text : formPenertibanUbah.teThnAnggaran.Text);


                parInp.P_URAIAN_PENERTIBAN_LAIN = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teUraianPenertiban.Text : formPenertibanUbah.teUraianPenertiban.Text);
                parInp.P_BENTUK_PENERTIBAN = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.cbBentukPenertiban.Text : formPenertibanUbah.cbBentukPenertiban.Text);
                //parInp.P_UR_= ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.cbBentukPenertiban.Text : formPenertibanUbah.cbBentukPenertiban.Text);
                parInp.P_NO_SURAT_PENERTIBAN = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teDsrNoLap.Text : formPenertibanUbah.teDsrNoLap.Text);
                parInp.P_TGL_SURAT_PENERTIBAN = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teTglSrtPenertiban.EditValue : formPenertibanUbah.teTglSrtPenertiban.EditValue)));
                parInp.P_DASAR_PENERTIBAN = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.cbDsrPenertiban.Text : formPenertibanUbah.cbDsrPenertiban.Text);
                parInp.P_NO_LAPORAN = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.teNoSuratPenertiban.Text : formPenertibanUbah.teNoSuratPenertiban.Text);
                parInp.P_TGL_LAPORAN = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formPenertibanTambah.deDsrTglLap.EditValue : formPenertibanUbah.deDsrTglLap.EditValue)));
                parInp.P_TINDAK_LANJUT_HSL = ((_mode == "C" || _mode == "CU") ? formPenertibanTambah.cbUrBtkPenertiban.Text : formPenertibanUbah.cbUrBtkPenertiban.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPenertiban = new SvcWasdalPenertibanCud.execute_pttClient();
                ambilDataPenertiban.Beginexecute(parInp, new AsyncCallback(cudPenertiban_RPMK), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudPenertiban_RPMK(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPenertiban = ambilDataPenertiban.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsPenertiban_RPMK(this.ubahDsPenertiban_RPMK), dOutAmbilDataPenertiban);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsPenertiban_RPMK(SvcWasdalPenertibanCud.OutputParameters dataOutKpknlCrud);

        int _keBerapa = 0;

        private void ubahDsPenertiban_RPMK(SvcWasdalPenertibanCud.OutputParameters dataOutKpknlCrud)
        {
            if (dataOutKpknlCrud.PO_RESULT == "Y")  //disini masih N
            {
                int _indeksData = 0;
                SvcWasdalPenertibanSelect.WASDALSROW_WASDAL_PENERTIBAN dataPenyama = new SvcWasdalPenertibanSelect.WASDALSROW_WASDAL_PENERTIBAN();
                dataPenyama.ID_ASETSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.ID_PENERTIBANSpecified = true;
                dataPenyama.NUPSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SATKER = konfigApp.idSatker;
                        dataPenyama.KD_SATKER = konfigApp.kodeSatker;
                        dataPenyama.ID_USER = konfigApp.idUser;
                        dataPenyama.BENTUK_PENERTIBAN = formPenertibanTambah.cbBentukPenertiban.Text;
                        dataPenyama.KET = formPenertibanTambah.teKeterangan.Text;
                        dataPenyama.URAIAN_PENERTIBAN_LAIN = formPenertibanTambah.teUraianPenertiban.Text;
                        dataPenyama.KUASA_PENGGUNA_BRG = formPenertibanTambah.KuasaPenggunaBarang;
                        dataPenyama.NM_PENGGUNA = konfigApp.namaPengguna;
                        dataPenyama.NUM = (dsGridPenertiban == null ? 1 : dsGridPenertiban.Count + 1);
                        dataPenyama.UR_SATKER = formPenertibanTambah.urSatker;
                        dataPenyama.ID_ASET = formPenertibanTambah.idAset;
                        dataPenyama.ID_ASETSpecified = true;
                        dataPenyama.ID_PENERTIBAN = formPenertibanTambah._idPenertiban;
                        dataPenyama.ID_PENERTIBANSpecified = true;
                        dataPenyama.ID_SATKERSpecified = true;
                        dataPenyama.ID_USERSpecified = true;
                        dataPenyama.KD_BRG = formPenertibanTambah.teKodeBarang.Text;
                        dataPenyama.NOREG = formPenertibanTambah.noReg;
                        dataPenyama.NUMSpecified = true;
                        dataPenyama.NUP = Convert.ToDecimal(konfigApp.nup);
                        dataPenyama.NUPSpecified = true;
                        dataPenyama.TOTAL_DATA = (dsGridPenertiban == null ? 1 : dsGridPenertiban.Count + 1);
                        dataPenyama.TOTAL_DATASpecified = true;
                        dataPenyama.UR_SSKEL = formPenertibanTambah.teUraianBarang.Text;
                        dataPenyama.UR_SSKEL = formPenertibanTambah.teUraianPenertiban.Text;
                        dataPenyama.TINDAK_LANJUT_HSL = formPenertibanTambah.cbUrBtkPenertiban.Text;
                        dataPenyama.DASAR_PENERTIBAN = formPenertibanTambah.cbDsrPenertiban.Text;
                        dsGridPenertiban.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridPenertiban.dataTerpilih = dataPenyama;
                            _keBerapa = 1;
                            //formPenertibanTambah.gcDaftarAset.Enabled = true;
                            //formPenertibanTambah.sbTambah.Enabled = true;
                            //formPenertibanTambah.sbHapus.Enabled = true;
                            //formPenertibanTambah.rgJenisAset.Properties.ReadOnly = true;
                            //formPenertibanTambah.sbRefresh.Enabled = true;
                            //formPenertibanTambah.cePilihSemua.Enabled = true;
                            //formSkPspBmnTambah.statusForm = "CU";
                            formPenertibanTambah.sbSimpan.Enabled = true;
                            MessageBox.Show(konfigApp.teksSimpanData, "Berhasil");
                        }
                        else if (modeCrud == 'Z')
                        {
                            if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }
                            _indeksData = dsGridPenertiban.IndexOf(gridPenertiban.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridPenertiban.Remove(gridPenertiban.dataTerpilih);
                            dsGridPenertiban.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SATKER = konfigApp.idSatker;
                        dataPenyama.KD_SATKER = konfigApp.kodeSatker;
                        dataPenyama.ID_USER = konfigApp.idUser;
                        dataPenyama.BENTUK_PENERTIBAN = formPenertibanUbah.cbBentukPenertiban.Text; //udah di ubah
                        dataPenyama.KET = formPenertibanUbah.Keterangan;
                        dataPenyama.URAIAN_PENERTIBAN_LAIN = formPenertibanUbah.teUraianPenertiban.Text;
                        dataPenyama.KUASA_PENGGUNA_BRG = formPenertibanUbah.KuasaPenggunaBarang;
                        dataPenyama.NM_PENGGUNA = konfigApp.namaPengguna;
                        dataPenyama.NUM = (dsGridPenertiban == null ? 1 : dsGridPenertiban.Count + 1);
                        dataPenyama.UR_SATKER = formPenertibanUbah.urSatker;
                        dataPenyama.ID_ASET = formPenertibanUbah.idAset;
                        dataPenyama.ID_ASETSpecified = true;
                        dataPenyama.ID_PENERTIBAN = formPenertibanUbah._idPenertiban;
                        dataPenyama.ID_PENERTIBANSpecified = true;
                        dataPenyama.ID_SATKERSpecified = true;
                        dataPenyama.ID_USERSpecified = true;
                        dataPenyama.KD_BRG = formPenertibanUbah.teKodeBarang.Text;
                        dataPenyama.NOREG = formPenertibanUbah.noReg;
                        dataPenyama.NUMSpecified = true;
                        dataPenyama.NUP = Convert.ToDecimal(formPenertibanUbah.teNup.EditValue);
                        dataPenyama.NUPSpecified = true;
                        dataPenyama.TOTAL_DATA = (dsGridPenertiban == null ? 1 : dsGridPenertiban.Count + 1);
                        dataPenyama.TOTAL_DATASpecified = true;
                        dataPenyama.UR_SSKEL = formPenertibanUbah.teUraianBarang.Text;
                        dataPenyama.TINDAK_LANJUT_HSL = formPenertibanUbah.cbUrBtkPenertiban.Text;
                        dataPenyama.DASAR_PENERTIBAN = formPenertibanUbah.cbDsrPenertiban.Text;
                        _indeksData = dsGridPenertiban.IndexOf(gridPenertiban.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridPenertiban.Remove(gridPenertiban.dataTerpilih);
                        dsGridPenertiban.Insert(_indeksData, dataPenyama);
                        MessageBox.Show(konfigApp.teksUbahData, "Berhasil");
                        break;
                    case "D":
                        dsGridPenertiban.Remove(gridPenertiban.dataTerpilih);
                        break;
                }
                gridPenertiban.dsDataSource = dsGridPenertiban;
                gridPenertiban.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain + "\r\n" + dataOutKpknlCrud.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }
        #endregion Simpan Data Penertiban

        #endregion PENERTIBAN BMN

        #region LAP MON WASDAL
        int statusMonLapWasdal = 0;
        /* 0 - grid monitoring wasdal
         * 1 - grid monitoring wasdal sanksi
         * 2 - grid monitoring wasdal catatan
         */


        #region SET TOMBOL
        private void setTombolMONLAPWASDALGrid()
        {
            bbiPenertibanTambah.Enabled = true;
            bbiPenertibanUbah.Enabled = true;
            bbiPenertibanHapus.Enabled = true;
            bbiPenertibanDetail.Enabled = true;
            bbiPenertibanKembali.Enabled = false;
            bbiPenertibanRefresh.Enabled = true;
            bbiPenertibanMoreData.Enabled = false;
            barButtonItem10.Enabled = true;
        }

        private void setTombolMONLAPWASDALForm()
        {
            bbiPenertibanTambah.Enabled = false;
            bbiPenertibanUbah.Enabled = false;
            bbiPenertibanHapus.Enabled = false;
            bbiPenertibanDetail.Enabled = false;
            bbiPenertibanKembali.Enabled = true;
            bbiPenertibanRefresh.Enabled = false;
            bbiPenertibanMoreData.Enabled = false;
            barButtonItem10.Enabled = false;
        }

        private bool modeCariMONLAPWASDAL = false;
        #endregion

        KSK.WL.MONLAPWASDAL.ucMONLAPWASDALGrid gridMONLAPWASDAL;
        KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew formMONLAPWASDALTambah;
        KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew formMONLAPWASDALUbah;
        KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew formMONLAPWASDALDetail;
        private ArrayList dsGridMONLAPWASDAL;
        SvcLapMonWasdalSelect.OutputParameters dOutMONLAPWASDAL;
        SvcLapMonWasdalSelect.execute_pttClient ambilMONLAPWASDAL;
        KSK.WL.MONLAPWASDAL.xrMonLapWasdal1 xrmonLapWasdal;
        private void setEventTombolMONLAPWASDAL_RPMK()
        {
            resetEventTombolPenertiban();
            bbiPenertibanTambah.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALTambahKlik_RPMK);
            bbiPenertibanUbah.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALUbahKlik_RPMK);
            bbiPenertibanHapus.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALHapusKlik_RPMK);
            bbiPenertibanDetail.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALDetailKlik_RPMK);
            bbiPenertibanKembali.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALKembaliKlik_RPMK);
            bbiPenertibanRefresh.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALRefreshKlik_RPMK);
            barButtonItem10.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALPRINT_ItemClick);
            bbiPenertibanMoreData.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALMoreDataKlik_RPMK);
            bbiPenertibanKeluar.ItemClick += new ItemClickEventHandler(bbiMONLAPWASDALKeluarKlik_RPMK);
         
            BbiPenertibanExcel.Visibility = BarItemVisibility.Never;
            barButtonItem10.Visibility = BarItemVisibility.Always;
            
        }

        private void initGridMONLAPWASDAL_RPMK()
        {
            statusMonLapWasdal = 0;
            if (gridMONLAPWASDAL == null)
            {
                gridMONLAPWASDAL = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataMONLAPWASDAL_RPMK),
                    detailDataGrid = new DetailDataGrid(bbiMONLAPWASDALUbahKlik_RPMK),
                    detailSanksi = new DetailDataSanksi(initMonLapWasdalSanksiGrid),
                    detailCatatan = new DetailDataCatatan(initLaporanWasdalCatatan),
                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    aktifkanForm =  new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALGrid.AktifkanForm(this.aktifkanForm)
                    
                };
            }
            setTombolMONLAPWASDALGrid();
            setEventTombolMONLAPWASDAL_RPMK();
            barButtonItem10.Visibility = BarItemVisibility.Never;
            setPanel(gridMONLAPWASDAL);
        }

        #region --++ Tombol Ribbon
        private void bbiMONLAPWASDALTambahKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

            if (formMONLAPWASDALTambah == null)
            {
                formMONLAPWASDALTambah = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew("C")
                {
                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    simpanDataMONLAPWASDAL = new SimpanDataMonLapWasdal(simpanDataMONLAPWASDAL_RPMK),
                    aktifkanForm = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew.AktifkanForm(this.aktifkanForm),
                };
            }
            formMONLAPWASDALTambah.statusForm = "C";
            formMONLAPWASDALTambah.inisialisasiForm();
            setPanel(formMONLAPWASDALTambah);
            setTombolMONLAPWASDALForm();

        }

        private void bbiMONLAPWASDALUbahKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridMONLAPWASDAL.dataTerpilih != null)
            {
                if (formMONLAPWASDALUbah == null)
                {
                    formMONLAPWASDALUbah = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataMONLAPWASDAL = new SimpanDataMonLapWasdal(simpanDataMONLAPWASDAL_RPMK),
                        aktifkanForm = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew.AktifkanForm(this.aktifkanForm),
                    };
                }
                formMONLAPWASDALUbah.statusForm = "U";
                formMONLAPWASDALUbah.dataTerpilih = gridMONLAPWASDAL.dataTerpilih;
                formMONLAPWASDALUbah._idMONLAPWASDAL = gridMONLAPWASDAL.dataTerpilih.ID_MON_LAP;
                setPanel(formMONLAPWASDALUbah);
                formMONLAPWASDALUbah.inisialisasiForm();
                setTombolMONLAPWASDALForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiMONLAPWASDALHapusKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridMONLAPWASDAL.dataTerpilih != null)
            {
                //if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusMONLAPWASDAL, gridMONLAPWASDAL.dataTerpilih.), konfigApp.judulKonfirmasi,
                //MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                if (MessageBox.Show(String.Format(konfigApp.teksKonfHapusMonLapWasdal, gridMONLAPWASDAL.dataTerpilih.NO_SURAT), konfigApp.judulKonfirmasi,
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        myThread = new Thread(new ThreadStart(ShowProgresBar));
                        myThread.Start();
                        SvcLapMonWasdalCud.InputParameters parInp = new SvcLapMonWasdalCud.InputParameters();
                        parInp.P_ID_MON_LAP = gridMONLAPWASDAL.dataTerpilih.ID_MON_LAP;
                        parInp.P_ID_MON_LAPSpecified = true;
                        parInp.P_ID_SATKER = konfigApp.idSatker;
                        parInp.P_ID_SATKERSpecified = (konfigApp.idSatker == 0 ? false : true);
                        parInp.P_KD_SATKER = konfigApp.kodeSatker;
                        parInp.P_UR_SATKER = konfigApp.namaSatker;

                        parInp.P_SELECT = "D";
                        modeCrudUpload = "D";
                        ambilDataMONLAPWASDAL = new SvcLapMonWasdalCud.execute_pttClient();
                        ambilDataMONLAPWASDAL.Open();
                        ambilDataMONLAPWASDAL.Beginexecute(parInp, new AsyncCallback(cudMONLAPWASDAL_RPMK), "");
                    }
                    catch
                    {
                        this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                        this.Invoke(new AktifkanForm(aktifkanForm), "");
                        MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
                    }
                }
            }
        }

        private void bbiMONLAPWASDALDetailKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridMONLAPWASDAL.dataTerpilih != null)
            {
                if (formMONLAPWASDALDetail == null)
                {
                    formMONLAPWASDALDetail = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew("A");
                    formMONLAPWASDALDetail.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
                    formMONLAPWASDALDetail.aktifkanForm = new KSK.WL.MONLAPWASDAL.ucMONLAPWASDALFormNew.AktifkanForm(this.aktifkanForm);
                }
                formMONLAPWASDALDetail.statusForm = "A";
                formMONLAPWASDALDetail.dataTerpilih = gridMONLAPWASDAL.dataTerpilih;
                setPanel(formMONLAPWASDALDetail);
                formMONLAPWASDALDetail.inisialisasiForm();
                setTombolMONLAPWASDALForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void bbiMONLAPWASDALKembaliKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPanel(gridMONLAPWASDAL);
            setTombolMONLAPWASDALGrid();
            gridMONLAPWASDAL.dsDataSource = dsGridMONLAPWASDAL;
            gridMONLAPWASDAL.displayData();
        }

        private void bbiMONLAPWASDALRefreshKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (statusMonLapWasdal == 0) // grid pemantauan laporan wasdal
            {
                strCari = "";
                modeCari = false;
                gridMONLAPWASDAL.teNamaKolom.Text = "";
                gridMONLAPWASDAL.teCari.Text = "";
                gridMONLAPWASDAL.fieldDicari = "";
                gridMONLAPWASDAL.dataInisial = true;
                this.dataInisial = true;
                this.getInitMONLAPWASDAL_RPMK();
            }
            else if (statusMonLapWasdal == 1) // grid laporan wasdal sanksi
            {
                 this.dataInisial = true;
                 this.GetDataSanksi("");
            }
            else if (statusMonLapWasdal == 2) // grid laporan wasdal catatan
            {
                this.dataInisial = true;
                this.GetDataCatatan("");
            }
           
        }

        private void bbiMONLAPWASDALMoreDataKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (statusMonLapWasdal == 0) // grid pemantauan laporan wasdal
            {
                if (this.masihAdaData == true)
                {
                    this.dataInisial = false;
                    this.getInitMONLAPWASDAL_RPMK();
                }
            }
            else if (statusMonLapWasdal == 1) // grid laporan wasdal sanksi
            {
                if (this.moreSanksi == true)
                {
                    this.dataInisial = false;
                    this.GetDataSanksi("");
                }
            }
            else if (statusMonLapWasdal == 2) // grid laporan wasdal catatan
            {
                if (this.moreCatatan == true)
                {
                    this.dataInisial = false;
                    this.GetDataCatatan("");
                }
            }
        }

        private void bbiMONLAPWASDALKeluarKlik_RPMK(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void bbiMONLAPWASDALPRINT_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            puParameterLaporan puParam = new puParameterLaporan();
            puParam.ShowDialog();
            tahunAnggaran = puParam.thnAng;
            this._closeMode = puParam._closeMode;
            if (this._closeMode == "Y")
            {

                if (activeMenu == "LW")
                {
                    if (pernahUpdateMONLAPWASDAL())
                    {
                        DialogResult dialogResult = MessageBox.Show("Data sudah tersedia di komputer lokal. Apakah Anda ingin mengambil Data terbaru dari Server?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (dialogResult == DialogResult.Yes)
                        {
                            getInitMonLapWasdal();
                        }
                        else if (dialogResult == DialogResult.No)
                        {
                            this.dataLokalMonLapWasdalAda(); //data lokal
                        }
                    }
                    else
                    {
                        getInitMonLapWasdal(); //ambil data lagi dari server
                    }
                }
                else
                {
                    // Mencetak Laporan Wasdal
                    //getInitLaporanWasdalRpt();
                    getInitMonLapWasdal();
                }

            }
        }

        #region Init Lap Data Monitoring Lap Wasdal

        #region Cek Data Lokal
        private bool pernahUpdateMONLAPWASDAL()
        {
            SqlConnection connection = null;
            bool pernahApdet = false;
            DataTable dtData = new DataTable();
            using (connection = new SqlConnection(koneksiSqlServer))
            {
                connection.Open();
                SqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT * FROM RPT_MON_LAP_WASDAL";
                SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                dataAdapter.Fill(dtData);
                if (dtData.Rows.Count > 0)
                    pernahApdet = true;
            }
            return pernahApdet;
        }
        #endregion cek data lokal

        #region Get Data Lokal
        private void dataLokalMonLapWasdalAda()
        {
            ReportPrintTool pt;
            try
            {
                DataTable dtMonLapWasdal = new DataTable();
                xrmonLapWasdal = null;
                if (xrmonLapWasdal == null)
                    xrmonLapWasdal = new KSK.WL.MONLAPWASDAL.xrMonLapWasdal1();
                using (connection = new SqlConnection(koneksiSqlServer))
                {
                    connection.Open();
                    SqlCommand cmd = connection.CreateCommand();
                    cmd.CommandText = "SELECT NUM,ID_MON_LAP,ID_SATKER,KD_SATKER,UR_SATKER,ID_KL ,KD_KL,UR_KL,ID_KPKNL,KD_KPKNL,UR_KPKNL,ID_KANWIL,KD_KANWIL, UR_KANWIL, TGL_REKAM,THN_ANG, NO_SURAT,TGL_SURAT,STATUS_KIRIM,TGL_KIRIM,TGL_DITERIMA,IS_TEPAT_WAKTU,JML_SANKSI,JML_CAT,TOTAL_DATA FROM RPT_MON_LAP_WASDAL";
                    SqlDataAdapter dataAdapter = new SqlDataAdapter(cmd);
                    dataAdapter.Fill(dtMonLapWasdal);

                    DataTable DTMonLapWasdal = new DataTable("DTMonLapWasdal");
                    DTMonLapWasdal.Columns.Add("NUM", typeof(string));
                    DTMonLapWasdal.Columns.Add("ID_MON_LAP", typeof(string));
                    DTMonLapWasdal.Columns.Add("ID_SATKER", typeof(string));
                    DTMonLapWasdal.Columns.Add("KD_SATKER", typeof(string));
                    DTMonLapWasdal.Columns.Add("UR_SATKER", typeof(string));//4
                    DTMonLapWasdal.Columns.Add("ID_KL", typeof(string));
                    DTMonLapWasdal.Columns.Add("KD_KL", typeof(string));
                    DTMonLapWasdal.Columns.Add("UR_KL", typeof(string));
                    DTMonLapWasdal.Columns.Add("ID_KPKNL", typeof(string));
                    DTMonLapWasdal.Columns.Add("KD_KPKNL", typeof(string));
                    DTMonLapWasdal.Columns.Add("UR_KPKNL", typeof(string));//10
                    DTMonLapWasdal.Columns.Add("ID_KANWIL", typeof(string));
                    DTMonLapWasdal.Columns.Add("KD_KANWIL", typeof(string));
                    DTMonLapWasdal.Columns.Add("UR_KANWIL", typeof(string));
                    DTMonLapWasdal.Columns.Add("TGL_REKAM", typeof(string));//14
                    DTMonLapWasdal.Columns.Add("THN_ANG", typeof(string));
                    DTMonLapWasdal.Columns.Add("NO_SURAT", typeof(string));
                    DTMonLapWasdal.Columns.Add("TGL_SURAT", typeof(string));//17
                    DTMonLapWasdal.Columns.Add("STATUS_KIRIM", typeof(string));
                    DTMonLapWasdal.Columns.Add("TGL_KIRIM", typeof(string));//19
                    DTMonLapWasdal.Columns.Add("TGL_DITERIMA", typeof(string));//20
                    DTMonLapWasdal.Columns.Add("IS_TEPAT_WAKTU", typeof(string));
                    DTMonLapWasdal.Columns.Add("JML_SANKSI", typeof(string));//22
                    DTMonLapWasdal.Columns.Add("JML_CAT", typeof(string));//23
                    DTMonLapWasdal.Columns.Add("TOTAL_DATA", typeof(string));//24
                   
                    if (dtMonLapWasdal.Rows.Count > 0)
                    {
                        int _no = 1;
                        foreach (DataRow dr in dtMonLapWasdal.Rows)
                        {
                            string tglRekam = (Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[14]).Date.ToString("dd/MM/yyyy");
                            string tglSrt = (Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[17]).Date.ToString("dd/MM/yyyy");
                            string tglKirim = (Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[19]).Date.ToString("dd/MM/yyyy");
                            string tglDiterima = (Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "11/11/2000" || Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "11/11/2011" || Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "11/11/1111" || Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "11/11/1000" || Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "1/1/0001" || Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy") == "01/01/0001") ? "-" : Convert.ToDateTime(dr[20]).Date.ToString("dd/MM/yyyy");
                            decimal jmlSanksi = Convert.ToDecimal(dr[22]);
                            decimal jmlCat = Convert.ToDecimal(dr[23]);
                            decimal jmlTotData = Convert.ToDecimal(dr[24]);
                            DTMonLapWasdal.Rows.Add(Convert.ToString(dr[0]), Convert.ToString(dr[1]), Convert.ToString(dr[2]), Convert.ToString(dr[3]), Convert.ToString(dr[4]), Convert.ToString(dr[5]), Convert.ToString(dr[6]), Convert.ToString(dr[7]), Convert.ToString(dr[8]), Convert.ToString(dr[9]), Convert.ToString(dr[10]), Convert.ToString(dr[11]), Convert.ToString(dr[12]), Convert.ToString(dr[13]), tglRekam, Convert.ToString(dr[15]), Convert.ToString(dr[16]), tglSrt, Convert.ToString(dr[18]), tglKirim, tglDiterima, Convert.ToString(dr[21]),jmlSanksi.ToString("n0"),jmlCat.ToString("n0"),jmlTotData.ToString("n0"));
                            _no++;
                        }
                        xrmonLapWasdal.DataSource = DTMonLapWasdal;
                        xrmonLapWasdal.DataMember = "DTMonLapWasdal";
                    }
                }
            }
            catch
            {
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulKonfirmasi);
            }
            finally
            {
                connection.Close();
            }



            //konfigApp.setTahunAnggaran();
            Parameter param = new Parameter();
            param.Name = "tahunAnggaran";
            param.Type = typeof(System.String);
            param.Value = tahunAnggaran;
            param.Description = "";
            param.Visible = false;
            pt = new ReportPrintTool(xrmonLapWasdal);
            pt.AutoShowParametersPanel = false;
            pt.PrintingSystem.Document.AutoFitToPagesWidth = 1;
            pt.ShowPreviewDialog();

        }
        #endregion Get Data Lokal

        #region Get Data From Server
        SvcGnrtLapMonWasdal.execute_pttClient ambilGnrtMonLapWasdal;
        SvcGnrtLapMonWasdal.OutputParameters outputGnrtMonLapWasdal;
        private void getInitMonLapWasdal()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGnrtLapMonWasdal.InputParameters parInp = new SvcGnrtLapMonWasdal.InputParameters();
                parInp.P_COL = "";
                parInp.P_MAX = 0;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = 0;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "N";
                //parInp.STR_WHERE = String.Format("ID_USER = {0} AND THN_ANG='{1}' {2}", konfigApp.idUser, (konfigApp.tahunAnggaran - 1), this.strCari);  //ini diganti jadi gini
                parInp.STR_WHERE = String.Format("KD_SATKER LIKE '{0}%' AND THN_ANG='{1}' {2}", konfigApp.kodeSatker.Substring(0, 15), (tahunAnggaran), this.strCari);  //ini diganti jadi gini                
                ambilGnrtMonLapWasdal = new SvcGnrtLapMonWasdal.execute_pttClient();
                ambilGnrtMonLapWasdal.Open();
                ambilGnrtMonLapWasdal.Beginexecute(parInp, new AsyncCallback(getMonLapWasdal), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getMonLapWasdal(IAsyncResult result)
        {
            try
            {
                outputGnrtMonLapWasdal = ambilGnrtMonLapWasdal.Endexecute(result);    //dari sini langsung ke catch
                ambilGnrtMonLapWasdal.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsMonLapWasdal(dsMonLapWasdal), outputGnrtMonLapWasdal);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private delegate void DsMonLapWasdal(SvcGnrtLapMonWasdal.OutputParameters dataOut);

        private void dsMonLapWasdal(SvcGnrtLapMonWasdal.OutputParameters dataOut)
        {
            /*laporan untuk pengembangan*/
            ReportPrintTool pt;
            string namaFileDownload = String.Format("MonLapWasdal.zip");
            string lokasiDiFile = String.Format("{0}\\Penggunaan\\{1}", System.IO.Directory.GetCurrentDirectory(), namaFileDownload);
            string FolderFile = String.Format("{0}\\Penggunaan", System.IO.Directory.GetCurrentDirectory());
            if (Directory.Exists(FolderFile))
            {
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
            else
            {
                Directory.CreateDirectory(FolderFile);
                System.IO.File.WriteAllBytes(lokasiDiFile, dataOut.PO_FILE_BLOB);
            }
           
            DataLokal dl = new DataLokal();
            dl.pilihLaporan("monLapWasdal");
            this.dataLokalMonLapWasdalAda();

            //xrPenertiban xrTertib = new xrPenertiban();
            //xrTertib.bsLapPenertiban.DataSource = DataLokal.dt;
           

            ////ReportPrintTool pt;
            ////xrPenertiban1 xrTertib = new xrPenertiban1();
            ////xrTertib.bsLapPenertiban.DataSource = dataOut.SF_ROW_WASDAL_PENERTIBAN;

            //konfigApp.setTahunAnggaran();
            //Parameter param = new Parameter();
            //param.Name = "tahunAnggaran";
            //param.Type = typeof(System.String);
            ////param.Value = konfigApp.tahunAnggaran-1;
            //param.Value = tahunAnggaran;
            //param.Description = "";
            //param.Visible = false;

            //xrTertib.Parameters.Add(param);

            //#region setting margin, paperkind
            //DevExpress.XtraPrinting.Preview.PrintPreviewFormEx form = new DevExpress.XtraPrinting.Preview.PrintPreviewFormEx();
            //xrTertib.PaperKind = System.Drawing.Printing.PaperKind.A4; //paperkind
            //xrTertib.Margins = new System.Drawing.Printing.Margins(75, 75, 75, 75); //margin
            //form.PrintingSystem = xrTertib.PrintingSystem;
            //xrTertib.CreateDocument();
            //form.PrintingSystem.ExecCommand(DevExpress.XtraPrinting.PrintingSystemCommand.Scale, new object[] { 1 }); //autofit
            //form.ShowDialog();
            //#endregion

            //fToggleProgressBar("stop");
        }
        #endregion Get Data From Server

        #endregion

        #endregion --++ Tombol Ribbon
      
        private void nbiLapMonWasdal_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
           mainLapMonWasdal();
        }

        private void mainLapMonWasdal()
        {
            konfigApp.strMenu = "Laporan Wasdal";
            konfigApp.strSubMenu = "Monitoring Laporan Wasdal";
            konfigApp.kdPelayanan = "";
            konfigApp.namaPelayanan = "";
            this.Enabled = false;
            this.inisialisasiForm();
            rpPenertibanBMN.Visible = true;
            ribbon.SelectedPage = rpPenertibanBMN;
            rpgPenertibanBMN.Text = this.subMenuLapWasdal;
            rpPenertibanBMN.Text = this.subMenuLapWasdal;
            initGridMONLAPWASDAL_RPMK();
            modeCariMONLAPWASDAL = false;
            gridMONLAPWASDAL.teNamaKolom.Text = "";
            gridMONLAPWASDAL.teCari.Text = "";
            gridMONLAPWASDAL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitMONLAPWASDAL_RPMK();
            activeMenu = "LW";
        }

        #region --++ Ambil Data MONLAPWASDAL
        private void getInitMONLAPWASDAL_RPMK()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapMonWasdalSelect.InputParameters parInp = new SvcLapMonWasdalSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} {1}", konfigApp.idSatker, this.strCari);  //ini diganti jadi gini
                ambilMONLAPWASDAL = new SvcLapMonWasdalSelect.execute_pttClient();
                ambilMONLAPWASDAL.Open();
                ambilMONLAPWASDAL.Beginexecute(parInp, new AsyncCallback(getMONLAPWASDAL_RPMK), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getMONLAPWASDAL_RPMK(IAsyncResult result)
        {
            try
            {
                dOutMONLAPWASDAL = ambilMONLAPWASDAL.Endexecute(result);    //dari sini langsung ke catch
                ambilMONLAPWASDAL.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsMONLAPWASDAL_RPMK(dsMONLAPWASDAL_RPMK), dOutMONLAPWASDAL);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);   //disini
            }
        }

        private delegate void DsMONLAPWASDAL_RPMK(SvcLapMonWasdalSelect.OutputParameters dataOut);

        private void dsMONLAPWASDAL_RPMK(SvcLapMonWasdalSelect.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_MON_LAP_WASDAL.Count();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiPenertibanMoreData.Enabled = true;
            }
            else
            {
                this.masihAdaData = false;
                bbiPenertibanMoreData.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridMONLAPWASDAL = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                //dataOut.SF_ROW_WASDAL_PENERTIBAN[i] = (dataOut.SF_ROW_WASDAL_PENERTIBAN[i] == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridMONLAPWASDAL.Add(dataOut.SF_MON_LAP_WASDAL[i]);
            }
           

            gridMONLAPWASDAL.sbCariOnline.Enabled = !modeCari;
            gridMONLAPWASDAL.dsDataSource = dsGridMONLAPWASDAL;
            gridMONLAPWASDAL.displayData();
            if (modeCariMONLAPWASDAL == true)
            {
                string xSatu = gridMONLAPWASDAL.teNamaKolom.Text.Trim();
                string xDua = gridMONLAPWASDAL.teCari.Text.Trim();
                string xTiga = gridMONLAPWASDAL.fieldDicari;
                gridMONLAPWASDAL.gvGridMONLAPWASDAL.ClearColumnsFilter();
                gridMONLAPWASDAL.teNamaKolom.Text = xSatu;
                gridMONLAPWASDAL.teCari.Text = xDua;
                gridMONLAPWASDAL.fieldDicari = xTiga;
            }
            else
                gridMONLAPWASDAL.gvGridMONLAPWASDAL.ClearColumnsFilter();
        }

        private void cariDataMONLAPWASDAL_RPMK(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCariMONLAPWASDAL = true;
            dataInisial = initModeCari;
            getInitMONLAPWASDAL_RPMK();
        }
        #endregion Ambil Mon laporan wasdal

        #region --++ Simpan Data MON LAP WASDAL
        SvcLapMonWasdalCud.OutputParameters dOutAmbilDataMONLAPWASDAL;
        SvcLapMonWasdalCud.execute_pttClient ambilDataMONLAPWASDAL;
        decimal? ID_MONLAP = 0;
        string modeCrudUpload = "";
        decimal? ID_MONLAP_UPLOAD = 0;

        private void simpanDataMONLAPWASDAL_RPMK(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapMonWasdalCud.InputParameters parInp = new SvcLapMonWasdalCud.InputParameters();
                parInp.P_ID_SATKER = konfigApp.idSatker;
                parInp.P_ID_SATKERSpecified = (konfigApp.idSatker == 0 ? false : true);
                parInp.P_KD_SATKER = konfigApp.kodeSatker;
                parInp.P_UR_SATKER = konfigApp.namaSatker;
                
                // Get Tahun dari tanggal kirimg 
                // untuk digunakan sebagai batas tanggal pengiriman
                DateTime tglBatasKirim = new DateTime();
                switch (_mode)
                {
                    case "C":
                    case "S":
                        tglBatasKirim = new DateTime(formMONLAPWASDALTambah.deTanggalKirim.DateTime.Year, 3, 31);
                        break;
                    case "UK":
                        if (formMONLAPWASDALTambah != null)
                        {
                            tglBatasKirim = new DateTime(formMONLAPWASDALTambah.deTanggalKirim.DateTime.Year, 3, 31);
                        }
                        else
                        {
                            tglBatasKirim = new DateTime(formMONLAPWASDALUbah.deTanggalKirim.DateTime.Year, 3, 31);
                        }
                        break;
                    default:
                        break;
                }


                // Simpan dan Kirim
                if (_mode == "C")
                {
                    parInp.P_ID_MON_LAP = konfigApp.getGlobalId("ID_MON_LAP");
                    ID_MONLAP_UPLOAD = parInp.P_ID_MON_LAP;
                    parInp.P_ID_MON_LAPSpecified = true;
                    parInp.P_NO_SURAT = formMONLAPWASDALTambah.teNomor.Text;
                    parInp.P_TGL_SURAT = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggal.DateTime);
                    parInp.P_THN_ANG = formMONLAPWASDALTambah.teThnAng.Text;
                    parInp.P_STATUS_KIRIM = "N";
                    parInp.P_TGL_KIRIM = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggalKirim.DateTime);

                    int checkTepatWaktu = formMONLAPWASDALTambah.deTanggalKirim.DateTime.CompareTo(tglBatasKirim);
                    parInp.P_IS_TEPAT_WAKTU = (checkTepatWaktu < 1) ? "Y" : "N";
                    
                }else if(_mode == "S") // Simpan tidak dikirim
                {
                    parInp.P_ID_MON_LAP = konfigApp.getGlobalId("ID_MON_LAP");
                    ID_MONLAP_UPLOAD = parInp.P_ID_MON_LAP;
                    parInp.P_ID_MON_LAPSpecified = true;
                    parInp.P_NO_SURAT = formMONLAPWASDALTambah.teNomor.Text;
                    parInp.P_TGL_SURAT = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggal.DateTime);
                    parInp.P_THN_ANG = formMONLAPWASDALTambah.teThnAng.Text;
                    parInp.P_STATUS_KIRIM = "N";
                    parInp.P_TGL_KIRIM = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggalKirim.DateTime);
                    int checkTepatWaktu = formMONLAPWASDALTambah.deTanggalKirim.DateTime.CompareTo(tglBatasKirim);
                    parInp.P_IS_TEPAT_WAKTU = (checkTepatWaktu < 1) ? "Y" : "N";
                }
                else // Update : UK = Update Kirim
                {
                    if (formMONLAPWASDALUbah == null)
                    {
                        parInp.P_ID_MON_LAP = formMONLAPWASDALTambah._idMONLAPWASDAL;
                        ID_MONLAP = parInp.P_ID_MON_LAP;
                        parInp.P_ID_MON_LAPSpecified = true;
                        parInp.P_NO_SURAT = formMONLAPWASDALTambah.teNomor.Text;
                        parInp.P_TGL_SURAT = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggal.DateTime);
                        parInp.P_THN_ANG = formMONLAPWASDALTambah.teThnAng.Text;
                        parInp.P_TGL_KIRIM = konfigApp.DateToString(formMONLAPWASDALTambah.deTanggalKirim.DateTime);
                        int checkTepatWaktu = formMONLAPWASDALTambah.deTanggalKirim.DateTime.CompareTo(tglBatasKirim);
                        parInp.P_IS_TEPAT_WAKTU = (checkTepatWaktu < 1) ? "Y" : "N";
                    }
                    else
                    {
                        parInp.P_ID_MON_LAP = formMONLAPWASDALUbah._idMONLAPWASDAL;
                        ID_MONLAP = parInp.P_ID_MON_LAP;
                        parInp.P_ID_MON_LAPSpecified = true;
                        parInp.P_NO_SURAT = formMONLAPWASDALUbah.teNomor.Text;
                        parInp.P_TGL_SURAT = konfigApp.DateToString(formMONLAPWASDALUbah.deTanggal.DateTime);
                        parInp.P_THN_ANG = formMONLAPWASDALUbah.teThnAng.Text;
                        parInp.P_TGL_KIRIM = konfigApp.DateToString(formMONLAPWASDALUbah.deTanggalKirim.DateTime);
                        parInp.P_TGL_DITERIMA = formMONLAPWASDALUbah.dataTerpilih.TGL_DITERIMA.ToString();
                        int checkTepatWaktu = formMONLAPWASDALUbah.deTanggalKirim.DateTime.CompareTo(tglBatasKirim);
                        parInp.P_IS_TEPAT_WAKTU = (checkTepatWaktu < 1) ? "Y" : "N";
                    }

                    parInp.P_STATUS_KIRIM = (_mode == "UK") ? "Y" : "N";
                }

                parInp.P_IS_TEPAT_WAKTU = "N";
                parInp.P_TGL_DITERIMA = konfigApp.DateToString(new DateTime(1000,11,11));

               
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                 
                parInp.P_SELECT = _mode;
                modeCrud = (_mode == "CU" ? 'Z' : 'U');
                modeCrudUpload = _mode;
                ambilDataMONLAPWASDAL = new SvcLapMonWasdalCud.execute_pttClient();
                ambilDataMONLAPWASDAL.Beginexecute(parInp, new AsyncCallback(cudMONLAPWASDAL_RPMK), "");
            }
            catch(Exception ex)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan+":"+ex.Message, konfigApp.judulGagalSimpan);
            }
        }

        private void cudMONLAPWASDAL_RPMK(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataMONLAPWASDAL = ambilDataMONLAPWASDAL.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsMONLAPWASDAL_RPMK(this.ubahDsMONLAPWASDAL_RPMK), dOutAmbilDataMONLAPWASDAL);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrudUpload == "C") || (this.modeCrudUpload == "U") || (this.modeCrudUpload == "Z") || (this.modeCrudUpload == "UK"))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrudUpload == "D")
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsMONLAPWASDAL_RPMK(SvcLapMonWasdalCud.OutputParameters dataOutKpknlCrud);
        //int _keBerapa = 0;
        private void ubahDsMONLAPWASDAL_RPMK(SvcLapMonWasdalCud.OutputParameters dataOutKpknlCrud)
        {
            if (dataOutKpknlCrud.PO_RESULT == "Y")  //disini masih N
            {
                #region masih belum bisa karena data form dan data view di grid beda
                //int _indeksData = 0;
                //SvcLapMonWasdalSelect.WASDALSROW_MON_LAP_WASDAL dataPenyama = new SvcLapMonWasdalSelect.WASDALSROW_MON_LAP_WASDAL();
                //dataPenyama.ID_KANWIL = konfigApp.idKanwil;
                //dataPenyama.ID_KANWILSpecified = true;
                //dataPenyama.ID_KL = konfigApp.idKl;
                //dataPenyama.ID_KLSpecified = true;
                //dataPenyama.ID_KPKNL = konfigApp.idKpknl;
                //dataPenyama.ID_KPKNLSpecified = true;
                //dataPenyama.TOTAL_DATASpecified = true;
                //switch (modeCrud.ToString())
                //{
                //    case "C":
                //    case "Z":
                //        dataPenyama.ID_SATKER = konfigApp.idSatker;
                //        dataPenyama.KD_SATKER = konfigApp.kodeSatker;
                //        dataPenyama.ID_MON_LAP = ID_MONLAP;
                //        dataPenyama.ID_SATKER = konfigApp.idSatker;
                //        dataPenyama.IS_TEPAT_WAKTU = null;
                //        dataPenyama.JML_SANKSI = null;
                //        dataPenyama.JML_SANKSISpecified = true;
                //        dataPenyama.KD_KANWIL = null;
                //        dataPenyama.KD_KL = konfigApp.kodeKl;
                //        dataPenyama.KD_KPKNL = konfigApp.kodeKpknl;
                //        dataPenyama.KD_SATKER = formMONLAPWASDALTambah.teKdSatker.Text;
                //        dataPenyama.NO_SURAT = formMONLAPWASDALTambah.teNomor.Text;
                //        dataPenyama.STATUS_KIRIM = null;
                //        dataPenyama.TGL_DITERIMA = null;
                //        dataPenyama.TGL_DITERIMASpecified = true;
                //        dataPenyama.TGL_KIRIM = null;
                //        dataPenyama.TGL_KIRIMSpecified = true;
                //        dataPenyama.TGL_REKAM = null;
                //        dataPenyama.TGL_REKAMSpecified = true;
                //        dataPenyama.TGL_SURAT = null;
                //        dataPenyama.TGL_SURATSpecified = true;
                //        dataPenyama.THN_ANG = formMONLAPWASDALTambah.teThnAng.Text;
                //        dataPenyama.UR_KANWIL = konfigApp.namaKanwil;
                //        dataPenyama.UR_KL = konfigApp.namaKl;
                //        dataPenyama.UR_KPKNL = konfigApp.namaKpknl;
                //        dataPenyama.UR_SATKER = formMONLAPWASDALTambah.teUrSatker.Text;
                //        //dataPenyama.UR_SSKEL = formMONLAPWASDALTambah.teUraianMONLAPWASDAL.Text;

                //        dsGridMONLAPWASDAL.Add(dataPenyama);
                //        if (modeCrud == 'C')
                //        {
                //            gridMONLAPWASDAL.dataTerpilih = dataPenyama;
                //            _keBerapa = 1;
                //            //formMONLAPWASDALTambah.gcDaftarAset.Enabled = true;
                //            //formMONLAPWASDALTambah.sbTambah.Enabled = true;
                //            //formMONLAPWASDALTambah.sbHapus.Enabled = true;
                //            //formMONLAPWASDALTambah.rgJenisAset.Properties.ReadOnly = true;
                //            //formMONLAPWASDALTambah.sbRefresh.Enabled = true;
                //            //formMONLAPWASDALTambah.cePilihSemua.Enabled = true;
                //            //formSkPspBmnTambah.statusForm = "CU";
                //            formMONLAPWASDALTambah.sbKirim.Enabled = true;
                //            MessageBox.Show(konfigApp.teksSimpanData, "Berhasil");
                //        }
                //        else if (modeCrud == 'Z')
                //        {
                //            if (_keBerapa == 1)
                //            {
                //                _keBerapa++;
                //                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                //            }
                //            else
                //            {
                //                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                //            }
                //            _indeksData = dsGridMONLAPWASDAL.IndexOf(gridMONLAPWASDAL.dataTerpilih);
                //            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                //            dsGridMONLAPWASDAL.Remove(gridMONLAPWASDAL.dataTerpilih);
                //            dsGridMONLAPWASDAL.Insert(_indeksData, dataPenyama);
                //        }
                //        break;
                //    case "U":
                //        dataPenyama.ID_SATKER = konfigApp.idSatker;
                //        dataPenyama.KD_SATKER = konfigApp.kodeSatker;
                        
                //        _indeksData = dsGridMONLAPWASDAL.IndexOf(gridMONLAPWASDAL.dataTerpilih);
                //        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                //        dsGridMONLAPWASDAL.Remove(gridMONLAPWASDAL.dataTerpilih);
                //        dsGridMONLAPWASDAL.Insert(_indeksData, dataPenyama);
                //        MessageBox.Show(konfigApp.teksUbahData, "Berhasil");
                //        break;
                //    case "D":
                //        dsGridMONLAPWASDAL.Remove(gridMONLAPWASDAL.dataTerpilih);
                //        break;
                //
#endregion
                //}
                if (modeCrudUpload == "D")
                {
                    MessageBox.Show(konfigApp.teksBerhasilHapus, konfigApp.judulsukses);
                    this.getInitMONLAPWASDAL_RPMK();
                    gridMONLAPWASDAL.dsDataSource = dsGridMONLAPWASDAL;
                    gridMONLAPWASDAL.displayData();
                }else{
                    MessageBox.Show(konfigApp.teksBerhasilSimpan, konfigApp.judulsukses);
                    if (modeCrudUpload == "C" || modeCrudUpload == "S")
                    {
                        formMONLAPWASDALTambah.dataTerpilih.ID_MON_LAP = ID_MONLAP_UPLOAD;
                        formMONLAPWASDALTambah.UploadFile();
                    }
                    else
                    {
                        if (formMONLAPWASDALUbah == null)
                        {
                            formMONLAPWASDALTambah.dataTerpilih.ID_MON_LAP = ID_MONLAP_UPLOAD;
                            formMONLAPWASDALTambah.UploadFile();
                        }
                        else
                        {
                            formMONLAPWASDALUbah.dataTerpilih.ID_MON_LAP = ID_MONLAP;
                            formMONLAPWASDALUbah.UploadFile();
                        }
                    }
                }
                

                #region mode crud old
                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
                //if(modeCrudUpload == "U" || modeCrudUpload == "UK")
                //{
                //    if (formMONLAPWASDALUbah.teNamaFile.Text != gridMONLAPWASDAL.dataTerpilih) ;
                //}
                #endregion
            }
            else MessageBox.Show(konfigApp.teksGagalLain + "\r\n" + dataOutKpknlCrud.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        SvcLapMonWasdalUploadFile.execute_pttClient dataClientUploadFile;
        SvcLapMonWasdalUploadFile.OutputParameters dataOutputUploadFile;

        private void UploadFile(string _mode) {

            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapMonWasdalUploadFile.InputParameters parInp = new SvcLapMonWasdalUploadFile.InputParameters();
                if (_mode == "C")
                {
                    parInp.P_ID_MON_LAP = "";
                    parInp.P_NM_FILE = formMONLAPWASDALTambah.teNamaFile.Text;
                    parInp.P_TGL_UPLOAD = DateTime.Now;
                    parInp.P_TGL_UPLOADSpecified = true;
                    parInp.P_FILE_DOK = konfigApp.convert2byte(formMONLAPWASDALTambah.lokasiFile);
                    parInp.P_SELECT = "C";

                }
                else
                {
                   
                }
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _mode;
                modeCrud = Convert.ToChar(_charSementara);
                dataClientUploadFile = new SvcLapMonWasdalUploadFile.execute_pttClient();
                dataClientUploadFile.Beginexecute(parInp, new AsyncCallback(cudMONLAPWASDAL_RPMK), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        
        }

        #endregion Simpan Data MONLAPWASDAL

        #region MONLAPWASDAL - SANKSI

        #region Grid Sanksi
        
        private void setTombolSanksiGrid()
        {
            bbiPenertibanTambah.Enabled = false;
            bbiPenertibanUbah.Enabled = false;
            bbiPenertibanHapus.Enabled = false;
            bbiPenertibanDetail.Enabled = false;
            bbiPenertibanKembali.Enabled = false;
            barButtonItem10.Enabled = false;
        }
        
        KSK.WL.MONLAPWASDAL.ucLapMonSatkerGridSanksi ucSanksiGrid;

        public void initMonLapWasdalSanksiGrid(string kode, string label)
        {   
            setTombolSanksiGrid();
            barButtonItem10.Visibility = BarItemVisibility.Never;
            kodeSanksi = kode;
            ucSanksiGrid = new KSK.WL.MONLAPWASDAL.ucLapMonSatkerGridSanksi(kode, label);
            ucSanksiGrid.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            ucSanksiGrid.back = new backLapMonSatker(this.mainLapMonWasdal);
            ucSanksiGrid.rowDataTerpilih = gridMONLAPWASDAL.dataTerpilih;
            dataInisial = true;
            GetDataSanksi("");
            setPanel(ucSanksiGrid);
        }

        #region --++ Load Data Sanksi Grid
        string kodeSanksi = "";
        SvcLapMonWasdalSanksiSelect.execute_pttClient client;
        SvcLapMonWasdalSanksiSelect.InputParameters input;
        SvcLapMonWasdalSanksiSelect.OutputParameters output;
      
        int maxDataSanksi = 0;
        ArrayList dataSanksi;
        bool moreSanksi = true;
        public void GetDataSanksi(string where)
        {
            this.Enabled = false;
           
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
               
                input = new SvcLapMonWasdalSanksiSelect.InputParameters();
                if (dataInisial)
                {
                    input.P_MIN = konfigApp.dataAwal;
                    input.P_MAX = konfigApp.dataAkhir;
                }
                else
                {
                    input.P_MIN = maxDataSanksi + 1;
                    input.P_MAX = maxDataSanksi + konfigApp.dataAkhir;
                }
                input.P_MINSpecified = true;
                input.P_MAXSpecified = true;
                input.P_COL = "";
                input.P_SORT = "";
                input.STR_WHERE = "ID_MON_LAP = " + kodeSanksi;

                client = new SvcLapMonWasdalSanksiSelect.execute_pttClient();
                client.Open();
                client.Beginexecute(input, new AsyncCallback(getResultSanksi), null);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
        
            }


        }

        private void getResultSanksi(IAsyncResult result)
        {
            try
            {
                output = client.Endexecute(result);
                client.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ShowDataSanksi(this.showDataGridSanksi), output);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
        
            }
        }

        private delegate void ShowDataSanksi(SvcLapMonWasdalSanksiSelect.OutputParameters output);

        private void showDataGridSanksi(SvcLapMonWasdalSanksiSelect.OutputParameters output)
        {
            try
            {
                int jmlData = output.SF_MON_LAP_WASDAL_SANKSI.Length;
                if (jmlData == konfigApp.dataAkhir)
                {
                    // set tombol more  = true  
                    bbiPenertibanMoreData.Enabled = true;
                    moreSanksi = true;
                }
                else
                {
                    // set tombol more false
                    bbiPenertibanMoreData.Enabled = false;
                    moreSanksi = false;
                }
                maxDataSanksi += jmlData;

                if (dataInisial)
                {
                    dataSanksi = new ArrayList();
                }

                dataSanksi.AddRange(output.SF_MON_LAP_WASDAL_SANKSI);
                ucSanksiGrid.bsPgnBrg.DataSource = dataSanksi;
                ucSanksiGrid.gcPgnBrg.RefreshDataSource();

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }

        }

        #endregion

        #endregion

        #region --++ Form Sanksi
        //KSK.WL.MONLAPWASDAL.ucLapMonSatkerCudSanksi ucSanksiForm;

        public void initMonLapWasdalSanksiForm()
        {
            setTombolMONLAPWASDALForm();


        }
        
        #endregion

        #endregion

        #region MONLAPWASDAL - CATATAN
        KSK.WL.MONLAPWASDAL.ucLapMonSatkerGridCatatan ucCatatanGrid;
        SvcLapMonWasdalCatatanSelect.execute_pttClient clientCatatan;
        SvcLapMonWasdalCatatanSelect.InputParameters inputCatatan;
        SvcLapMonWasdalCatatanSelect.OutputParameters outputCatatan;
      
        private void initLaporanWasdalCatatan(string kode, string label)
        {
            setTombolSanksiGrid();
            barButtonItem10.Visibility = BarItemVisibility.Never;
            kodeSanksi = kode;
            ucCatatanGrid = new KSK.WL.MONLAPWASDAL.ucLapMonSatkerGridCatatan(kode, label);
            ucCatatanGrid.toggleProgressBar = new ToggleProgressBar(fToggleProgressBar);
            ucCatatanGrid.back = new backLapMonSatker(this.mainLapMonWasdal);
            ucCatatanGrid.rowDataTerpilih = gridMONLAPWASDAL.dataTerpilih;
            dataInisial = true;
            GetDataCatatan("");
            setPanel(ucCatatanGrid);
        }


        #region Load Data Catatan
        int maxDataCatatan = 0;
        ArrayList dataCatatan;
        bool moreCatatan = true;
        public void GetDataCatatan(string where)
        {
            try
            {
                this.Enabled = false;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
               
                inputCatatan = new SvcLapMonWasdalCatatanSelect.InputParameters();
                if (dataInisial)
                {
                    inputCatatan.P_MIN = konfigApp.dataAwal;
                    inputCatatan.P_MAX = konfigApp.dataAkhir;
                }
                else
                {
                    inputCatatan.P_MIN = maxDataCatatan + 1;
                    input.P_MAX = maxDataCatatan + konfigApp.dataAkhir;
                }
                inputCatatan.P_MINSpecified = true;
                inputCatatan.P_MAXSpecified = true;
                inputCatatan.P_COL = "";
                inputCatatan.P_SORT = "";
                inputCatatan.STR_WHERE = "ID_MON_LAP = " + kodeSanksi;

                clientCatatan = new SvcLapMonWasdalCatatanSelect.execute_pttClient();
                clientCatatan.Open();
                clientCatatan.Beginexecute(inputCatatan, new AsyncCallback(getResultCatatan), null);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
        
            }


        }

        private void getResultCatatan(IAsyncResult result)
        {
            try
            {
                outputCatatan = clientCatatan.Endexecute(result);
                clientCatatan.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new ShowDataCatatan(this.ShowDataGridCatatan), outputCatatan);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
        
            }
        }

        private delegate void ShowDataCatatan(SvcLapMonWasdalCatatanSelect.OutputParameters output);

        private void ShowDataGridCatatan(SvcLapMonWasdalCatatanSelect.OutputParameters output)
        {
            try
            {
                int jmlData = output.SF_MON_LAP_WASDAL_CATATAN.Count();
                if (jmlData == konfigApp.dataAkhir)
                {
                    bbiPenertibanMoreData.Enabled = true;
                    moreCatatan = true;
                }
                else
                {
                    bbiPenertibanMoreData.Enabled = false;
                    moreSanksi = true;
                }
                maxDataCatatan += jmlData;

                if (dataInisial)
                {
                    dataCatatan = new ArrayList();
                }

                dataCatatan.AddRange(output.SF_MON_LAP_WASDAL_CATATAN);
                ucCatatanGrid.bsPgnBrg.DataSource = dataCatatan;
                ucCatatanGrid.gcPgnBrg.RefreshDataSource();

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
        
            }

        }

        
        #endregion

        #endregion

        #endregion  LAP MON WASDAL

        #endregion  LAPORAN PMK

        #region PEREKAMAN TINDAK LANJUT

        private void resetEventBtnTlWasdal()
        {
            konfigApp.RemoveClickEvent(this.bbiRkmTlTambah);
            konfigApp.RemoveClickEvent(this.bbiRkmTlEdit);
            konfigApp.RemoveClickEvent(this.bbiRkmTlHapus);
            konfigApp.RemoveClickEvent(this.bbiRkmTlRefresh);
            konfigApp.RemoveClickEvent(this.bbiRkmTlMore);
            konfigApp.RemoveClickEvent(this.bbiRkmTlDetail);
            konfigApp.RemoveClickEvent(this.bbiRkmTlKembaliGrid);
            konfigApp.RemoveClickEvent(this.bbiRkmTlTutup);
            konfigApp.RemoveClickEvent(this.bbiRskKembali);
        }

        public void setTombolRtlGrid()
        {
            bbiRkmTlTambah.Enabled = true;
            bbiRkmTlEdit.Enabled = true;
            bbiRkmTlHapus.Enabled = true;
            bbiRkmTlDetail.Enabled = true;
            bbiRkmTlMore.Enabled = true;
            bbiRkmTlRefresh.Enabled = true;
            bbiRkmTlKembaliGrid.Enabled = false;
            bbiRkmTlTutup.Enabled = true;
            bbiRkmTlKembali.Enabled = true;
        }

        public void setTombolRtlForm()
        {
            bbiRkmTlTambah.Enabled = false;
            bbiRkmTlEdit.Enabled = false;
            bbiRkmTlHapus.Enabled = false;
            bbiRkmTlDetail.Enabled = false;
            bbiRkmTlMore.Enabled = false;
            bbiRkmTlRefresh.Enabled = false;
            bbiRkmTlKembaliGrid.Enabled = true;
            bbiRkmTlTutup.Enabled = true;
            bbiRkmTlKembali.Enabled = true;
        }

        private void setGridRkmTlWasdal(string menu, string submenu)
        {
            konfigApp.strMenu = menu;
            konfigApp.strSubMenu = submenu;
            this.inisialisasiForm();
            this.rpRkmTindakLanjut.Text = konfigApp.strSubMenu;
            this.rpgRkmTindakLanjut.Text = konfigApp.strSubMenu;
            this.rpRkmTindakLanjut.Visible = true;
            this.ribbon.SelectedPage = this.rpRkmTindakLanjut;
            this.modeLoadData = "normal";
            this.strCari = "";
            this.dataInisial = true;
            this.adaData = false;
            this.masihAdaData = true;
        }

        //kembali ke dashboard
        private void bbiRkmTlKembali_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRkmTindakLanjut.Visible = false;
        }

        #region == PSPBMN

        KSK.TL.PSPBMN.ucRTLPspBmnGrid gridRTLPspBmn;
        KSK.TL.PSPBMN.ucRTLPspBmnForm formRTLPspBmnTambah;
        KSK.TL.PSPBMN.ucRTLPspBmnForm formRTLPspBmnUbah;
        KSK.TL.PSPBMN.ucRTLPspBmnForm formRTLPspDetail;
        private ArrayList dsGridRtlPspBmn;
        SvcWasdalPSPBMNSkSelect.OutputParameters dOutRtlPspBmn;
        SvcWasdalPSPBMNSkSelect.execute_pttClient ambilRtlPspBmn;

        private void nbiTLPSPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMN;
            konfigApp.kdPelayanan = "02";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPSPSBMN();
            bbiRkmTlTambah.Enabled = false;
            bbiRkmTlHapus.Enabled = false;
            modeCari = false;
            gridRTLPspBmn.teNamaKolom.Text = "";
            gridRTLPspBmn.teCari.Text = "";
            gridRTLPspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPspBmn();
        }
        private void setEventBtnTlPSPBMN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNMore);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNHapus);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNTutup);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNEdit);

        }
        
        public void initGridRkmTlPSPSBMN()
        {

            //if (gridRTLPspBmn == null)
            //{
                gridRTLPspBmn = new KSK.TL.PSPBMN.ucRTLPspBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPspBmn),
                    detailDataGrid = new DetailDataGrid(RkmTlPSPBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPSPBMN();
            setPanel(gridRTLPspBmn);
        }

        #region --++ Ambil Data PSP BMN
        private void getInitRkmTlPspBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNSkSelect.InputParameters parInp = new SvcWasdalPSPBMNSkSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2})) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                //parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND ID_USER = {1} {2}", konfigApp.kdPelayanan, konfigApp.idUser, this.strCari);
                ambilRtlPspBmn = new SvcWasdalPSPBMNSkSelect.execute_pttClient();
                ambilRtlPspBmn.Open();
                ambilRtlPspBmn.Beginexecute(parInp, new AsyncCallback(getRkmTlPspBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPspBmn(IAsyncResult result)
        {
            try
            {
                dOutRtlPspBmn = ambilRtlPspBmn.Endexecute(result);
                ambilRtlPspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPspBmn(dsRtlPspBmn), dOutRtlPspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPspBmn(SvcWasdalPSPBMNSkSelect.OutputParameters dataOut);

        private void dsRtlPspBmn(SvcWasdalPSPBMNSkSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlPspBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRtlPspBmn.Add(dataOut.SF_READ_WASDAL_PSP[i]);
            }

            gridRTLPspBmn.sbCariOnline.Enabled = !modeCari;
            gridRTLPspBmn.dsDataSource = dsGridRtlPspBmn;
            gridRTLPspBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPspBmn.teNamaKolom.Text.Trim();
                string xDua = gridRTLPspBmn.teCari.Text.Trim();
                string xTiga = gridRTLPspBmn.fieldDicari;
                gridRTLPspBmn.gvGridSk.ClearColumnsFilter();
                gridRTLPspBmn.teNamaKolom.Text = xSatu;
                gridRTLPspBmn.teCari.Text = xDua;
                gridRTLPspBmn.fieldDicari = xTiga;
            }
            else
                gridRTLPspBmn.gvGridSk.ClearColumnsFilter();

            gridRTLPspBmn.labelTotData.Text = "";
            gridRTLPspBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data PSP BMN
        //SvcWasdalPSPBMNCrud.OutputParameters dOutAmbilDataPspBmn;
        //SvcWasdalPSPBMNCrud.execute_pttClient ambilDataPspBmn;

        private void simpanDataRtlPspBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNCrud.InputParameters parInp = new SvcWasdalPSPBMNCrud.InputParameters();
                
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.idPemohon : formRTLPspBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.rgJenisAset.EditValue.ToString() : formRTLPspBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teJabatan.Text.Trim() : formRTLPspBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaInstansi.EditValue.ToString() : formRTLPspBmnUbah.teNamaInstansi.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.kodePenerbitSkDetail : formRTLPspBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formRTLPspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnTambah.teNilaiPenetapan.Text)) : (formRTLPspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNipPenandaTangan.Text : formRTLPspBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaPenandaTangan.Text : formRTLPspBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaInstansi.Text : formRTLPspBmnUbah.teNamaInstansi.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.namaPenerbitSkDetail : formRTLPspBmnUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNomorSk.Text.Trim() : formRTLPspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = konfigApp.DateToString(DateTime.Now);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teTanggalSk.EditValue : formRTLPspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teJenisPemohon.Text : formRTLPspBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teUraianKeputusan.Text : formRTLPspBmnUbah.teUraianKeputusan.Text);
                
                ambilDataPspBmn = new SvcWasdalPSPBMNCrud.execute_pttClient();
                ambilDataPspBmn.Beginexecute(parInp, new AsyncCallback(cudRtlPspBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        /*private void resetEventButtonMonWasdal()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPSPBMNCrud.InputParameters parInp = new SvcWasdalPSPBMNCrud.InputParameters();
                parInp.P_ID_KPKNL = konfigApp.idKpknl;//mngapa diisi dengan ID_KANWIL
                parInp.P_ID_KPKNLSpecified = (konfigApp.idKpknl == 0 ? false : true);
                parInp.P_ID_PEMOHON = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.idPemohon : formRTLPspBmnUbah.idPemohon);//
                parInp.P_ID_PEMOHONSpecified = true;
                parInp.P_ID_USER = konfigApp.idUser;
                parInp.P_ID_USERSpecified = true;
                parInp.P_IS_TB = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.rgJenisAset.EditValue.ToString() : formRTLPspBmnUbah.rgJenisAset.EditValue.ToString());
                parInp.P_JABATAN_TTD = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teJabatan.Text.Trim() : formRTLPspBmnUbah.teJabatan.Text.Trim());
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_KD_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaInstansi.EditValue.ToString() : formRTLPspBmnUbah.teNamaInstansi.EditValue.ToString());
                parInp.P_KD_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.kodePenerbitSkDetail : formRTLPspBmnUbah.kodePenerbitSkDetail);
                parInp.P_NILAI_PENETAPAN = ((_mode == "C" || _mode == "CU") ? (formRTLPspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnTambah.teNilaiPenetapan.Text)) : (formRTLPspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnUbah.teNilaiPenetapan.Text)));
                parInp.P_NILAI_PENETAPANSpecified = true;
                parInp.P_NIP_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNipPenandaTangan.Text : formRTLPspBmnUbah.teNipPenandaTangan.Text);
                parInp.P_NM_PENANDATANGAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaPenandaTangan.Text : formRTLPspBmnUbah.teNamaPenandaTangan.Text);
                parInp.P_NM_PENERBIT_SK = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNamaInstansi.Text : formRTLPspBmnUbah.teNamaInstansi.Text);
                parInp.P_NM_PENERBIT_SK_DTL = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.namaPenerbitSkDetail : formRTLPspBmnUbah.namaPenerbitSkDetail);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teNomorSk.Text.Trim() : formRTLPspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_TGL_CREATED = konfigApp.DateToString(DateTime.Now);
                parInp.P_TGL_SK = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teTanggalSk.EditValue : formRTLPspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_TIPE_PEMOHON = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teJenisPemohon.Text : formRTLPspBmnUbah.teJenisPemohon.Text);
                parInp.P_TIPE_PENGELOLA = konfigApp.tipePengelola;
                parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formRTLPspBmnTambah.teUraianKeputusan.Text : formRTLPspBmnUbah.teUraianKeputusan.Text);
                ambilDataPspBmn = new SvcWasdalPSPBMNCrud.execute_pttClient();
                ambilDataPspBmn.Beginexecute(parInp, new AsyncCallback(cudRtlPspBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }*/

        private void cudRtlPspBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPspBmn = ambilDataPspBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPspBmn(this.ubahDsRtlPspBmn), dOutAmbilDataPspBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPspBmn(SvcWasdalPSPBMNCrud.OutputParameters dataOutRtl);

        int _keBerapa1 = 0;

        private void ubahDsRtlPspBmn(SvcWasdalPSPBMNCrud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPSPBMNSkSelect.WASDALSROW_READ_WASDAL_PSP dataPenyama = new SvcWasdalPSPBMNSkSelect.WASDALSROW_READ_WASDAL_PSP();
                dataPenyama.ID_PEMOHONSpecified = true;
                //dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPspBmnTambah.idPemohon;
                        //dataPenyama.ID_SATKER = formRTLPspBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPspBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formRTLPspBmnTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPspBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPspBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPspBmnTambah.kodePenerbitSkDetail;
                        //dataPenyama.KD_SATKER = formRTLPspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPspBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formRTLPspBmnTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formRTLPspBmnTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPspBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPspBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsGridRtlPspBmn == null ? 1 : dsGridRtlPspBmn.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLPspBmnTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPspBmnTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPspBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPspBmnTambah.teNamaKl.Text;
                        //dataPenyama.UR_SATKER = formRTLPspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formRTLPspBmnTambah.teUraianKeputusan.Text;
                        dsGridRtlPspBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPspBmn.dataTerpilih = dataPenyama;
                            _keBerapa1 = 1;
                            formRTLPspBmnTambah.gcDaftarAset.Enabled = true;
                            formRTLPspBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.sbCariPemohon.Enabled = false;
                            formRTLPspBmnTambah.sbRefresh.Enabled = true;
                            formRTLPspBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.cePilihSemua.Enabled = true;
                            formRTLPspBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPspBmnTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlPspBmn.IndexOf(gridRTLPspBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlPspBmn.Remove(gridRTLPspBmn.dataTerpilih);
                            dsGridRtlPspBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPspBmnUbah.idPemohon;
                        //dataPenyama.ID_SATKER = formRTLPspBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPspBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.JABATAN_TTD = formRTLPspBmnUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPspBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPspBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPspBmnUbah.kodePenerbitSkDetail;
                        //dataPenyama.KD_SATKER = formRTLPspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPspBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NIP_PENANDATANGAN = formRTLPspBmnUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLPspBmn.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLPspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.NM_PENANDATANGAN = formRTLPspBmnUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPspBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPspBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLPspBmn.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLPspBmn.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLPspBmnUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLPspBmn.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLPspBmn.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPspBmnUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPspBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLPspBmn.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLPspBmn.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLPspBmn.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLPspBmnUbah.teNamaKl.Text;
                        //dataPenyama.UR_SATKER = formRTLPspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.URAIAN_KEPUTUSAN = formRTLPspBmnUbah.teUraianKeputusan.Text;
                        _indeksData = dsGridRtlPspBmn.IndexOf(gridRTLPspBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlPspBmn.Remove(gridRTLPspBmn.dataTerpilih);
                        dsGridRtlPspBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlPspBmn.Remove(gridRTLPspBmn.dataTerpilih);
                        break;
                }
                gridRTLPspBmn.dsDataSource = dsGridRtlPspBmn;
                gridRTLPspBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }
        #endregion Simpan Data PSP BMN

        #region Action Button

        private void RkmTlPSPBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPspBmn.dataTerpilih != null)
            {
                if (formRTLPspBmnUbah == null)
                {
                    formRTLPspBmnUbah = new KSK.TL.PSPBMN.ucRTLPspBmnForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPspBmn = new SimpanDataRtl(simpanDataRtlPspBmn)
                    };
                }
                formRTLPspBmnUbah.dataTerpilih = gridRTLPspBmn.dataTerpilih;
                setPanel(formRTLPspBmnUbah);
                formRTLPspBmnUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPSPBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPspBmn.dataTerpilih != null)
            {
                if (formRTLPspDetail == null)
                {
                    formRTLPspDetail = new KSK.TL.PSPBMN.ucRTLPspBmnForm("A")
                    {
                        
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPspBmn = new SimpanDataRtl(simpanDataRtlPspBmn)
                    };
                }
                formRTLPspDetail.dataTerpilih = gridRTLPspBmn.dataTerpilih;
                setPanel(formRTLPspDetail);
                formRTLPspDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPSPBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void RkmTlPSPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPspBmn.teNamaKolom.Text = "";
            gridRTLPspBmn.teCari.Text = "";
            gridRTLPspBmn.fieldDicari = "";
            gridRTLPspBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPspBmn();
        }

        private void RkmTlPSPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPspBmn();
            }
        }

        private void RkmTlPSPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlPSPBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMN;
            konfigApp.kdPelayanan = "02";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPSPSBMN();
            bbiRkmTlTambah.Enabled = false;
            modeCari = false;
            gridRTLPspBmn.teNamaKolom.Text = "";
            gridRTLPspBmn.teCari.Text = "";
            gridRTLPspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPspBmn();
        }
        #endregion

        private void cariDataRkmTlPspBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlPspBmn();
        }

        #endregion

        #region PSPBMNLAIN

        KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainGrid gridRTLPspBmnLain;
        KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm formRTLPspBmnLainTambah;
        KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm formRTLPspBmnLainUbah;
        KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm formRTLPspLainDetail;
        private ArrayList dsGridRtlPspBmnLain;
        SvcWasdalLainTindakLanjutSelect.OutputParameters dOutRtlPspBmnLain;
        SvcWasdalLainTindakLanjutSelect.execute_pttClient ambilRtlPspBmnLain;

        private void nbiTLPSPBMNLAIN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMNLAIN;
            konfigApp.kdPelayanan = "03";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMNLAIN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPSPSBMNLain();
            modeCari = false;
            gridRTLPspBmnLain.teNamaKolom.Text = "";
            gridRTLPspBmnLain.teCari.Text = "";
            gridRTLPspBmnLain.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPspBmnLain();
        }

        private void setEventBtnTlPSPBMNLAIN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINTambah);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINRefresh);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINHapus);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINTutup);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPSPBMNLAINEdit);
        }

        public void initGridRkmTlPSPSBMNLain()
        {

            //if (gridRTLPspBmnLain == null)
            //{
                gridRTLPspBmnLain = new KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPspBmnLain),
                    detailDataGrid = new DetailDataGrid(RkmTlPSPBMNLAINEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPSPBMNLAIN();
            setPanel(gridRTLPspBmnLain);
        }

        #region --++ Ambil Data PSP BMN LAIN
        private void getInitRkmTlPspBmnLain()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutSelect.InputParameters parInp = new SvcWasdalLainTindakLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPspBmnLain = new SvcWasdalLainTindakLanjutSelect.execute_pttClient();
                ambilRtlPspBmnLain.Open();
                ambilRtlPspBmnLain.Beginexecute(parInp, new AsyncCallback(getRkmTlPspBmnLain), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPspBmnLain(IAsyncResult result)
        {
            try
            {
                dOutRtlPspBmnLain = ambilRtlPspBmnLain.Endexecute(result);
                ambilRtlPspBmnLain.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPspBmnLain(dsRtlPspBmnLain), dOutRtlPspBmnLain);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPspBmnLain(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut);

        private void dsRtlPspBmnLain(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN_TL2.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = false;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlPspBmnLain = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].UR_SATKER = konfigApp.namaSatker;
                dsGridRtlPspBmnLain.Add(dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i]);
            }

            gridRTLPspBmnLain.sbCariOnline.Enabled = !modeCari;
            gridRTLPspBmnLain.dsDataSource = dsGridRtlPspBmnLain;
            gridRTLPspBmnLain.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPspBmnLain.teNamaKolom.Text.Trim();
                string xDua = gridRTLPspBmnLain.teCari.Text.Trim();
                string xTiga = gridRTLPspBmnLain.fieldDicari;
                gridRTLPspBmnLain.gvGridPSPBMNLAINSk.ClearColumnsFilter();
                gridRTLPspBmnLain.teNamaKolom.Text = xSatu;
                gridRTLPspBmnLain.teCari.Text = xDua;
                gridRTLPspBmnLain.fieldDicari = xTiga;
            }
            else
                gridRTLPspBmnLain.gvGridPSPBMNLAINSk.ClearColumnsFilter();
            gridRTLPspBmnLain.labelTotData.Text = "";
            gridRTLPspBmnLain.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data PSP BMN LAIN
        SvcWasdalLainTindakLanjutCud.OutputParameters dOutAmbilDataPspBmnLain;
        SvcWasdalLainTindakLanjutCud.execute_pttClient ambilDataPspBmnLain;

        private void simpanDataRtlPspBmnLain(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.idSkWasdal : formRTLPspBmnLainUbah.idSkWasdal);
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.idSkTL : formRTLPspBmnLainUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_DARI_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teDariTgl.Text : formRTLPspBmnLainUbah.teDariTgl.Text);
                parInp.P_SD_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teSampaiTgl.Text : formRTLPspBmnLainUbah.teSampaiTgl.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.konversiPeriode() : formRTLPspBmnLainUbah.konversiPeriode());
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRTLPspBmnLainTambah.teJangkaWaktu.Text) : Convert.ToDecimal(formRTLPspBmnLainUbah.teJangkaWaktu.Text));
                parInp.P_KD_PELAYANAN = "03";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teNomorSk.Text.Trim() : formRTLPspBmnLainUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teNoBuktiLaksana.Text.Trim() : formRTLPspBmnLainUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.cbJnsDokLaksana.SelectedText : formRTLPspBmnLainUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teTanggalSk.EditValue : formRTLPspBmnLainUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teKetBukti.Text : formRTLPspBmnLainUbah.teKetBukti.Text);
                //parInp.P_ = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPspBmnLainTambah.filePath) : konfigApp.convert2byte(formRTLPspBmnLainUbah.filePath));
                parInp.P_DARI_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teDariTgl.Text : formRTLPspBmnLainUbah.teDariTgl.Text);
                parInp.P_SD_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teSampaiTgl.Text : formRTLPspBmnLainUbah.teSampaiTgl.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.konversiPeriode() : formRTLPspBmnLainUbah.konversiPeriode());
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRTLPspBmnLainTambah.teJangkaWaktu.Text) : Convert.ToDecimal(formRTLPspBmnLainUbah.teJangkaWaktu.Text));
                parInp.P_JANGKA_WAKTUSpecified = true;
                parInp.P_NO_REKAM_PERJANJIAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teNoPerjanjian.Text : formRTLPspBmnLainUbah.teNoPerjanjian.Text);
                parInp.P_STATUS_PERJANJIAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teStatusPerjanjian.Text : formRTLPspBmnLainUbah.teStatusPerjanjian.Text);
                parInp.P_TGL_REKAM_PERJANJIAN = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teTanggalPerjanjian.EditValue : formRTLPspBmnLainUbah.teTanggalPerjanjian.EditValue)));
                parInp.P_UR_PHK_LAIN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.txtNmPhkLain.Text : formRTLPspBmnLainUbah.txtNmPhkLain.Text);
                if (parInp.P_STATUS_PERJANJIAN == "DIBERHENTIKAN")
                {
                    parInp.P_NO_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teNoBAST.Text : formRTLPspBmnLainUbah.teNoBAST.Text);
                    parInp.P_TGL_BAST = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teTanggalBAST.EditValue : formRTLPspBmnLainUbah.teTanggalBAST.EditValue)));
                    parInp.P_FILE_BAST = konfigApp.convert2byte(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.namaFileUploadBAST : formRTLPspBmnLainUbah.namaFileUploadBAST));
                    parInp.P_NM_FILE_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPspBmnLainTambah.teFileBAST.Text : formRTLPspBmnLainUbah.teFileBAST.Text);
                }
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPspBmnLain = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                ambilDataPspBmnLain.Beginexecute(parInp, new AsyncCallback(cudRtlPspBmnLain), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPspBmnLain()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = gridRTLPspBmnLain.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = gridRTLPspBmnLain.dataTerpilih.ID_TL_WASDAL_GUNA;
                parInp.P_SK_KEPUTUSAN = gridRTLPspBmnLain.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPspBmnLain.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLPspBmnLain.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLPspBmnLain.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLPspBmnLain.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPspBmnLain = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                ambilDataPspBmnLain.Beginexecute(parInp, new AsyncCallback(cudRtlPspBmnLain), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPspBmnLain(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPspBmnLain = ambilDataPspBmnLain.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPspBmnLain(this.ubahDsRtlPspBmnLain), dOutAmbilDataPspBmnLain);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataPspBmnLain.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPspBmnLain(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaASP = 0;

        private void ubahDsRtlPspBmnLain(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2 dataPenyama = new SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRTLPspBmnLainTambah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_GUNA = formRTLPspBmnLainTambah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLPspBmnLainTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPspBmnLainTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPspBmnLainTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPspBmnLainTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPspBmnLainTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPspBmnLainTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPspBmnLainTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPspBmnLainTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPspBmnLainTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnLainTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPspBmnLainTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnLainTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPspBmnLainTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = konfigApp.ToDate(formRTLPspBmnLainTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLPspBmnLainTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPspBmnLainTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;
                        //dataPenyama.NM_PHK_LAIN = formRTLPspBmnLainTambah.txtNmPhkLain.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formRTLPspBmnLainTambah.txtAlamatPhkLain.Text;
                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPspBmnLainTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = konfigApp.ToDate(formRTLPspBmnLainTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPspBmnLainTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPspBmnLainTambah.teKetBukti.Text;
                        
                        dataPenyama.TIPE_PEMOHON = formRTLPspBmnLainTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPspBmnLainTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPspBmnLainTambah.teNamaPemohon.Text;
                        dsGridRtlPspBmnLain.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPspBmnLain.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLPspBmnLainTambah.gcDaftarAset.Enabled = true;
                            formRTLPspBmnLainTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.sbCariPemohon.Enabled = false;
                            formRTLPspBmnLainTambah.sbRefresh.Enabled = true;
                            formRTLPspBmnLainTambah.sbTambah.Enabled = true;
                            formRTLPspBmnLainTambah.sbHapus.Enabled = true;
                            formRTLPspBmnLainTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.cePilihSemua.Enabled = true;
                            formRTLPspBmnLainTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.statusForm = "CU";
                            formRTLPspBmnLainTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.txtNmPhkLain.Properties.ReadOnly = true;
                            formRTLPspBmnLainTambah.txtAlamatPhkLain.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlPspBmnLain.IndexOf(gridRTLPspBmnLain.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlPspBmnLain.Remove(gridRTLPspBmnLain.dataTerpilih);
                            dsGridRtlPspBmnLain.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRTLPspBmnLainUbah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_GUNA = formRTLPspBmnLainUbah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLPspBmnLainUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPspBmnLainUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPspBmnLainUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPspBmnLainUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPspBmnLainUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPspBmnLainUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPspBmnLainUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPspBmnLainUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPspBmnLainUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnLainUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPspBmnLainUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPspBmnLainUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPspBmnLainUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = formRTLPspBmnLainUbah.teTanggalSk.DateTime;
                        dataPenyama.NM_PENERBIT_SK = formRTLPspBmnLainUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPspBmnLainUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;
                        //dataPenyama.NM_PHK_LAIN = formRTLPspBmnLainUbah.txtNmPhkLain.Text;
                        dataPenyama.ALAMAT_PHK_LAIN = formRTLPspBmnLainUbah.txtAlamatPhkLain.Text;
                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPspBmnLainUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = formRTLPspBmnLainUbah.deTglBuktiLaksana.DateTime;
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPspBmnLainUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPspBmnLainUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLPspBmnLainUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPspBmnLainUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPspBmnLainUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRtlPspBmnLain.IndexOf(gridRTLPspBmnLain.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlPspBmnLain.Remove(gridRTLPspBmnLain.dataTerpilih);
                        dsGridRtlPspBmnLain.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlPspBmnLain.Remove(gridRTLPspBmnLain.dataTerpilih);
                        break;
                }
                gridRTLPspBmnLain.dsDataSource = dsGridRtlPspBmnLain;
                gridRTLPspBmnLain.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPspLain(SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN _skTerpilih)
        {
            formRTLPspBmnLainTambah = new KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPspBmnLain = new SimpanDataRtl(simpanDataRtlPspBmnLain)
            };
            formRTLPspBmnLainTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPspBmnLainTambah);
            formRTLPspBmnLainTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data PSP BMN LAIN

        #region action button
        KSK.TL.PSPBMNLAIN.frmPuSk formSkPspLain;

        private void RkmTlPSPBMNLAINTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan03), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPspLain = new KSK.TL.PSPBMNLAIN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPspLain = new PilihSkPengguna(pilihSkPspLain)
                };
                formSkPspLain.ShowDialog();
            }
        }

        private void RkmTlPSPBMNLAINEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPspBmnLain.dataTerpilih != null)
            {
                if (formRTLPspBmnLainUbah == null)
                {
                    formRTLPspBmnLainUbah = new KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPspBmnLain = new SimpanDataRtl(simpanDataRtlPspBmnLain)
                    };
                }
                formRTLPspBmnLainUbah.dataTerpilih = gridRTLPspBmnLain.dataTerpilih;
                setPanel(formRTLPspBmnLainUbah);
                formRTLPspBmnLainUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPSPBMNLAINHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPspBmnLain.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPspBmnLain.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPspBmnLain();
                }
            }
        }

        private void RkmTlPSPBMNLAINDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPspBmnLain.dataTerpilih != null)
            {
                if (formRTLPspLainDetail == null)
                {
                    formRTLPspLainDetail = new KSK.TL.PSPBMNLAIN.ucRTLPspBmnLainForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPspBmnLain = new SimpanDataRtl(simpanDataRtlPspBmnLain)
                    };
                }
                formRTLPspLainDetail.dataTerpilih = gridRTLPspBmnLain.dataTerpilih;
                setPanel(formRTLPspLainDetail);
                formRTLPspLainDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPSPBMNLAINRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPspBmnLain.teNamaKolom.Text = "";
            gridRTLPspBmnLain.teCari.Text = "";
            gridRTLPspBmnLain.fieldDicari = "";
            gridRTLPspBmnLain.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPspBmnLain();
        }

        private void RkmTlPSPBMNLAINMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPspBmnLain();
            }
        }

        private void RkmTlPSPBMNLAINTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlPSPBMNLAINKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMNLAIN;
            konfigApp.kdPelayanan = "03";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMNLAIN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPSPSBMNLain();
            modeCari = false;
            gridRTLPspBmnLain.teNamaKolom.Text = "";
            gridRTLPspBmnLain.teCari.Text = "";
            gridRTLPspBmnLain.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPspBmnLain();
        }

        private void cariDataRkmTlPspBmnLain(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlPspBmnLain();
        }

        #endregion

        #endregion

        #region ASPBMN

        KSK.TL.ASPBMN.ucRTLAspBmnGrid gridRTLAspBmn;
        KSK.TL.ASPBMN.ucRTLAspBmnForm1 formRTLAspBmnTambah;
        KSK.TL.ASPBMN.ucRTLAspBmnForm1 formRTLAspBmnUbah;
        KSK.TL.ASPBMN.ucRTLAspBmnForm1 formRTLAspBmnDetail;
        private ArrayList dsGridRtlAspBmn;
        SvcWasdalLainTindakLanjutSelect.OutputParameters dOutRtlAspBmn;
        SvcWasdalLainTindakLanjutSelect.execute_pttClient ambilRtlAspBmn;
        SvcWasdalLainTindakLanjutCud.OutputParameters dOutAmbilDataAspBmn;
        SvcWasdalLainTindakLanjutCud.execute_pttClient ambilDataAspBmn;

        private void nbiTLASPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {

            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonASPBMN;
            konfigApp.kdPelayanan = "04";
            konfigApp.namaPelayanan = this.subMenuMonASPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlASPSBMN();
            modeCari = false;
            gridRTLAspBmn.teNamaKolom.Text = "";
            gridRTLAspBmn.teCari.Text = "";
            gridRTLAspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlAspBmn();
        }

        private void setEventBtnTlASPBMN()
        {
            this.resetEventBtnTlWasdal();

            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNTambah);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNRefresh);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNHapus);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNTutup);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlASPBMNEdit);
        }

        public void initGridRkmTlASPSBMN()
        {

            //if (gridRTLAspBmn == null)
            //{
                gridRTLAspBmn = new KSK.TL.ASPBMN.ucRTLAspBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlAspBmn),
                    detailDataGrid = new DetailDataGrid(RkmTlASPBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlASPBMN();
            setPanel(gridRTLAspBmn);
        }

        #region --++ Ambil Data ASP BMN
        private void getInitRkmTlAspBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutSelect.InputParameters parInp = new SvcWasdalLainTindakLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN='{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON ={1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlAspBmn = new SvcWasdalLainTindakLanjutSelect.execute_pttClient();
                ambilRtlAspBmn.Open();
                ambilRtlAspBmn.Beginexecute(parInp, new AsyncCallback(getRkmTlAspBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlAspBmn(IAsyncResult result)
        {
            try
            {
                dOutRtlAspBmn = ambilRtlAspBmn.Endexecute(result);
                ambilRtlAspBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlAspBmn(dsRtlAspBmn), dOutRtlAspBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlAspBmn(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut);

        private void dsRtlAspBmn(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN_TL2.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlAspBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].UR_SATKER = konfigApp.namaSatker;
                dsGridRtlAspBmn.Add(dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i]);
            }

            gridRTLAspBmn.sbCariOnline.Enabled = !modeCari;
            gridRTLAspBmn.dsDataSource = dsGridRtlAspBmn;
            gridRTLAspBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLAspBmn.teNamaKolom.Text.Trim();
                string xDua = gridRTLAspBmn.teCari.Text.Trim();
                string xTiga = gridRTLAspBmn.fieldDicari;
                gridRTLAspBmn.gvGridASPBMNSk.ClearColumnsFilter();
                gridRTLAspBmn.teNamaKolom.Text = xSatu;
                gridRTLAspBmn.teCari.Text = xDua;
                gridRTLAspBmn.fieldDicari = xTiga;
            }
            else
                gridRTLAspBmn.gvGridASPBMNSk.ClearColumnsFilter();
            gridRTLAspBmn.labelTotData.Text = "";
            gridRTLAspBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data ASP BMN

        private void simpanDataRtlAspBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();


                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.idSkWasdal : formRTLAspBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.idSkTL : formRTLAspBmnUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_DARI_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teDariTgl.Text : formRTLAspBmnUbah.teDariTgl.Text);
                parInp.P_SD_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teSampaiTgl.Text : formRTLAspBmnUbah.teSampaiTgl.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.konversiPeriode() : formRTLAspBmnUbah.konversiPeriode());
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU" || _mode == "D") ? ((formRTLAspBmnTambah.teJangkaWaktu.Text != "") ? Convert.ToDecimal(formRTLAspBmnTambah.teJangkaWaktu.Text) : 0) : ((formRTLAspBmnUbah.teJangkaWaktu.Text != "") ? Convert.ToDecimal(formRTLAspBmnUbah.teJangkaWaktu.Text) : 0));
                parInp.P_KD_PELAYANAN = "04";
                parInp.P_NO_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teNoBAST.Text.Trim() : formRTLAspBmnUbah.teNoBAST.Text.Trim());
                parInp.P_TGL_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.deTglBAST.Text : formRTLAspBmnUbah.deTglBAST.Text);
                parInp.P_NM_FILE_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teFileBAST.Text.Trim() : formRTLAspBmnUbah.teFileBAST.Text.Trim());
                if (formRTLAspBmnTambah.filePath != "")
                    parInp.P_FILE_BAST = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLAspBmnTambah.filePath) : konfigApp.convert2byte(formRTLAspBmnUbah.filePath));

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teNomorSk.Text.Trim() : formRTLAspBmnUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teNoBuktiLaksana.Text.Trim() : formRTLAspBmnUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.cbJnsDokLaksana.SelectedText : formRTLAspBmnUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teTanggalSk.EditValue : formRTLAspBmnUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLAspBmnTambah.teKetBukti.Text : formRTLAspBmnUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLAspBmnTambah.filePath) : konfigApp.convert2byte(formRTLAspBmnUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataAspBmn = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                ambilDataAspBmn.Beginexecute(parInp, new AsyncCallback(cudRtlAspBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlAspBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = gridRTLAspBmn.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = gridRTLAspBmn.dataTerpilih.ID_TL_WASDAL_GUNA;
                parInp.P_SK_KEPUTUSAN = gridRTLAspBmn.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLAspBmn.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLAspBmn.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLAspBmn.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLAspBmn.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataAspBmn = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                ambilDataAspBmn.Beginexecute(parInp, new AsyncCallback(cudRtlAspBmn), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlAspBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataAspBmn = ambilDataAspBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlAspBmn(this.ubahDsRtlAspBmn), dOutAmbilDataAspBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataAspBmn.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlAspBmn(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPSPLAIN = 0;

        private void ubahDsRtlAspBmn(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2 dataPenyama = new SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLAspBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLAspBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLAspBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLAspBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLAspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLAspBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLAspBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLAspBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLAspBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLAspBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLAspBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLAspBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLAspBmnTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLAspBmnTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLAspBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLAspBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLAspBmnTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLAspBmnTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLAspBmnTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLAspBmnTambah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLAspBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLAspBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLAspBmnTambah.teNamaPemohon.Text;
                        dsGridRtlAspBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLAspBmn.dataTerpilih = dataPenyama;
                            //formRTLAspBmnTambah.getDaftarAset();
                            _keBerapaPSPLAIN = 1;
                            
                            
                            formRTLAspBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.sbCariPemohon.Enabled = false;
                            formRTLAspBmnTambah.sbRefresh.Enabled = true;
                            formRTLAspBmnTambah.sbHapus.Enabled = true;
                            formRTLAspBmnTambah.sbTambah.Enabled = true;
                            formRTLAspBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.cePilihSemua.Enabled = true;
                            formRTLAspBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.statusForm = "CU";
                            formRTLAspBmnTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                            formRTLAspBmnTambah.inisialisasiForm();
                            formRTLAspBmnTambah.gcDaftarAset.Enabled = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlAspBmn.IndexOf(gridRTLAspBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlAspBmn.Remove(gridRTLAspBmn.dataTerpilih);
                            dsGridRtlAspBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLAspBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLAspBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLAspBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLAspBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLAspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLAspBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLAspBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLAspBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLAspBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLAspBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLAspBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLAspBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLAspBmnUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLAspBmnUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLAspBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLAspBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLAspBmnUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLAspBmnUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLAspBmnUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLAspBmnUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLAspBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLAspBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLAspBmnUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRtlAspBmn.IndexOf(gridRTLAspBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlAspBmn.Remove(gridRTLAspBmn.dataTerpilih);
                        dsGridRtlAspBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlAspBmn.Remove(gridRTLAspBmn.dataTerpilih);
                        break;
                }
                gridRTLAspBmn.dsDataSource = dsGridRtlAspBmn;
                gridRTLAspBmn.displayData();

                
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkAsp(SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN _skTerpilih)
        {
            formRTLAspBmnTambah = new KSK.TL.ASPBMN.ucRTLAspBmnForm1("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlAspBmn = new SimpanDataRtl(simpanDataRtlAspBmn)
            };
            formRTLAspBmnTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLAspBmnTambah);
            formRTLAspBmnTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data ASP BMN

        #region action button
        KSK.TL.ASPBMN.frmPuSk formSkAsp;

        private void RkmTlASPBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan04), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkAsp = new KSK.TL.ASPBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkAsp = new PilihSkPengguna(pilihSkAsp)
                };
                formSkAsp.ShowDialog();
            }
        }

        private void RkmTlASPBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLAspBmn.dataTerpilih != null)
            {
                if (formRTLAspBmnUbah == null)
                {
                    formRTLAspBmnUbah = new KSK.TL.ASPBMN.ucRTLAspBmnForm1("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlAspBmn = new SimpanDataRtl(simpanDataRtlAspBmn)
                    };
                }
                formRTLAspBmnUbah.dataTerpilih = gridRTLAspBmn.dataTerpilih;
                setPanel(formRTLAspBmnUbah);
                formRTLAspBmnUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlASPBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLAspBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLAspBmn.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlAspBmn();
                }
            }
        }

        private void RkmTlASPBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLAspBmn.dataTerpilih != null)
            {
                if (formRTLAspBmnDetail == null)
                {
                    formRTLAspBmnDetail = new KSK.TL.ASPBMN.ucRTLAspBmnForm1("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlAspBmn = new SimpanDataRtl(simpanDataRtlAspBmn)
                    };
                }
                formRTLAspBmnDetail.dataTerpilih = gridRTLAspBmn.dataTerpilih;
                setPanel(formRTLAspBmnDetail);
                formRTLAspBmnDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlASPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLAspBmn.teNamaKolom.Text = "";
            gridRTLAspBmn.teCari.Text = "";
            gridRTLAspBmn.fieldDicari = "";
            gridRTLAspBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlAspBmn();
        }

        private void RkmTlASPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlAspBmn();
            }
        }

        private void RkmTlASPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlASPBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonASPBMN;
            konfigApp.kdPelayanan = "04";
            konfigApp.namaPelayanan = this.subMenuMonASPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlASPSBMN();
            modeCari = false;
            gridRTLAspBmn.teNamaKolom.Text = "";
            gridRTLAspBmn.teCari.Text = "";
            gridRTLAspBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlAspBmn();
        }

        private void cariDataRkmTlAspBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlAspBmn();
        }

        #endregion

        #endregion

        #region PBMNS

        KSK.TL.PBMNS.ucRTLPBMNSGrid gridRTLPbmns;
        KSK.TL.PBMNS.ucRTLPBMNSForm formRTLPbmnsTambah;
        KSK.TL.PBMNS.ucRTLPBMNSForm formRTLPbmnsUbah;
        KSK.TL.PBMNS.ucRTLPBMNSForm formRTLPbmnsDetail;
        private ArrayList dsGridRtlPbmns;
        SvcWasdalLainTindakLanjutSelect.OutputParameters dOutRtlPbmns;
        SvcWasdalLainTindakLanjutSelect.execute_pttClient ambilRtlPbmns;
        SvcWasdalLainTindakLanjutCud.OutputParameters dOutRtlDataPbmns;
        SvcWasdalLainTindakLanjutCud.execute_pttClient dOutAmbilDataPbmns;

        private void nbiTLPBMNS_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {

            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPBMNS;
            konfigApp.kdPelayanan = "05";
            konfigApp.namaPelayanan = this.subMenuMonPBMNS;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBMNS();
            modeCari = false;
            gridRTLPbmns.teNamaKolom.Text = "";
            gridRTLPbmns.teCari.Text = "";
            gridRTLPbmns.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPbmns();
        }

        private void setEventBtnTlPbmns()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSDetail);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSTutup);
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSTambah);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSHapus);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSKembali);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPBMNSEdit);
        }

        public void initGridRkmTlPBMNS()
        {

            //if (gridRTLPbmns == null)
            //{
                gridRTLPbmns = new KSK.TL.PBMNS.ucRTLPBMNSGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPbmns),
                    detailDataGrid = new DetailDataGrid(RkmTlPBMNSEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPbmns();
            setPanel(gridRTLPbmns);
        }

        #region --++ Ambil Data PBMN
        private void getInitRkmTlPbmns()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutSelect.InputParameters parInp = new SvcWasdalLainTindakLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPbmns = new SvcWasdalLainTindakLanjutSelect.execute_pttClient();
                ambilRtlPbmns.Open();
                ambilRtlPbmns.Beginexecute(parInp, new AsyncCallback(getInitRkmTlPbmns), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getInitRkmTlPbmns(IAsyncResult result)
        {
            try
            {
                dOutRtlPbmns = ambilRtlPbmns.Endexecute(result);
                ambilRtlPbmns.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPbmns(dsRtlPbmns), dOutRtlPbmns);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPbmns(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut);

        private void dsRtlPbmns(SvcWasdalLainTindakLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_PSP_LAIN_TL2.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlPbmns = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB = (dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i].UR_SATKER = konfigApp.namaSatker;
                dsGridRtlPbmns.Add(dataOut.SF_READ_WASDAL_PSP_LAIN_TL2[i]);
            }

            gridRTLPbmns.sbCariOnline.Enabled = !modeCari;
            gridRTLPbmns.dsDataSource = dsGridRtlPbmns;
            gridRTLPbmns.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPbmns.teNamaKolom.Text.Trim();
                string xDua = gridRTLPbmns.teCari.Text.Trim();
                string xTiga = gridRTLPbmns.fieldDicari;
                gridRTLPbmns.gvGridPSPBMNLAINSk.ClearColumnsFilter();
                gridRTLPbmns.teNamaKolom.Text = xSatu;
                gridRTLPbmns.teCari.Text = xDua;
                gridRTLPbmns.fieldDicari = xTiga;
            }
            else
                gridRTLPbmns.gvGridPSPBMNLAINSk.ClearColumnsFilter();
            gridRTLPbmns.labelTotData.Text = "";
            gridRTLPbmns.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data PBMNS

        private void simpanDataRtlPbmns(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.idSkWasdal : formRTLPbmnsUbah.idSkWasdal);
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.idSkTL : formRTLPbmnsUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_DARI_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teDariTgl.Text : formRTLPbmnsUbah.teDariTgl.Text);
                parInp.P_SD_TGL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teSampaiTgl.Text : formRTLPbmnsUbah.teSampaiTgl.Text);
                parInp.P_PERIODE = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.konversiPeriode() : formRTLPbmnsUbah.konversiPeriode());
                parInp.P_JANGKA_WAKTU = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRTLPbmnsTambah.teJangkaWaktu.Text) : Convert.ToDecimal(formRTLPbmnsUbah.teJangkaWaktu.Text));
                parInp.P_KD_PELAYANAN = "05";
                parInp.P_NO_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teNoBAST.Text.Trim() : formRTLPbmnsUbah.teNoBAST.Text.Trim());
                parInp.P_TGL_BAST = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.deTglBAST.Text : formRTLPbmnsUbah.deTglBAST.Text);

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teNomorSk.Text.Trim() : formRTLPbmnsUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teNoBuktiLaksana.Text.Trim() : formRTLPbmnsUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.cbJnsDokLaksana.SelectedText : formRTLPbmnsUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teTanggalSk.EditValue : formRTLPbmnsUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPbmnsTambah.teKetBukti.Text : formRTLPbmnsUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPbmnsTambah.filePath) : konfigApp.convert2byte(formRTLPbmnsUbah.filePath));

                //parInp.P_NO_REKAM_PERJANJIAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ?  : formRTLPbmnsUbah.teKetBukti.Text);
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                dOutAmbilDataPbmns = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                dOutAmbilDataPbmns.Beginexecute(parInp, new AsyncCallback(cudRtlPbmns), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPBmns()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainTindakLanjutCud.InputParameters parInp = new SvcWasdalLainTindakLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = gridRTLPbmns.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = gridRTLPbmns.dataTerpilih.ID_TL_WASDAL_GUNA;
                parInp.P_SK_KEPUTUSAN = gridRTLPbmns.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPbmns.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLPbmns.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLPbmns.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLPbmns.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                dOutAmbilDataPbmns = new SvcWasdalLainTindakLanjutCud.execute_pttClient();
                dOutAmbilDataPbmns.Beginexecute(parInp, new AsyncCallback(cudRtlPbmns), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPbmns(IAsyncResult result)
        {
            try
            {
                dOutRtlDataPbmns = dOutAmbilDataPbmns.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPbmns(this.ubahDsRtlPbmns), dOutRtlDataPbmns);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n", konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPbmns(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPBMNS = 0;

        private void ubahDsRtlPbmns(SvcWasdalLainTindakLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2 dataPenyama = new SvcWasdalLainTindakLanjutSelect.WASDALSROW_READ_WASDAL_PSP_LAIN_TL2();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRTLPbmnsTambah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_GUNA = formRTLPbmnsTambah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLPbmnsTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPbmnsTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPbmnsTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPbmnsTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPbmnsTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPbmnsTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPbmnsTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPbmnsTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPbmnsTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPbmnsTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPbmnsTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPbmnsTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPbmnsTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPbmnsTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLPbmnsTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPbmnsTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPbmnsTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLPbmnsTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPbmnsTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPbmnsTambah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLPbmnsTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPbmnsTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPbmnsTambah.teNamaPemohon.Text;
                        dsGridRtlPbmns.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPbmns.dataTerpilih = dataPenyama;
                            _keBerapaPBMNS = 1;
                            formRTLPbmnsTambah.gcDaftarAset.Enabled = true;
                            formRTLPbmnsTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.sbCariPemohon.Enabled = false;
                            formRTLPbmnsTambah.sbRefresh.Enabled = true;
                            formRTLPbmnsTambah.sbHapus.Enabled = true;
                            formRTLPbmnsTambah.sbTambah.Enabled = true;
                            formRTLPbmnsTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.cePilihSemua.Enabled = true;
                            formRTLPbmnsTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPbmnsTambah.statusForm = "CU";
                            formRTLPbmnsTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPspBmn.IndexOf(gridSkPspBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPspBmn.dataTerpilih = gridSkPspBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlPbmns.IndexOf(gridRTLPbmns.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlPbmns.Remove(gridRTLPbmns.dataTerpilih);
                            dsGridRtlPbmns.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRTLPbmnsUbah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_GUNA = formRTLPbmnsUbah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLPbmnsUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPbmnsUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPbmnsUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPbmnsUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPbmnsUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPbmnsUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPbmnsUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPbmnsUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPbmnsUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPbmnsUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPbmnsUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPbmnsUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPbmnsUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPbmnsUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLPbmnsUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPbmnsUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPspBmnLain == null ? 1 : dsGridRtlPspBmnLain.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPbmnsUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLPbmnsUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPbmnsUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPbmnsUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLPbmnsUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPbmnsUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPbmnsUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRtlPbmns.IndexOf(gridRTLPbmns.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlPbmns.Remove(gridRTLPbmns.dataTerpilih);
                        dsGridRtlPbmns.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlPbmns.Remove(gridRTLPbmns.dataTerpilih);
                        break;
                }
                gridRTLPbmns.dsDataSource = dsGridRtlPbmns;
                gridRTLPbmns.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkPspBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPbmns(SvcWasdalPSPBMNLAINSkSelect.WASDALSROW_READ_WASDAL_PSP_LAIN _skTerpilih)
        {
            formRTLPbmnsTambah = new KSK.TL.PBMNS.ucRTLPBMNSForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPbmns = new SimpanDataRtl(simpanDataRtlPbmns)
            };
            formRTLPbmnsTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPbmnsTambah);
            formRTLPbmnsTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        
        #endregion Simpan Data ASP BMN

        #region action button
        KSK.TL.PBMNS.frmPuSk formSkPbmns;

        private void RkmTlPBMNSTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan05), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPbmns = new KSK.TL.PBMNS.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPbmns = new PilihSkPengguna(pilihSkPbmns)
                };
                formSkPbmns.ShowDialog();
            }
        }

        private void RkmTlPBMNSEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPbmns.dataTerpilih != null)
            {
                if (formRTLPbmnsUbah == null)
                {
                    formRTLPbmnsUbah = new KSK.TL.PBMNS.ucRTLPBMNSForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPbmns = new SimpanDataRtl(simpanDataRtlPbmns)
                    };
                }
                formRTLPbmnsUbah.dataTerpilih = gridRTLPbmns.dataTerpilih;
                setPanel(formRTLPbmnsUbah);
                formRTLPbmnsUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBMNSHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPbmns.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPbmns.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPBmns();
                }
            }
        }

        private void RkmTlPBMNSDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPbmns.dataTerpilih != null)
            {
                if (formRTLPbmnsDetail == null)
                {
                    formRTLPbmnsDetail = new KSK.TL.PBMNS.ucRTLPBMNSForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPbmns = new SimpanDataRtl(simpanDataRtlPbmns)
                    };
                }
                formRTLPbmnsDetail.dataTerpilih = gridRTLPbmns.dataTerpilih;
                setPanel(formRTLPbmnsDetail);
                formRTLPbmnsDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBMNSRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPbmns.teNamaKolom.Text = "";
            gridRTLPbmns.teCari.Text = "";
            gridRTLPbmns.fieldDicari = "";
            gridRTLPbmns.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPbmns();
        }

        private void RkmTlPBMNSMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPbmns();
            }
        }

        private void RkmTlPBMNSTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void cariDataRkmTlPbmns(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlPbmns();
        }

        private void RkmTlPBMNSKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPBMNS;
            konfigApp.kdPelayanan = "05";
            konfigApp.namaPelayanan = this.subMenuMonPBMNS;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBMNS();
            modeCari = false;
            gridRTLPbmns.teNamaKolom.Text = "";
            gridRTLPbmns.teCari.Text = "";
            gridRTLPbmns.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPbmns();
        }

        #endregion

        #endregion
        
        #region SEWA BMN

        KSK.TL.SWBMN.ucRTLSewaBmnGrid gridRTLSwBmn;
        KSK.TL.SWBMN.ucRTLSewaBmnForm formRTLSwBmnTambah;
        KSK.TL.SWBMN.ucRTLSewaBmnForm formRTLSwBmnUbah;
        KSK.TL.SWBMN.ucRTLSewaBmnForm formRTLSwBmnDetail;
        private ArrayList dsGridRtlSwBmn;
        SvcWasdalManfaatTdLanjutSelect.OutputParameters dOutRtlSwBmn;
        SvcWasdalManfaatTdLanjutSelect.execute_pttClient ambilRtlSwBmn;


        private void nbiTLSWBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonSWBMN;
            konfigApp.kdPelayanan = "06";
            konfigApp.namaPelayanan = this.subMenuMonSWBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlSWBMN();
            modeCari = false;
            gridRTLSwBmn.teNamaKolom.Text = "";
            gridRTLSwBmn.teCari.Text = "";
            gridRTLSwBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlSwBmn();
        }

        private void setEventBtnTlSWBMN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNTambah);
            this.bbiRkmTlEdit.ItemClick +=new ItemClickEventHandler(this.RkmTlSWBMNEdit);
            this.bbiRkmTlHapus.ItemClick +=new ItemClickEventHandler(this.RkmTlSWBMNHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlSWBMNTutup);

        }

        public void initGridRkmTlSWBMN()
        {

            //if (gridRTLSwBmn == null)
            //{
                gridRTLSwBmn = new KSK.TL.SWBMN.ucRTLSewaBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlSwBmn),
                    detailDataGrid = new DetailDataGrid(RkmTlSWBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlSWBMN();
            setPanel(gridRTLSwBmn);
        }

        #region --++ Ambil Data SEWA BMN
        private void getInitRkmTlSwBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutSelect.InputParameters parInp = new SvcWasdalManfaatTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlSwBmn = new SvcWasdalManfaatTdLanjutSelect.execute_pttClient();
                ambilRtlSwBmn.Open();
                ambilRtlSwBmn.Beginexecute(parInp, new AsyncCallback(getRkmTlSwBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlSwBmn(IAsyncResult result)
        {
            try
            {
                dOutRtlSwBmn = ambilRtlSwBmn.Endexecute(result);
                ambilRtlSwBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlSwBmn(dsRtlSwBmn), dOutRtlSwBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlSwBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlSwBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_MANFAAT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlSwBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].UR_SATKER = konfigApp.namaSatker;
                dsGridRtlSwBmn.Add(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i]);
            }

            gridRTLSwBmn.sbCariOnline.Enabled = !modeCari;
            gridRTLSwBmn.dsDataSource = dsGridRtlSwBmn;
            gridRTLSwBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLSwBmn.teNamaKolom.Text.Trim();
                string xDua = gridRTLSwBmn.teCari.Text.Trim();
                string xTiga = gridRTLSwBmn.fieldDicari;
                gridRTLSwBmn.gvGridSk.ClearColumnsFilter();
                gridRTLSwBmn.teNamaKolom.Text = xSatu;
                gridRTLSwBmn.teCari.Text = xDua;
                gridRTLSwBmn.fieldDicari = xTiga;
            }
            else
                gridRTLSwBmn.gvGridSk.ClearColumnsFilter();
            gridRTLSwBmn.labelTotData.Text = "";
            gridRTLSwBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data SEWA BMN
        SvcWasdalManfaatTdLanjutCud.OutputParameters dOutAmbilDataSwBmn;
        SvcWasdalManfaatTdLanjutCud.execute_pttClient ambilDataSwBmn;

        private void simpanDataRtlSwBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLSwBmnTambah.idSkWasdal : formRTLSwBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLSwBmnTambah.idSkTL : formRTLSwBmnUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_KD_PELAYANAN = "06";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode=="D") ? formRTLSwBmnTambah.teNomorSk.Text.Trim() : formRTLSwBmnUbah.teNomorSk.Text.Trim() );
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode=="D") ? formRTLSwBmnTambah.teNoBuktiLaksana.Text.Trim() : formRTLSwBmnUbah.teNoBuktiLaksana.Text.Trim() );
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode=="D") ? formRTLSwBmnTambah.cbJnsDokLaksana.SelectedText : formRTLSwBmnUbah.cbJnsDokLaksana.SelectedText );
                parInp.P_TGL_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode=="D") ? konfigApp.DateToString(formRTLSwBmnTambah.deTglBuktiLaksana.DateTime) : konfigApp.DateToString(formRTLSwBmnUbah.deTglBuktiLaksana.DateTime));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode=="D") ? formRTLSwBmnTambah.teKetBukti.Text : formRTLSwBmnUbah.teKetBukti.Text );
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU" ) ? konfigApp.convert2byte(formRTLSwBmnTambah.filePath) : konfigApp.convert2byte(formRTLSwBmnUbah.filePath));
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataSwBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataSwBmn.Beginexecute(parInp, new AsyncCallback(cudRtlSwBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlSwBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRTLSwBmn.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = gridRTLSwBmn.dataTerpilih.ID_TL_WASDAL_MANFAAT;
                parInp.P_SK_KEPUTUSAN = gridRTLSwBmn.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLSwBmn.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLSwBmn.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLSwBmn.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLSwBmn.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataSwBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataSwBmn.Beginexecute(parInp, new AsyncCallback(cudRtlSwBmn), "");

            }
            catch {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }
     
        private void cudRtlSwBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataSwBmn = ambilDataSwBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlSwBmn(this.ubahDsRtlSwBmn), dOutAmbilDataSwBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog + "\r\n" + dOutAmbilDataSwBmn.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlSwBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPpBmn = 0;

        private void ubahDsRtlSwBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLSwBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLSwBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLSwBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLSwBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLSwBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLSwBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLSwBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLSwBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLSwBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLSwBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLSwBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLSwBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLSwBmnTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLSwBmnTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLSwBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLSwBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlSwBmn == null ? 1 : dsGridRtlSwBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLSwBmnTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLSwBmnTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLSwBmnTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLSwBmnTambah.teKetBukti.Text;
                        
                        dataPenyama.TIPE_PEMOHON = formRTLSwBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLSwBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLSwBmnTambah.teNamaPemohon.Text;
                        dsGridRtlSwBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLSwBmn.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLSwBmnTambah.gcDaftarAset.Enabled = true;
                            formRTLSwBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.sbCariPemohon.Enabled = false;
                            formRTLSwBmnTambah.sbRefresh.Enabled = true;
                            formRTLSwBmnTambah.sbTambah.Enabled = true;
                            formRTLSwBmnTambah.sbHapus.Enabled = true;
                            formRTLSwBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.cePilihSemua.Enabled = true;
                            formRTLSwBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLSwBmnTambah.statusForm = "CU";
                            formRTLSwBmnTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskSwBmn.IndexOf(gridSkSwBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkSwBmn.dataTerpilih = gridSkSwBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlSwBmn.IndexOf(gridRTLSwBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlSwBmn.Remove(gridRTLSwBmn.dataTerpilih);
                            dsGridRtlSwBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLSwBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLSwBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLSwBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLSwBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLSwBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLSwBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLSwBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLSwBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLSwBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLSwBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLSwBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLSwBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLSwBmnUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLSwBmnUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLSwBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLSwBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlSwBmn == null ? 1 : dsGridRtlSwBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLSwBmnUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLSwBmnUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLSwBmnUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLSwBmnUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLSwBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLSwBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLSwBmnUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRtlSwBmn.IndexOf(gridRTLSwBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlSwBmn.Remove(gridRTLSwBmn.dataTerpilih);
                        dsGridRtlSwBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlSwBmn.Remove(gridRTLSwBmn.dataTerpilih);
                        break;
                }
                gridRTLSwBmn.dsDataSource = dsGridRtlSwBmn;
                gridRTLSwBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkSwBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSk(SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT _skTerpilih)  
        {
            formRTLSwBmnTambah = new KSK.TL.SWBMN.ucRTLSewaBmnForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlSwBmn = new SimpanDataRtl(simpanDataRtlSwBmn)
            };
            formRTLSwBmnTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLSwBmnTambah);
            formRTLSwBmnTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data PSP BMN

        #region action button
        KSK.TL.SWBMN.frmPuSk formSk;

        private void RkmTlSWBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan06), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSk = new KSK.TL.SWBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSk(pilihSk)
                };
                formSk.ShowDialog();
            }
        }

        private void RkmTlSWBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLSwBmn.dataTerpilih != null)
            {
                if (formRTLSwBmnUbah == null)
                {
                    formRTLSwBmnUbah = new KSK.TL.SWBMN.ucRTLSewaBmnForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlSwBmn = new SimpanDataRtl(simpanDataRtlSwBmn)
                    };
                }
                formRTLSwBmnUbah.dataTerpilih = gridRTLSwBmn.dataTerpilih;
                setPanel(formRTLSwBmnUbah);
                formRTLSwBmnUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlSWBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLSwBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLSwBmn.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlSwBmn();
                }
            }
        }

        private void RkmTlSWBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLSwBmn.dataTerpilih != null)
            {
                if (formRTLSwBmnDetail == null)
                {
                    formRTLSwBmnDetail = new KSK.TL.SWBMN.ucRTLSewaBmnForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlSwBmn = new SimpanDataRtl(simpanDataRtlSwBmn)
                    };
                }
                formRTLSwBmnDetail.dataTerpilih = gridRTLSwBmn.dataTerpilih;
                setPanel(formRTLSwBmnDetail);
                formRTLSwBmnDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlSWBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLSwBmn.teNamaKolom.Text = "";
            gridRTLSwBmn.teCari.Text = "";
            gridRTLSwBmn.fieldDicari = "";
            gridRTLSwBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlSwBmn();
        }

        private void RkmTlSWBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlSwBmn();
            }
        }

        private void RkmTlSWBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonSWBMN;
            konfigApp.kdPelayanan = "06";
            konfigApp.namaPelayanan = this.subMenuMonSWBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlSWBMN();
            modeCari = false;
            gridRTLSwBmn.teNamaKolom.Text = "";
            gridRTLSwBmn.teCari.Text = "";
            gridRTLSwBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlSwBmn();
        }

        private void RkmTlSWBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmTlSwBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlSwBmn();
        }

        #endregion

        #region PINJAM PAKAI BMN

        KSK.TL.PPBMN.ucRTLPpBmnGrid gridRTLPpBmn;
        KSK.TL.PPBMN.ucRTLPpBmnForm formRTLPpBmnTambah;
        KSK.TL.PPBMN.ucRTLPpBmnForm formRTLPpBmnUbah;
        KSK.TL.PPBMN.ucRTLPpBmnForm formRTLPpBmnDetail;
        private ArrayList dsGridRtlPpBmn;
        SvcWasdalManfaatTdLanjutSelect.OutputParameters dOutRtlPpBmn;
        SvcWasdalManfaatTdLanjutSelect.execute_pttClient ambilRtlPpBmn;

        private void nbiTLPPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPPBMN;
            konfigApp.kdPelayanan = "07";
            konfigApp.namaPelayanan = this.subMenuMonPPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPPBMN();
            modeCari = false;
            gridRTLPpBmn.teNamaKolom.Text = "";
            gridRTLPpBmn.teCari.Text = "";
            gridRTLPpBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPpBmn();
        }

        private void setEventBtnTlPPBMN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPPBMNTutup);
        }

        public void initGridRkmTlPPBMN()
        {

            //if (gridRTLPpBmn == null)
            //{
                gridRTLPpBmn = new KSK.TL.PPBMN.ucRTLPpBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPpBmn),
                    detailDataGrid = new DetailDataGrid(RkmTlPPBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPPBMN();
            setPanel(gridRTLPpBmn);
        }

        #region --++ Ambil Data PAKAI PINJAM BMN
        private void getInitRkmTlPpBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutSelect.InputParameters parInp = new SvcWasdalManfaatTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPpBmn = new SvcWasdalManfaatTdLanjutSelect.execute_pttClient();
                ambilRtlPpBmn.Open();
                ambilRtlPpBmn.Beginexecute(parInp, new AsyncCallback(getRkmTlPpBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPpBmn(IAsyncResult result)
        {
            try
            {
                dOutRtlPpBmn = ambilRtlPpBmn.Endexecute(result);
                ambilRtlPpBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPpBmn(dsRtlPpBmn), dOutRtlPpBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPpBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlPpBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_MANFAAT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRtlPpBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].UR_SATKER = konfigApp.namaSatker;
                dsGridRtlPpBmn.Add(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i]);
            }

            gridRTLPpBmn.sbCariOnline.Enabled = !modeCari;
            gridRTLPpBmn.dsDataSource = dsGridRtlPpBmn;
            gridRTLPpBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPpBmn.teNamaKolom.Text.Trim();
                string xDua = gridRTLPpBmn.teCari.Text.Trim();
                string xTiga = gridRTLPpBmn.fieldDicari;
                gridRTLPpBmn.gvGridPPBMNSk.ClearColumnsFilter();
                gridRTLPpBmn.teNamaKolom.Text = xSatu;
                gridRTLPpBmn.teCari.Text = xDua;
                gridRTLPpBmn.fieldDicari = xTiga;
            }
            else
                gridRTLPpBmn.gvGridPPBMNSk.ClearColumnsFilter();
            gridRTLPpBmn.labelTotData.Text = "";
            gridRTLPpBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }

        #endregion Ambil PP BMN

        #region --++ Simpan Data PAKAI PINJAM BMN
        SvcWasdalManfaatTdLanjutCud.OutputParameters dOutAmbilDataPpBmn;
        SvcWasdalManfaatTdLanjutCud.execute_pttClient ambilDataPpBmn;

        private void simpanDataRtlPpBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.idSkWasdal : formRTLPpBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.idSkTL : formRTLPpBmnUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_KD_PELAYANAN = "07";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.teNomorSk.Text.Trim() : formRTLPpBmnUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.teNoBuktiLaksana.Text.Trim() : formRTLPpBmnUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.cbJnsDokLaksana.SelectedText : formRTLPpBmnUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.teTanggalSk.EditValue : formRTLPpBmnUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPpBmnTambah.teKetBukti.Text : formRTLPpBmnUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPpBmnTambah.filePath) : konfigApp.convert2byte(formRTLPpBmnUbah.filePath));
                
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPpBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataPpBmn.Beginexecute(parInp, new AsyncCallback(cudRtlPpBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPpBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRTLPpBmn.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = gridRTLPpBmn.dataTerpilih.ID_TL_WASDAL_MANFAAT;
                parInp.P_SK_KEPUTUSAN = gridRTLPpBmn.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPpBmn.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLPpBmn.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLPpBmn.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLPpBmn.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPpBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataPpBmn.Beginexecute(parInp, new AsyncCallback(cudRtlPpBmn), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPpBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPpBmn = ambilDataPpBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPpBmn(this.ubahDsRtlPpBmn), dOutAmbilDataPpBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog + "\r\n" + dOutAmbilDataPpBmn.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPpBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapa2 = 0;

        private void ubahDsRtlPpBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPpBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPpBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPpBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPpBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPpBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPpBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPpBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPpBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPpBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPpBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPpBmnTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPpBmnTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLPpBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPpBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPpBmn == null ? 1 : dsGridRtlPpBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPpBmnTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLPpBmnTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPpBmnTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPpBmnTambah.teKetBukti.Text;
                        
                        dataPenyama.TIPE_PEMOHON = formRTLPpBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPpBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPpBmnTambah.teNamaPemohon.Text;
                        dsGridRtlPpBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPpBmn.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLPpBmnTambah.gcDaftarAset.Enabled = true;
                            formRTLPpBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.sbCariPemohon.Enabled = false;
                            formRTLPpBmnTambah.sbRefresh.Enabled = true;
                            formRTLPpBmnTambah.sbHapus.Enabled = true;
                            formRTLPpBmnTambah.sbTambah.Enabled = true; 
                            formRTLPpBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.cePilihSemua.Enabled = true;
                            formRTLPpBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPpBmnTambah.statusForm = "CU";
                            formRTLPpBmnTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRtlPpBmn.IndexOf(gridRTLPpBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRtlPpBmn.Remove(gridRTLPpBmn.dataTerpilih);
                            dsGridRtlPpBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPpBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPpBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPpBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLPpBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPpBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPpBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPpBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPpBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPpBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPpBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPpBmnUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPpBmnUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLPpBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPpBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRtlPpBmn == null ? 1 : dsGridRtlPpBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLPpBmnUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLPpBmnUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLPpBmnUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLPpBmnUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLPpBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPpBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPpBmnUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRtlPpBmn.IndexOf(gridRTLPpBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRtlPpBmn.Remove(gridRTLPpBmn.dataTerpilih);
                        dsGridRtlPpBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRtlPpBmn.Remove(gridRTLPpBmn.dataTerpilih);
                        break;
                }
                gridRTLPpBmn.dsDataSource = dsGridRtlPpBmn;
                gridRTLPpBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain + "\r\n" + dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPP(SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT _skTerpilih)
        {
            formRTLPpBmnTambah = new KSK.TL.PPBMN.ucRTLPpBmnForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPpBmn = new SimpanDataRtl(simpanDataRtlPpBmn)
            };
            formRTLPpBmnTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPpBmnTambah);
            formRTLPpBmnTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data PP BMN

        #region action button
        KSK.TL.PPBMN.frmPuSk formSkPP;

        private void RkmTlPPBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan07), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPP = new KSK.TL.PPBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPP = new PilihSk(pilihSkPP)
                };
                formSkPP.ShowDialog();
            }
        }

        private void RkmTlPPBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPpBmn.dataTerpilih != null)
            {
                if (formRTLPpBmnUbah == null)
                {
                    formRTLPpBmnUbah = new KSK.TL.PPBMN.ucRTLPpBmnForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPpBmn = new SimpanDataRtl(simpanDataRtlPpBmn)
                    };
                }
                formRTLPpBmnUbah.dataTerpilih = gridRTLPpBmn.dataTerpilih;
                setPanel(formRTLPpBmnUbah);
                formRTLPpBmnUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPPBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ;
            if (gridRTLPpBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPpBmn.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPpBmn();
                }
            }
        }

        private void RkmTlPPBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPpBmn.dataTerpilih != null)
            {
                if (formRTLPpBmnDetail == null)
                {
                    formRTLPpBmnDetail = new KSK.TL.PPBMN.ucRTLPpBmnForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPpBmn = new SimpanDataRtl(simpanDataRtlPpBmn)
                    };
                }
                formRTLPpBmnDetail.dataTerpilih = gridRTLPpBmn.dataTerpilih;
                setPanel(formRTLPpBmnDetail);
                formRTLPpBmnDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPpBmn.teNamaKolom.Text = "";
            gridRTLPpBmn.teCari.Text = "";
            gridRTLPpBmn.fieldDicari = "";
            gridRTLPpBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPpBmn();
        }

        private void RkmTlPPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPpBmn();
            }
        }

        private void RkmTlPPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlPPBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPPBMN;
            konfigApp.kdPelayanan = "07";
            konfigApp.namaPelayanan = this.subMenuMonPPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPPBMN();
            modeCari = false;
            gridRTLPpBmn.teNamaKolom.Text = "";
            gridRTLPpBmn.teCari.Text = "";
            gridRTLPpBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPpBmn();
        }

        private void cariDataRkmTlPpBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlPpBmn();
        }

        #endregion

        #endregion

        #region KERJASAMA PEMANFAATAN BMN

        KSK.TL.KPBMN.ucRTLKpBmnGrid gridRTLKpBmn;
        KSK.TL.KPBMN.ucRTLKpBmnForm formRTLKpBmnTambah;
        KSK.TL.KPBMN.ucRTLKpBmnForm formRTLKpBmnUbah;
        KSK.TL.KPBMN.ucRTLKpBmnForm formRTLKpBmnDetail;
        private ArrayList dsgridRTLKpBmn;
        SvcWasdalManfaatTdLanjutSelect.OutputParameters dOutRtlKpBmn;
        SvcWasdalManfaatTdLanjutSelect.execute_pttClient ambilRtlKpBmn;


        private void nbiTLKPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonKPBMN;
            konfigApp.kdPelayanan = "08";
            konfigApp.namaPelayanan = this.subMenuMonKPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlKPBMN();
            modeCari = false;
            gridRTLKpBmn.teNamaKolom.Text = "";
            gridRTLKpBmn.teCari.Text = "";
            gridRTLKpBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlKpBmn();
        }

        private void setEventBtnTlKPBMN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlKPBMNTutup);
        }

        public void initGridRkmTlKPBMN()
        {

            //if (gridRTLKpBmn == null)
            //{
                gridRTLKpBmn = new KSK.TL.KPBMN.ucRTLKpBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlKpBmn),
                    detailDataGrid = new DetailDataGrid(RkmTlKPBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlKPBMN();
            setPanel(gridRTLKpBmn);
        }

        #region --++ Ambil Data KERJASAMA PEMANFAATAN BMN
        private void getInitRkmTlKpBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutSelect.InputParameters parInp = new SvcWasdalManfaatTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlKpBmn = new SvcWasdalManfaatTdLanjutSelect.execute_pttClient();
                ambilRtlKpBmn.Open();
                ambilRtlKpBmn.Beginexecute(parInp, new AsyncCallback(getRkmTlKpBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlKpBmn(IAsyncResult result)
        {
            try
            {
                dOutRtlKpBmn = ambilRtlKpBmn.Endexecute(result);
                ambilRtlKpBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlKpBmn(dsRtlKpBmn), dOutRtlKpBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlKpBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlKpBmn(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_MANFAAT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLKpBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLKpBmn.Add(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i]);
            }

            gridRTLKpBmn.sbCariOnline.Enabled = !modeCari;
            gridRTLKpBmn.dsDataSource = dsgridRTLKpBmn;
            gridRTLKpBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLKpBmn.teNamaKolom.Text.Trim();
                string xDua = gridRTLKpBmn.teCari.Text.Trim();
                string xTiga = gridRTLKpBmn.fieldDicari;
                gridRTLKpBmn.gvGridKPBMNSk.ClearColumnsFilter();
                gridRTLKpBmn.teNamaKolom.Text = xSatu;
                gridRTLKpBmn.teCari.Text = xDua;
                gridRTLKpBmn.fieldDicari = xTiga;
            }
            else
                gridRTLKpBmn.gvGridKPBMNSk.ClearColumnsFilter();
            gridRTLKpBmn.labelTotData.Text = "";
            gridRTLKpBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PP BMN

        #region --++ Simpan Data KERJASAMA PEMANFAATAN BMN
        SvcWasdalManfaatTdLanjutCud.OutputParameters dOutAmbilDataKpBmn;
        SvcWasdalManfaatTdLanjutCud.execute_pttClient ambilDataKpBmn;

        private void simpanDataRtlKpBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.idSkWasdal : formRTLKpBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.idSkTL : formRTLKpBmnUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_KD_PELAYANAN = "08";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.teNomorSk.Text.Trim() : formRTLKpBmnUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.teNoBuktiLaksana.Text.Trim() : formRTLKpBmnUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.cbJnsDokLaksana.SelectedText : formRTLKpBmnUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.teTanggalSk.EditValue : formRTLKpBmnUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLKpBmnTambah.teKetBukti.Text : formRTLKpBmnUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLKpBmnTambah.filePath) : konfigApp.convert2byte(formRTLKpBmnUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataKpBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataKpBmn.Beginexecute(parInp, new AsyncCallback(cudRtlKpBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlKpBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRTLKpBmn.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = gridRTLKpBmn.dataTerpilih.ID_TL_WASDAL_MANFAAT;
                parInp.P_SK_KEPUTUSAN = gridRTLKpBmn.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLKpBmn.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLKpBmn.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLKpBmn.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLKpBmn.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataKpBmn = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataKpBmn.Beginexecute(parInp, new AsyncCallback(cudRtlKpBmn), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlKpBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataKpBmn = ambilDataKpBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlKpBmn(this.ubahDsRtlKpBmn), dOutAmbilDataKpBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataKpBmn.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlKpBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaKPBMN = 0;

        private void ubahDsRtlKpBmn(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLKpBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLKpBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLKpBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLKpBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLKpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLKpBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLKpBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLKpBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLKpBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLKpBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLKpBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLKpBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLKpBmnTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLKpBmnTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLKpBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLKpBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLKpBmn == null ? 1 : dsgridRTLKpBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLKpBmnTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLKpBmnTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLKpBmnTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLKpBmnTambah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLKpBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLKpBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLKpBmnTambah.teNamaPemohon.Text;
                        dsgridRTLKpBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLKpBmn.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLKpBmnTambah.gcDaftarAset.Enabled = true;
                            formRTLKpBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.sbCariPemohon.Enabled = false;
                            formRTLKpBmnTambah.sbRefresh.Enabled = true;
                            formRTLKpBmnTambah.sbHapus.Enabled = true;
                            formRTLKpBmnTambah.sbTambah.Enabled = true;
                            formRTLKpBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.cePilihSemua.Enabled = true;
                            formRTLKpBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLKpBmnTambah.statusForm = "CU";
                            formRTLKpBmnTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLKpBmn.IndexOf(gridRTLKpBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLKpBmn.Remove(gridRTLKpBmn.dataTerpilih);
                            dsgridRTLKpBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLKpBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLKpBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLKpBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLKpBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLKpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLKpBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLKpBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLKpBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLKpBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLKpBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLKpBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLKpBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLKpBmnUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLKpBmnUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLKpBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLKpBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLKpBmn == null ? 1 : dsgridRTLKpBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLKpBmnUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLKpBmnUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLKpBmnUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLKpBmnUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLKpBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLKpBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLKpBmnUbah.teNamaPemohon.Text;
                        _indeksData = dsgridRTLKpBmn.IndexOf(gridRTLKpBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLKpBmn.Remove(gridRTLKpBmn.dataTerpilih);
                        dsgridRTLKpBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLKpBmn.Remove(gridRTLKpBmn.dataTerpilih);
                        break;
                }
                gridRTLKpBmn.dsDataSource = dsgridRTLKpBmn;
                gridRTLKpBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkKP(SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT _skTerpilih)
        {
            formRTLKpBmnTambah = new KSK.TL.KPBMN.ucRTLKpBmnForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlKpBmn = new SimpanDataRtl(simpanDataRtlKpBmn)
            };
            formRTLKpBmnTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLKpBmnTambah);
            formRTLKpBmnTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data KP BMN

        #region action button
        KSK.TL.KPBMN.frmPuSk formSkKP;

        private void RkmTlKPBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan08), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkKP = new KSK.TL.KPBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkKP = new PilihSk(pilihSkKP)
                };
                formSkKP.ShowDialog();
            }
        }

        private void RkmTlKPBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLKpBmn.dataTerpilih != null)
            {
                if (formRTLKpBmnUbah == null)
                {
                    formRTLKpBmnUbah = new KSK.TL.KPBMN.ucRTLKpBmnForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlKpBmn = new SimpanDataRtl(simpanDataRtlKpBmn)
                    };
                }
                formRTLKpBmnUbah.dataTerpilih = gridRTLKpBmn.dataTerpilih;
                setPanel(formRTLKpBmnUbah);
                formRTLKpBmnUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlKPBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLKpBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLKpBmn.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlKpBmn();
                }
            }
        }

        private void RkmTlKPBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLKpBmn.dataTerpilih != null)
            {
                if (formRTLKpBmnDetail == null)
                {
                    formRTLKpBmnDetail = new KSK.TL.KPBMN.ucRTLKpBmnForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlKpBmn = new SimpanDataRtl(simpanDataRtlKpBmn)
                    };
                }
                formRTLKpBmnDetail.dataTerpilih = gridRTLKpBmn.dataTerpilih;
                setPanel(formRTLKpBmnDetail);
                formRTLKpBmnDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlKPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLKpBmn.teNamaKolom.Text = "";
            gridRTLKpBmn.teCari.Text = "";
            gridRTLKpBmn.fieldDicari = "";
            gridRTLKpBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlKpBmn();
        }

        private void RkmTlKPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlKpBmn();
            }
        }

        private void RkmTlKPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlKPBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonKPBMN;
            konfigApp.kdPelayanan = "08";
            konfigApp.namaPelayanan = this.subMenuMonKPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlKPBMN();
            modeCari = false;
            gridRTLKpBmn.teNamaKolom.Text = "";
            gridRTLKpBmn.teCari.Text = "";
            gridRTLKpBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlKpBmn();
        }

        private void cariDataRkmTlKpBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlKpBmn();
        }

        #endregion

        #endregion

        #region KSPI

        KSK.TL.BGS.ucRTLBGSGrid1 gridRTLBGS;
        KSK.TL.BGS.ucRTLBGSForm1 formRTLBGSTambah;
        KSK.TL.BGS.ucRTLBGSForm1 formRTLBGSUbah;
        KSK.TL.BGS.ucRTLBGSForm1 formRTLBGSDetail;
        private ArrayList dsgridRTLBGS;
        SvcWasdalManfaatTdLanjutSelect.OutputParameters dOutRtlBGS;
        SvcWasdalManfaatTdLanjutSelect.execute_pttClient ambilRtlBGS;


        private void nbiTLBGS_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = konfigApp.namaLayanan09;
            konfigApp.kdPelayanan = "09";
            konfigApp.namaPelayanan =konfigApp.namaLayanan09;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBGS();
            modeCari = false;
            gridRTLBGS.teNamaKolom.Text = "";
            gridRTLBGS.teCari.Text = "";
            gridRTLBGS.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBGS();
        }

        private void setEventBtnTlBGS()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlBGSTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlBGSEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlBGSHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlBGSRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlBGSMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlBGSDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlBGSKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlBGSTutup);

        }

        public void initGridRkmTlBGS()
        {

            //if (gridRTLBGS == null)
            //{
                gridRTLBGS = new KSK.TL.BGS.ucRTLBGSGrid1()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlBGS),
                    detailDataGrid = new DetailDataGrid(RkmTlBGSEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlBGS();
            setPanel(gridRTLBGS);
        }

        #region --++ Ambil Data KSPI
        private void getInitRkmTlBGS()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutSelect.InputParameters parInp = new SvcWasdalManfaatTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '09' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {0} {1}", konfigApp.idSatker, this.strCari);
                ambilRtlBGS = new SvcWasdalManfaatTdLanjutSelect.execute_pttClient();
                ambilRtlBGS.Open();
                ambilRtlBGS.Beginexecute(parInp, new AsyncCallback(getRkmTlBGS), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlBGS(IAsyncResult result)
        {
            try
            {
                dOutRtlBGS = ambilRtlBGS.Endexecute(result);
                ambilRtlBGS.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlBGS(dsRtlBGS), dOutRtlBGS);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlBGS(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlBGS(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_MANFAAT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLBGS = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLBGS.Add(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i]);
            }

            gridRTLBGS.sbCariOnline.Enabled = !modeCari;
            gridRTLBGS.dsDataSource = dsgridRTLBGS;
            gridRTLBGS.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLBGS.teNamaKolom.Text.Trim();
                string xDua = gridRTLBGS.teCari.Text.Trim();
                string xTiga = gridRTLBGS.fieldDicari;
                gridRTLBGS.gvGridSk.ClearColumnsFilter();
                gridRTLBGS.teNamaKolom.Text = xSatu;
                gridRTLBGS.teCari.Text = xDua;
                gridRTLBGS.fieldDicari = xTiga;
            }
            else
                gridRTLBGS.gvGridSk.ClearColumnsFilter();
            gridRTLBGS.labelTotData.Text = "";
            gridRTLBGS.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil KSPI

        #region --++ Simpan Data KSPI
        SvcWasdalManfaatTdLanjutCud.OutputParameters dOutAmbilDataBGS;
        SvcWasdalManfaatTdLanjutCud.execute_pttClient ambilDataBGS;

        private void simpanDataRtlBGS(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.idSkWasdal : formRTLBGSUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.idSkTL : formRTLBGSUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_KD_PELAYANAN = "09";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.teNomorSk.Text.Trim() : formRTLBGSUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.teNoBuktiLaksana.Text.Trim() : formRTLBGSUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.cbJnsDokLaksana.SelectedText : formRTLBGSUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.teTanggalSk.EditValue : formRTLBGSUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBGSTambah.teKetBukti.Text : formRTLBGSUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLBGSTambah.filePath) : konfigApp.convert2byte(formRTLBGSUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataBGS = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataBGS.Beginexecute(parInp, new AsyncCallback(cudRtlBGS), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlBGS()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRTLBGS.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = gridRTLBGS.dataTerpilih.ID_TL_WASDAL_MANFAAT;
                parInp.P_SK_KEPUTUSAN = gridRTLBGS.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLBGS.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLBGS.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLBGS.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLBGS.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataBGS = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataBGS.Beginexecute(parInp, new AsyncCallback(cudRtlBGS), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlBGS(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBGS = ambilDataBGS.Endexecute(result);
                ambilDataBGS.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlBGS(this.ubahDsRtlBGS), dOutAmbilDataBGS);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataBGS.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlBGS(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaBGS = 0;

        private void ubahDsRtlBGS(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLBGSTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBGSTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBGSTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLBGSTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBGSTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBGSTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBGSTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBGSTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBGSTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBGSTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBGSTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBGSTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLBGSTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBGSTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLBGSTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBGSTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLBGS == null ? 1 : dsgridRTLBGS.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLBGSTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLBGSTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLBGSTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLBGSTambah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLBGSTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLBGSTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBGSTambah.teNamaPemohon.Text;
                        dsgridRTLBGS.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLBGS.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLBGSTambah.gcDaftarAset.Enabled = true;
                            formRTLBGSTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLBGSTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLBGSTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLBGSTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLBGSTambah.sbCariPemohon.Enabled = false;
                            formRTLBGSTambah.sbRefresh.Enabled = true;
                            formRTLBGSTambah.sbTambah.Enabled = true;
                            formRTLBGSTambah.sbHapus.Enabled = true;
                            formRTLBGSTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLBGSTambah.cePilihSemua.Enabled = true;
                            formRTLBGSTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLBGSTambah.statusForm = "CU";
                            formRTLBGSTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskBGS.IndexOf(gridSkBGS.dataTerpilih);
                            }
                            else
                            {
                                gridSkBGS.dataTerpilih = gridSkBGS.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLBGS.IndexOf(gridRTLBGS.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLBGS.Remove(gridRTLBGS.dataTerpilih);
                            dsgridRTLBGS.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLBGSUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBGSUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBGSUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLBGSUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBGSUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBGSUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBGSUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBGSUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBGSUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBGSUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBGSUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBGSUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLBGSUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBGSUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLBGSUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBGSUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLBGS == null ? 1 : dsgridRTLBGS.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLBGSUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLBGSUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLBGSUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLBGSUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLBGSUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLBGSUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBGSUbah.teNamaPemohon.Text;
                        _indeksData = dsgridRTLBGS.IndexOf(gridRTLBGS.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLBGS.Remove(gridRTLBGS.dataTerpilih);
                        dsgridRTLBGS.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLBGS.Remove(gridRTLBGS.dataTerpilih);
                        break;
                }
                gridRTLBGS.dsDataSource = dsgridRTLBGS;
                gridRTLBGS.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkBGS();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkBGS(SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT _skTerpilih)
        {
            formRTLBGSTambah = new KSK.TL.BGS.ucRTLBGSForm1("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlBGS = new SimpanDataRtl(simpanDataRtlBGS)
            };
            formRTLBGSTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLBGSTambah);
            formRTLBGSTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion 

        #region Action Button
        KSK.TL.BGS.frmPuSk formSkBGS;

        private void RkmTlBGSTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan09), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkBGS = new KSK.TL.BGS.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSk(pilihSkBGS)
                };
                formSkBGS.ShowDialog();
            }
        }

        private void RkmTlBGSEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBGS.dataTerpilih != null)
            {
                if (formRTLBGSUbah == null)
                {
                    formRTLBGSUbah = new KSK.TL.BGS.ucRTLBGSForm1("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBGS = new SimpanDataRtl(simpanDataRtlBGS)
                    };
                }
                formRTLBGSUbah.dataTerpilih = gridRTLBGS.dataTerpilih;
                setPanel(formRTLBGSUbah);
                formRTLBGSUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBGSHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBGS.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLBGS.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlBGS();
                }
            }
        }

        private void RkmTlBGSDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBGS.dataTerpilih != null)
            {
                if (formRTLBGSDetail == null)
                {
                    formRTLBGSDetail = new KSK.TL.BGS.ucRTLBGSForm1("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBGS = new SimpanDataRtl(simpanDataRtlBGS)
                    };
                }
                formRTLBGSDetail.dataTerpilih = gridRTLBGS.dataTerpilih;
                setPanel(formRTLBGSDetail);
                formRTLBGSDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBGSRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLBGS.teNamaKolom.Text = "";
            gridRTLBGS.teCari.Text = "";
            gridRTLBGS.fieldDicari = "";
            gridRTLBGS.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlBGS();
        }

        private void RkmTlBGSMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlBGS();
            }
        }

        private void RkmTlBGSTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlBGSKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonBGS;
            konfigApp.kdPelayanan = "09";
            konfigApp.namaPelayanan = this.subMenuMonBGS;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBGS();
            modeCari = false;
            gridRTLBGS.teNamaKolom.Text = "";
            gridRTLBGS.teCari.Text = "";
            gridRTLBGS.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBGS();
        }

        private void cariDataRkmTlBGS(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlBGS();
        }

        #endregion
        #endregion

        #region BGS/BSG

        KSK.TL.BSG.ucRTLBSGGrid1 gridRTLBSG;
        KSK.TL.BSG.ucRTLBSGForm1 formRTLBSGTambah;
        KSK.TL.BSG.ucRTLBSGForm1 formRTLBSGUbah;
        KSK.TL.BSG.ucRTLBSGForm1 formRTLBSGDetail;
        private ArrayList dsgridRTLBSG;
        SvcWasdalManfaatTdLanjutSelect.OutputParameters dOutRtlBSG;
        SvcWasdalManfaatTdLanjutSelect.execute_pttClient ambilRtlBSG;


        private void nbiTLBSG_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = konfigApp.namaLayanan10;
            konfigApp.kdPelayanan = "10";
            konfigApp.namaPelayanan = konfigApp.namaLayanan10;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBSG();
            modeCari = false;
            gridRTLBSG.teNamaKolom.Text = "";
            gridRTLBSG.teCari.Text = "";
            gridRTLBSG.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBSG();
        }

        private void setEventBtnTlBSG()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlBSGTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlBSGEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlBSGHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlBSGRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlBSGMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlBSGDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlBSGKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlBSGTutup);

        }

        public void initGridRkmTlBSG()
        {

            //if (gridRTLBSG == null)
            //{
                gridRTLBSG = new KSK.TL.BSG.ucRTLBSGGrid1()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlBSG),
                    detailDataGrid = new DetailDataGrid(RkmTlBSGEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlBSG();
            setPanel(gridRTLBSG);
        }

        #region --++ Ambil Data BGS/BSG
        private void getInitRkmTlBSG()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutSelect.InputParameters parInp = new SvcWasdalManfaatTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlBSG = new SvcWasdalManfaatTdLanjutSelect.execute_pttClient();
                ambilRtlBSG.Open();
                ambilRtlBSG.Beginexecute(parInp, new AsyncCallback(getRkmTlBSG), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlBSG(IAsyncResult result)
        {
            try
            {
                dOutRtlBSG = ambilRtlBSG.Endexecute(result);
                ambilRtlBSG.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlBSG(dsRtlBSG), dOutRtlBSG);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlBSG(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlBSG(SvcWasdalManfaatTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_MANFAAT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_MANFAAT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLBSG = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLBSG.Add(dataOut.SF_TL_SELECT_WASDAL_MANFAAT[i]);
            }

            gridRTLBSG.sbCariOnline.Enabled = !modeCari;
            gridRTLBSG.dsDataSource = dsgridRTLBSG;
            gridRTLBSG.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLBSG.teNamaKolom.Text.Trim();
                string xDua = gridRTLBSG.teCari.Text.Trim();
                string xTiga = gridRTLBSG.fieldDicari;
                gridRTLBSG.gvGridSk.ClearColumnsFilter();
                gridRTLBSG.teNamaKolom.Text = xSatu;
                gridRTLBSG.teCari.Text = xDua;
                gridRTLBSG.fieldDicari = xTiga;
            }
            else
                gridRTLBSG.gvGridSk.ClearColumnsFilter();
            gridRTLBSG.labelTotData.Text = "";
            gridRTLBSG.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil BSG

        #region --++ Simpan Data BGS/BSG
        SvcWasdalManfaatTdLanjutCud.OutputParameters dOutAmbilDataBSG;
        SvcWasdalManfaatTdLanjutCud.execute_pttClient ambilDataBSG;

        private void simpanDataRtlBSG(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.idSkWasdal : formRTLBSGUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.idSkTL : formRTLBSGUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_KD_PELAYANAN = "10";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.teNomorSk.Text.Trim() : formRTLBSGUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.teNoBuktiLaksana.Text.Trim() : formRTLBSGUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.cbJnsDokLaksana.SelectedText : formRTLBSGUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime(((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.teTanggalSk.EditValue : formRTLBSGUbah.teTanggalSk.EditValue)));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBSGTambah.teKetBukti.Text : formRTLBSGUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLBSGTambah.filePath) : konfigApp.convert2byte(formRTLBSGUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataBSG = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataBSG.Beginexecute(parInp, new AsyncCallback(cudRtlBSG), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlBSG()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatTdLanjutCud.InputParameters parInp = new SvcWasdalManfaatTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRTLBSG.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = gridRTLBSG.dataTerpilih.ID_TL_WASDAL_MANFAAT;
                parInp.P_SK_KEPUTUSAN = gridRTLBSG.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLBSG.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLBSG.dataTerpilih.JNS_BUKTI_LAKSANAAN;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLBSG.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLBSG.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataBSG = new SvcWasdalManfaatTdLanjutCud.execute_pttClient();
                ambilDataBSG.Beginexecute(parInp, new AsyncCallback(cudRtlBSG), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRtlBSG(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBSG = ambilDataBSG.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlBSG(this.ubahDsRtlBSG), dOutAmbilDataBSG);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataBSG.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlBSG(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaBSG = 0;

        private void ubahDsRtlBSG(SvcWasdalManfaatTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT dataPenyama = new SvcWasdalManfaatTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_MANFAAT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_BUKTI_LAKSANASpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRTLBSGTambah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRTLBSGTambah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLBSGTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBSGTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBSGTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLBSGTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBSGTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBSGTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBSGTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBSGTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBSGTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBSGTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBSGTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBSGTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLBSGTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBSGTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLBSGTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBSGTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLBSG == null ? 1 : dsgridRTLBSG.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLBSGTambah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLBSGTambah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLBSGTambah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLBSGTambah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLBSGTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLBSGTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBSGTambah.teNamaPemohon.Text;
                        dsgridRTLBSG.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLBSG.dataTerpilih = dataPenyama;
                            _keBerapaPpBmn = 1;
                            formRTLBSGTambah.gcDaftarAset.Enabled = true;
                            formRTLBSGTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLBSGTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLBSGTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLBSGTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLBSGTambah.sbCariPemohon.Enabled = false;
                            formRTLBSGTambah.sbRefresh.Enabled = true;
                            formRTLBSGTambah.sbHapus.Enabled = true;
                            formRTLBSGTambah.sbTambah.Enabled = true;
                            formRTLBSGTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLBSGTambah.cePilihSemua.Enabled = true;
                            formRTLBSGTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLBSGTambah.statusForm = "CU";
                            formRTLBSGTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskBSG.IndexOf(gridSkBSG.dataTerpilih);
                            }
                            else
                            {
                                gridSkBSG.dataTerpilih = gridSkBSG.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLBSG.IndexOf(gridRTLBSG.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLBSG.Remove(gridRTLBSG.dataTerpilih);
                            dsgridRTLBSG.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRTLBSGUbah.idSkWasdal;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRTLBSGUbah.idSkTL;
                        dataPenyama.ID_PEMOHON = formRTLBSGUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBSGUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBSGUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRTLBSGUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBSGUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBSGUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBSGUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBSGUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBSGUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBSGUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBSGUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBSGUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLBSGUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBSGUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRTLBSGUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBSGUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsgridRTLBSG == null ? 1 : dsgridRTLBSG.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NO_BUKTI_LAKSANA = formRTLBSGUbah.teNoBuktiLaksana.Text;
                        dataPenyama.TGL_BUKTI_LAKSANA = Convert.ToDateTime(formRTLBSGUbah.deTglBuktiLaksana.Text);
                        dataPenyama.JNS_BUKTI_LAKSANAAN = formRTLBSGUbah.cbJnsDokLaksana.SelectedText;
                        dataPenyama.KET = formRTLBSGUbah.teKetBukti.Text;

                        dataPenyama.TIPE_PEMOHON = formRTLBSGUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLBSGUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBSGUbah.teNamaPemohon.Text;
                        _indeksData = dsgridRTLBSG.IndexOf(gridRTLBSG.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLBSG.Remove(gridRTLBSG.dataTerpilih);
                        dsgridRTLBSG.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLBSG.Remove(gridRTLBSG.dataTerpilih);
                        break;
                }
                gridRTLBSG.dsDataSource = dsgridRTLBSG;
                gridRTLBSG.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkBSG();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkBSG(SvcWasdalManfaatSkSelect.WASDALSROW_READ_WASDAL_MANFAAT _skTerpilih)
        {
            formRTLBSGTambah = new KSK.TL.BSG.ucRTLBSGForm1("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlBSG = new SimpanDataRtl(simpanDataRtlBSG)
            };
            formRTLBSGTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLBSGTambah);
            formRTLBSGTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion 

        #region Action Button
        KSK.TL.BSG.frmPuSk formSkBSG;

        private void RkmTlBSGTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan10), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkBSG = new KSK.TL.BSG.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSk(pilihSkBSG)
                };
                formSkBSG.ShowDialog();
            }
        }

        private void RkmTlBSGEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBSG.dataTerpilih != null)
            {
                if (formRTLBSGUbah == null)
                {
                    formRTLBSGUbah = new KSK.TL.BSG.ucRTLBSGForm1("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBSG = new SimpanDataRtl(simpanDataRtlBSG)
                    };
                }
                formRTLBSGUbah.dataTerpilih = gridRTLBSG.dataTerpilih;
                setPanel(formRTLBSGUbah);
                formRTLBSGUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBSGHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBSG.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLBSG.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlBSG();
                }
            }
        }

        private void RkmTlBSGDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBSG.dataTerpilih != null)
            {
                if (formRTLBSGDetail == null)
                {
                    formRTLBSGDetail = new KSK.TL.BSG.ucRTLBSGForm1("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBSG = new SimpanDataRtl(simpanDataRtlBSG)
                    };
                }
                formRTLBSGDetail.dataTerpilih = gridRTLBSG.dataTerpilih;
                setPanel(formRTLBSGDetail);
                formRTLBSGDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBSGRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLBSG.teNamaKolom.Text = "";
            gridRTLBSG.teCari.Text = "";
            gridRTLBSG.fieldDicari = "";
            gridRTLBSG.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlBSG();
        }

        private void RkmTlBSGMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlBSG();
            }
        }

        private void RkmTlBSGTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        private void RkmTlBSGKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonBSG;
            konfigApp.kdPelayanan = "10";
            konfigApp.namaPelayanan = this.subMenuMonBSG;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBSG();
            modeCari = false;
            gridRTLBSG.teNamaKolom.Text = "";
            gridRTLBSG.teCari.Text = "";
            gridRTLBSG.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBSG();
        }

        private void cariDataRkmTlBSG(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlBSG();
        }

        #endregion
        #endregion

        #region JUAL

        KSK.TL.PENJUALAN.ucRTLJUALGrid gridRTLJUAL;
        KSK.TL.PENJUALAN.ucRTLJUALForm formRTLJUALTambah;
        KSK.TL.PENJUALAN.ucRTLJUALForm formRTLJUALUbah;
        KSK.TL.PENJUALAN.ucRTLJUALForm formRTLJUALDetail;
        private ArrayList dsgridRTLJUAL;
        SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dOutRtlJUAL;
        SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient ambilRtlJUAL;


        private void nbiTLJUAL_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "11";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlJUAL();
            modeCari = false;
            gridRTLJUAL.teNamaKolom.Text = "";
            gridRTLJUAL.teCari.Text = "";
            gridRTLJUAL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlJUAL();
        }

        private void setEventBtnTlJUAL()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlJUALTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlJUALEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlJUALHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlJUALRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlJUALMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlJUALDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlJUALKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlJUALTutup); 
        }

        public void initGridRkmTlJUAL()
        {

            //if (gridRTLJUAL == null)
            //{
                gridRTLJUAL = new KSK.TL.PENJUALAN.ucRTLJUALGrid() 
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlJUAL),
                    detailDataGrid = new DetailDataGrid(RkmTlJUALEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlJUAL();
            setPanel(gridRTLJUAL);
        }

        #region --++ Ambil Data JUAL
        private void getInitRkmTlJUAL()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutSelect.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlJUAL = new SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient();
                ambilRtlJUAL.Open();
                ambilRtlJUAL.Beginexecute(parInp, new AsyncCallback(getRkmTlJUAL), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlJUAL(IAsyncResult result)
        {
            try
            {
                dOutRtlJUAL = ambilRtlJUAL.Endexecute(result);
                ambilRtlJUAL.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlJUAL(dsRtlJUAL), dOutRtlJUAL);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlJUAL(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlJUAL(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_PT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_PT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLJUAL = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_PT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLJUAL.Add(dataOut.SF_TL_SELECT_WASDAL_PT[i]);
            }

            gridRTLJUAL.sbCariOnline.Enabled = !modeCari;
            gridRTLJUAL.dsDataSource = dsgridRTLJUAL;
            gridRTLJUAL.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLJUAL.teNamaKolom.Text.Trim();
                string xDua = gridRTLJUAL.teCari.Text.Trim();
                string xTiga = gridRTLJUAL.fieldDicari;
                gridRTLJUAL.gvGridSk.ClearColumnsFilter();
                gridRTLJUAL.teNamaKolom.Text = xSatu;
                gridRTLJUAL.teCari.Text = xDua;
                gridRTLJUAL.fieldDicari = xTiga;
            }
            else
                gridRTLJUAL.gvGridSk.ClearColumnsFilter();
            gridRTLJUAL.labelTotData.Text = "";
            gridRTLJUAL.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil JUAL

        #region --++ Simpan Data JUAL
        SvcWasdalPindahtanganTdLanjutCud.OutputParameters dOutAmbilDataJUAL;
        SvcWasdalPindahtanganTdLanjutCud.execute_pttClient ambilDataJUAL;

        private void simpanDataRtlJUAL(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.idSkWasdal : formRTLJUALUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.idSkTL : formRTLJUALUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_KD_PELAYANAN = "11";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode=="D") ? formRTLJUALTambah.teNomorSk.Text.Trim() : formRTLJUALUbah.teNomorSk.Text.Trim() );
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.teNoBuktiLaksana.Text.Trim() : formRTLJUALUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.jnsBuktiStr(formRTLJUALTambah.cbJnsDokLaksana.SelectedIndex) : formRTLJUALUbah.jnsBuktiStr(formRTLJUALUbah.cbJnsDokLaksana.SelectedIndex));
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.deTglBuktiLaksana.EditValue : formRTLJUALUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLJUALTambah.teKetBukti.Text : formRTLJUALUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLJUALTambah.filePath) : konfigApp.convert2byte(formRTLJUALUbah.filePath));

				string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataJUAL = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataJUAL.Beginexecute(parInp, new AsyncCallback(cudRtlJUAL), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlJUAL() 
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRTLJUAL.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = gridRTLJUAL.dataTerpilih.ID_TL_WASDAL_PINDAHTANGAN;
                parInp.P_SK_KEPUTUSAN = gridRTLJUAL.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLJUAL.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLJUAL.dataTerpilih.JNS_BUKTI_LAKSANA;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLJUAL.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLJUAL.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = "11";
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataJUAL = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataJUAL.Beginexecute(parInp, new AsyncCallback(cudRtlJUAL), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlJUAL(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataJUAL = ambilDataJUAL.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlJUAL(this.ubahDsRtlJUAL), dOutAmbilDataJUAL);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataJUAL.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlJUAL(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaJUAL = 0;

        private void ubahDsRtlJUAL(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT dataPenyama = new SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLJUALTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLJUALTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLJUALTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLJUALTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLJUALTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLJUALTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLJUALTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLJUALTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLJUALTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLJUALTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLJUALTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLJUALTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLJUALTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLJUALTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLJUALTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLJUALTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLJUALTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLJUALTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLJUAL == null ? 1 : dsgridRTLJUAL.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLJUALTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLJUALTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLJUALTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLJUALTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLJUALTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLJUALTambah.teUraianKeputusan.Text;
                        dsgridRTLJUAL.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLJUAL.dataTerpilih = dataPenyama;
                            _keBerapaJUAL = 1;
                            formRTLJUALTambah.gcDaftarAset.Enabled = true;
                            formRTLJUALTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLJUALTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLJUALTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLJUALTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLJUALTambah.sbCariPemohon.Enabled = false;
                            formRTLJUALTambah.sbRefresh.Enabled = true;
                            formRTLJUALTambah.sbTambah.Enabled = true;
                            formRTLJUALTambah.sbHapus.Enabled = true;
                            formRTLJUALTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLJUALTambah.cePilihSemua.Enabled = true;
                            formRTLJUALTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLJUALTambah.statusForm = "CU";
                            formRTLJUALTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLJUAL.IndexOf(gridRTLJUAL.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLJUAL.Remove(gridRTLJUAL.dataTerpilih);
                            dsgridRTLJUAL.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLJUALUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLJUALUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLJUALUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLJUALUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLJUALUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLJUALUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLJUALUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLJUALUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLJUALUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLJUALUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLJUALUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLJUALUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLJUALUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLJUALUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLJUAL.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLJUALUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLJUALUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLJUALUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLJUALUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLJUAL.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLJUAL.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLJUALUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLJUAL.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLJUAL.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLJUALUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLJUALUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLJUAL.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLJUAL.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLJUAL.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLJUALUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLJUALUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLJUALUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLJUAL.IndexOf(gridRTLJUAL.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLJUAL.Remove(gridRTLJUAL.dataTerpilih);
                        dsgridRTLJUAL.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLJUAL.Remove(gridRTLJUAL.dataTerpilih);
                        break;
                }
                gridRTLJUAL.dsDataSource = dsgridRTLJUAL;
                gridRTLJUAL.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkJual(SvcWasdalJualSkSelect.WASDALSROW_READ_WASDAL_PT_JUAL _skTerpilih)
        {
            formRTLJUALTambah = new KSK.TL.PENJUALAN.ucRTLJUALForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlJUAL = new SimpanDataRtl(simpanDataRtlJUAL)
            };
            formRTLJUALTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLJUALTambah);
            formRTLJUALTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion 

        #region Action Button
        KSK.TL.PENJUALAN.frmPuSk formSkJual;

        private void RkmTlJUALTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan11), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkJual = new KSK.TL.PENJUALAN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkJual = new PilihSkJual(pilihSkJual) 
                };
                formSkJual.ShowDialog();
            }
        }

        private void RkmTlJUALEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (gridRTLJUAL.dataTerpilih != null)
            {
                if (formRTLJUALUbah == null)
                {
                    formRTLJUALUbah = new KSK.TL.PENJUALAN.ucRTLJUALForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlJUAL = new SimpanDataRtl(simpanDataRtlJUAL)
                    };
                }
                formRTLJUALUbah.dataTerpilih = gridRTLJUAL.dataTerpilih;
                setPanel(formRTLJUALUbah);
                formRTLJUALUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlJUALHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (gridRTLJUAL.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLJUAL.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlJUAL();
                    getInitRkmTlJUAL();
                }
            }
        }

        private void RkmTlJUALDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (gridRTLJUAL.dataTerpilih != null)
            {
                if (formRTLJUALDetail == null)
                {
                    formRTLJUALDetail = new KSK.TL.PENJUALAN.ucRTLJUALForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlJUAL = new SimpanDataRtl(simpanDataRtlJUAL)
                    };
                }
                formRTLJUALDetail.dataTerpilih = gridRTLJUAL.dataTerpilih;
                setPanel(formRTLJUALDetail);
                formRTLJUALDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlJUALRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            strCari = "";
            modeCari = false;
            gridRTLJUAL.teNamaKolom.Text = "";
            gridRTLJUAL.teCari.Text = "";
            gridRTLJUAL.fieldDicari = "";
            gridRTLJUAL.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlJUAL();
        }

        private void RkmTlJUALMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlJUAL();
            }
        }

        private void RkmTlJUALKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "11";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlJUAL();
            modeCari = false;
            gridRTLJUAL.teNamaKolom.Text = "";
            gridRTLJUAL.teCari.Text = "";
            gridRTLJUAL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlJUAL();
        }

        private void RkmTlJUALTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            this.Dispose();
        }

        #endregion Action Button

        private void cariDataRkmTlJUAL(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlJUAL();
        }

        #endregion

        #region TM

        KSK.TL.TMBMN.ucRTLTMGrid gridRTLTM;
        KSK.TL.TMBMN.ucRTLTMForm formRTLTMTambah;
        KSK.TL.TMBMN.ucRTLTMForm formRTLTMUbah;
        KSK.TL.TMBMN.ucRTLTMForm formRTLTMDetail;
        private ArrayList dsgridRTLTM;
        SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dOutRtlTM;
        SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient ambilRtlTM;

        private void nbiTLTM_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonTukar;
            konfigApp.kdPelayanan = "12";
            konfigApp.namaPelayanan = this.subMenuMonTukar;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlTM();
            modeCari = false;
            gridRTLTM.teNamaKolom.Text = "";
            gridRTLTM.teCari.Text = "";
            gridRTLTM.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlTM();
        }

        private void setEventBtnTlTM()
        {
            this.resetEventBtnTlWasdal();
			this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlTMTambah);
            this.bbiRkmTlEdit.ItemClick +=new ItemClickEventHandler(this.RkmTlTMEdit);
            this.bbiRkmTlHapus.ItemClick +=new ItemClickEventHandler(this.RkmTlTMHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlTMRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlTMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlTMDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlTMKembali);
			this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlTMTutup);

        }

        public void initGridRkmTlTM()
        {

            //if (gridRTLTM == null)
            //{
                gridRTLTM = new KSK.TL.TMBMN.ucRTLTMGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlTM),
                    detailDataGrid = new DetailDataGrid(RkmTlTMEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlTM();
            setPanel(gridRTLTM);
        }

        #region --++ Ambil Data TM
        private void getInitRkmTlTM()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutSelect.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlTM = new SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient();
                ambilRtlTM.Open();
                ambilRtlTM.Beginexecute(parInp, new AsyncCallback(getRkmTlTM), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlTM(IAsyncResult result)
        {
            try
            {
                dOutRtlTM = ambilRtlTM.Endexecute(result);
                ambilRtlTM.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlTM(dsRtlTM), dOutRtlTM);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlTM(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlTM(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_PT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_PT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLTM = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_PT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLTM.Add(dataOut.SF_TL_SELECT_WASDAL_PT[i]);
            }

            gridRTLTM.sbCariOnline.Enabled = !modeCari;
            gridRTLTM.dsDataSource = dsgridRTLTM;
            gridRTLTM.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLTM.teNamaKolom.Text.Trim();
                string xDua = gridRTLTM.teCari.Text.Trim();
                string xTiga = gridRTLTM.fieldDicari;
                gridRTLTM.gvGridSk.ClearColumnsFilter();
                gridRTLTM.teNamaKolom.Text = xSatu;
                gridRTLTM.teCari.Text = xDua;
                gridRTLTM.fieldDicari = xTiga;
            }
            else
                gridRTLTM.gvGridSk.ClearColumnsFilter();
            gridRTLTM.labelTotData.Text = "";
            gridRTLTM.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil Data TM

        #region --++ Simpan Data TM
        SvcWasdalPindahtanganTdLanjutCud.OutputParameters dOutAmbilDataTM;
        SvcWasdalPindahtanganTdLanjutCud.execute_pttClient ambilDataTM;

        private void simpanDataRtlTM(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.idSkWasdal : formRTLTMTambah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.idSkTL : formRTLTMTambah.idSkTL);
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_KD_PELAYANAN = "12";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.teNomorSk.Text.Trim() : formRTLTMUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.teNoBuktiLaksana.Text.Trim() : formRTLTMUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.jnsBuktiStr(formRTLTMTambah.cbJnsDokLaksana.SelectedIndex) : formRTLTMUbah.jnsBuktiStr(formRTLJUALUbah.cbJnsDokLaksana.SelectedIndex));
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.deTglBuktiLaksana.EditValue : formRTLTMUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLTMTambah.teKetBukti.Text : formRTLTMUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLTMTambah.filePath) : konfigApp.convert2byte(formRTLTMUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                
                //parInp.P_URAIAN_KEPUTUSAN = ((_mode == "C" || _mode == "CU") ? formRTLTMTambah.teUraianKeputusan.Text : formRTLTMUbah.teUraianKeputusan.Text);

                ambilDataTM = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataTM.Beginexecute(parInp, new AsyncCallback(cudRtlTM), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }
		
		private void HapusDataRtlTM() 
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRTLTM.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = gridRTLTM.dataTerpilih.ID_TL_WASDAL_PINDAHTANGAN;
                parInp.P_SK_KEPUTUSAN = gridRTLTM.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLTM.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLTM.dataTerpilih.JNS_BUKTI_LAKSANA;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLTM.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLTM.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataTM = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataTM.Beginexecute(parInp, new AsyncCallback(cudRtlTM), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlTM(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataTM = ambilDataTM.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlTM(this.ubahDsRtlTM), dOutAmbilDataTM);

            }
            catch(Exception ex)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+ex.Message, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlTM(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaTM = 0;

        private void ubahDsRtlTM(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT dataPenyama = new SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLTMTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLTMTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLTMTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        
                    //dataPenyama.JABATAN_TTD = formRTLTMTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLTMTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLTMTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLTMTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLTMTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLTMTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLTMTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLTMTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLTMTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLTMTambah.teNilaiPenetapan.Text);
                        
                        //dataPenyama.NIP_PENANDATANGAN = formRTLTMTambah.teNipPenandaTangan.Text;
                        
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLTMTambah.teNamaPemohon.Text;
                        
                        //dataPenyama.NM_PENANDATANGAN = formRTLTMTambah.teNamaPenandaTangan.Text;
                        
                        dataPenyama.NM_PENERBIT_SK = formRTLTMTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLTMTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLTM == null ? 1 : dsgridRTLTM.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLTMTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLTMTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLTMTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLTMTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLTMTambah.teNamaPemohon.Text;
                        
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLTMTambah.teUraianKeputusan.Text;
                        
                        dsgridRTLTM.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLTM.dataTerpilih = dataPenyama;
                            _keBerapaTM = 1;
                            formRTLTMTambah.gcDaftarAset.Enabled = true;
                            formRTLTMTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLTMTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLTMTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLTMTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLTMTambah.sbCariPemohon.Enabled = false;
                            formRTLTMTambah.sbRefresh.Enabled = true;
                            formRTLTMTambah.sbTambah.Enabled = true;
                            formRTLTMTambah.sbHapus.Enabled = true;
                            formRTLTMTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLTMTambah.cePilihSemua.Enabled = true;
                            formRTLTMTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLTMTambah.statusForm = "CU";
                            formRTLTMTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLTM.IndexOf(gridRTLTM.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLTM.Remove(gridRTLTM.dataTerpilih);
                            dsgridRTLTM.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLTMUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLTMUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLTMUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        
                    //dataPenyama.JABATAN_TTD = formRTLTMUbah.teJabatan.Text;
                        
                        dataPenyama.KD_KL = formRTLTMUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLTMUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLTMUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLTMUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLTMUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLTMUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLTMUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLTMUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLTMUbah.teNilaiPenetapan.Text);
                        
                    //dataPenyama.NIP_PENANDATANGAN = formRTLTMUbah.teNipPenandaTangan.Text;
                        
                        dataPenyama.NM_PELAYANAN = gridRTLTM.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLTMUbah.teNamaPemohon.Text;
                        
                    //dataPenyama.NM_PENANDATANGAN = formRTLTMUbah.teNamaPenandaTangan.Text;
                        
                        dataPenyama.NM_PENERBIT_SK = formRTLTMUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLTMUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLTM.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLTM.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLTMUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLTM.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLTM.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLTMUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLTMUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLTM.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLTM.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLTM.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLTMUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLTMUbah.teNamaPemohon.Text;
                        
                    //dataPenyama.URAIAN_KEPUTUSAN = formRTLTMUbah.teUraianKeputusan.Text;
                        
                        _indeksData = dsgridRTLTM.IndexOf(gridRTLTM.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLTM.Remove(gridRTLTM.dataTerpilih);
                        dsgridRTLTM.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLTM.Remove(gridRTLTM.dataTerpilih);
                        break;
                }
                gridRTLTM.dsDataSource = dsgridRTLTM;
                gridRTLTM.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkTm(SvcWasdalTmSkSelect.WASDALSROW_READ_WASDAL_PT_TUKAR _skTerpilih) 
        {
            formRTLTMTambah = new KSK.TL.TMBMN.ucRTLTMForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlTm = new SimpanDataRtl(simpanDataRtlTM)
            };
            formRTLTMTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLTMTambah);
            formRTLTMTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion Simpan Data TMBMN

        #region action button
        KSK.TL.TMBMN.frmPuSk formSkTm;

        private void RkmTlTMTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan12), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkTm = new KSK.TL.TMBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkTm = new PilihSkTm(pilihSkTm)  
                };
                formSkTm.ShowDialog();
            }
        }

        private void RkmTlTMEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLTM.dataTerpilih != null)
            {
                if (formRTLTMUbah == null)
                {
                    formRTLTMUbah = new KSK.TL.TMBMN.ucRTLTMForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlTm = new SimpanDataRtl(simpanDataRtlTM)
                    };
                }
                formRTLTMUbah.dataTerpilih = gridRTLTM.dataTerpilih;
                setPanel(formRTLTMUbah);
                formRTLTMUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlTMHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLTM.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLTM.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlTM();
                }
            }
        }

        private void RkmTlTMDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            if (gridRTLTM.dataTerpilih != null)
            {
                if (formRTLTMDetail == null)
                {
                    formRTLTMDetail = new KSK.TL.TMBMN.ucRTLTMForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlTm = new SimpanDataRtl(simpanDataRtlTM)
                    };
                }
                formRTLTMDetail.dataTerpilih = gridRTLTM.dataTerpilih;
                setPanel(formRTLTMDetail);
                formRTLTMDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlTMRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLTM.teNamaKolom.Text = "";
            gridRTLTM.teCari.Text = "";
            gridRTLTM.fieldDicari = "";
            gridRTLTM.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlTM();
        }

        private void RkmTlTMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlTM();
            }
        }

        private void RkmTlTMKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonTukar;
            konfigApp.kdPelayanan = "12";
            konfigApp.namaPelayanan = this.subMenuMonTukar;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlTM();
            modeCari = false;
            gridRTLTM.teNamaKolom.Text = "";
            gridRTLTM.teCari.Text = "";
            gridRTLTM.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlTM();
        }

        private void RkmTlTMTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmTlTM(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlTM();
        }

        #endregion

        #region HIBAH

        KSK.TL.HIBAH.ucRTLHIBAHGrid gridRTLHIBAH;
        KSK.TL.HIBAH.ucRTLHIBAHForm formRTLHIBAHTambah;
        KSK.TL.HIBAH.ucRTLHIBAHForm formRTLHIBAHUbah;
        KSK.TL.HIBAH.ucRTLHIBAHForm formRTLHIBAHDetail;
        private ArrayList dsgridRTLHIBAH;
        SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dOutRtlHIBAH;
        SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient ambilRtlHIBAH;

        private void nbiTLHIBAH_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonHibah;
            konfigApp.kdPelayanan = "13";
            konfigApp.namaPelayanan = this.subMenuMonHibah;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlHIBAH();
            modeCari = false;
            gridRTLHIBAH.teNamaKolom.Text = "";
            gridRTLHIBAH.teCari.Text = "";
            gridRTLHIBAH.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlHIBAH();
        }

        private void setEventBtnTlHIBAH()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlHIBAHTutup);

        }

        public void initGridRkmTlHIBAH()
        {

            //if (gridRTLHIBAH == null)
            //{
                gridRTLHIBAH = new KSK.TL.HIBAH.ucRTLHIBAHGrid() 
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlHIBAH),
                    detailDataGrid = new DetailDataGrid(RkmTlHIBAHEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlHIBAH();
            setPanel(gridRTLHIBAH);
        }

        #region --++ Ambil Data HIBAH
        private void getInitRkmTlHIBAH()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutSelect.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlHIBAH = new SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient();
                ambilRtlHIBAH.Open();
                ambilRtlHIBAH.Beginexecute(parInp, new AsyncCallback(getRkmTlHIBAH), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlHIBAH(IAsyncResult result)
        {
            try
            {
                dOutRtlHIBAH = ambilRtlHIBAH.Endexecute(result);
                ambilRtlHIBAH.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlHIBAH(dsRtlHIBAH), dOutRtlHIBAH);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlHIBAH(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlHIBAH(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_PT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_PT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLHIBAH = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_PT[i].UR_SATKER = konfigApp.namaSatker;

                //DateTime before = (DateTime) dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA;
                //DateTime after = TimeZoneInfo.ConvertTime((DateTime)dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA, konfigApp.timeInfo);
                //MessageBox.Show("before : " + before.ToString() + Environment.NewLine + "After : " + after.ToString());
                //dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA = TimeZoneInfo.ConvertTime((DateTime)dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA, konfigApp.timeInfo);
                //dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED = TimeZoneInfo.ConvertTime((DateTime)dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED, konfigApp.timeInfo);
                //dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK = TimeZoneInfo.ConvertTime((DateTime)dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK, konfigApp.timeInfo);
                dsgridRTLHIBAH.Add(dataOut.SF_TL_SELECT_WASDAL_PT[i]);
            }

            gridRTLHIBAH.sbCariOnline.Enabled = !modeCari;
            gridRTLHIBAH.dsDataSource = dsgridRTLHIBAH;
            gridRTLHIBAH.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLHIBAH.teNamaKolom.Text.Trim();
                string xDua = gridRTLHIBAH.teCari.Text.Trim();
                string xTiga = gridRTLHIBAH.fieldDicari;
                gridRTLHIBAH.gvGridSk.ClearColumnsFilter();
                gridRTLHIBAH.teNamaKolom.Text = xSatu;
                gridRTLHIBAH.teCari.Text = xDua;
                gridRTLHIBAH.fieldDicari = xTiga;
            }
            else
                gridRTLHIBAH.gvGridSk.ClearColumnsFilter();
            gridRTLHIBAH.labelTotData.Text = "";
            gridRTLHIBAH.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil HIBAH

        #region --++ Simpan Data HIBAH
        SvcWasdalPindahtanganTdLanjutCud.OutputParameters dOutAmbilDataHIBAH;
        SvcWasdalPindahtanganTdLanjutCud.execute_pttClient ambilDataHIBAH;

        private void simpanDataRtlHIBAH(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.idSkWasdal : formRTLHIBAHUbah.idSkWasdal);
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.idSkTL : formRTLHIBAHUbah.idSkTL);
                parInp.P_KD_PELAYANAN = "13";
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.teNomorSk.Text.Trim() : formRTLHIBAHUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.teNoBuktiLaksana.Text.Trim() : formRTLHIBAHUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.cbJnsDokLaksana.SelectedText : formRTLHIBAHUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.deTglBuktiLaksana.EditValue : formRTLHIBAHUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLHIBAHTambah.teKetBukti.Text : formRTLHIBAHUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLHIBAHTambah.filePath) : konfigApp.convert2byte(formRTLHIBAHUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataHIBAH = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataHIBAH.Beginexecute(parInp, new AsyncCallback(cudRtlHIBAH), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlHIBAH()  
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRTLHIBAH.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = gridRTLHIBAH.dataTerpilih.ID_TL_WASDAL_PINDAHTANGAN;
                parInp.P_SK_KEPUTUSAN = gridRTLHIBAH.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLHIBAH.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLHIBAH.dataTerpilih.JNS_BUKTI_LAKSANA;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLHIBAH.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLHIBAH.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataHIBAH = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataHIBAH.Beginexecute(parInp, new AsyncCallback(cudRtlHIBAH), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlHIBAH(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataHIBAH = ambilDataHIBAH.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlHIBAH(this.ubahDsRtlHIBAH), dOutAmbilDataHIBAH);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataHIBAH.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlHIBAH(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaHIBAH = 0;

        private void ubahDsRtlHIBAH(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT dataPenyama = new SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLHIBAHTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLHIBAHTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLHIBAHTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLHIBAHTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLHIBAHTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLHIBAHTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLHIBAHTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLHIBAHTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLHIBAHTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLHIBAHTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLHIBAHTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLHIBAHTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLHIBAHTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLHIBAHTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLHIBAHTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLHIBAHTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLHIBAHTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLHIBAHTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLHIBAH == null ? 1 : dsgridRTLHIBAH.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLHIBAHTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLHIBAHTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLHIBAHTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLHIBAHTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLHIBAHTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLHIBAHTambah.teUraianKeputusan.Text;
                        dsgridRTLHIBAH.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLHIBAH.dataTerpilih = dataPenyama;
                            _keBerapaHIBAH = 1;
                            formRTLHIBAHTambah.gcDaftarAset.Enabled = true;
                            formRTLHIBAHTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.sbCariPemohon.Enabled = false;
                            formRTLHIBAHTambah.sbRefresh.Enabled = true;
                            formRTLHIBAHTambah.sbHapus.Enabled = true;
                            formRTLHIBAHTambah.sbTambah.Enabled = true;
                            formRTLHIBAHTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.cePilihSemua.Enabled = true;
                            formRTLHIBAHTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLHIBAHTambah.statusForm = "CU";
                            formRTLHIBAHTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLHIBAH.IndexOf(gridRTLHIBAH.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLHIBAH.Remove(gridRTLHIBAH.dataTerpilih);
                            dsgridRTLHIBAH.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLHIBAHUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLHIBAHUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLHIBAHUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLHIBAHUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLHIBAHUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLHIBAHUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLHIBAHUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLHIBAHUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLHIBAHUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLHIBAHUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLHIBAHUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLHIBAHUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLHIBAHUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLHIBAHUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLHIBAH.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLHIBAHUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLHIBAHUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLHIBAHUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLHIBAHUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLHIBAH.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLHIBAH.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLHIBAHUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLHIBAH.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLHIBAH.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLHIBAHUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLHIBAHUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLHIBAH.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLHIBAH.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLHIBAH.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLHIBAHUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLHIBAHUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLHIBAHUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLHIBAH.IndexOf(gridRTLHIBAH.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLHIBAH.Remove(gridRTLHIBAH.dataTerpilih);
                        dsgridRTLHIBAH.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLHIBAH.Remove(gridRTLHIBAH.dataTerpilih);
                        break;
                }
                gridRTLHIBAH.dsDataSource = dsgridRTLHIBAH;
                gridRTLHIBAH.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkHibah(SvcWasdalHibahSkSelect.WASDALSROW_READ_WASDAL_PT_HIBAH _skTerpilih)
        {
            formRTLHIBAHTambah = new KSK.TL.HIBAH.ucRTLHIBAHForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlHIBAH = new SimpanDataRtl(simpanDataRtlHIBAH)
            };
            formRTLHIBAHTambah.dataTerpilih = gridRTLHIBAH.dataTerpilih;
            formRTLHIBAHTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLHIBAHTambah);
            formRTLHIBAHTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion 

        #region action button
        KSK.TL.HIBAH.frmPuSk formSkHibah;

        private void RkmTlHIBAHTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan13), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkHibah = new KSK.TL.HIBAH.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkHibah = new PilihSkHibah(pilihSkHibah)
                };
                formSkHibah.ShowDialog();
            }
        }

        private void RkmTlHIBAHEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLHIBAH.dataTerpilih != null)
            {
                if (formRTLHIBAHUbah == null)
                {
                    formRTLHIBAHUbah = new KSK.TL.HIBAH.ucRTLHIBAHForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlHIBAH = new SimpanDataRtl(simpanDataRtlHIBAH)
                    };
                }
                formRTLHIBAHUbah.dataTerpilih = gridRTLHIBAH.dataTerpilih;
                setPanel(formRTLHIBAHUbah);
                formRTLHIBAHUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlHIBAHHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLHIBAH.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLHIBAH.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlHIBAH();
                    getInitRkmTlHIBAH();
                }
            }
        }

        private void RkmTlHIBAHDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLHIBAH.dataTerpilih != null)
            {
                if (formRTLHIBAHDetail == null)
                {
                    formRTLHIBAHDetail = new KSK.TL.HIBAH.ucRTLHIBAHForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlHIBAH = new SimpanDataRtl(simpanDataRtlHIBAH)
                    };
                }
                formRTLHIBAHDetail.dataTerpilih = gridRTLHIBAH.dataTerpilih;
                setPanel(formRTLHIBAHDetail);
                formRTLHIBAHDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlHIBAHRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLHIBAH.teNamaKolom.Text = "";
            gridRTLHIBAH.teCari.Text = "";
            gridRTLHIBAH.fieldDicari = "";
            gridRTLHIBAH.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlHIBAH();
        }

        private void RkmTlHIBAHMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlHIBAH();
            }
        }

        private void RkmTlHIBAHKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonHibah;
            konfigApp.kdPelayanan = "13";
            konfigApp.namaPelayanan = this.subMenuMonHibah;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlHIBAH();
            modeCari = false;
            gridRTLHIBAH.teNamaKolom.Text = "";
            gridRTLHIBAH.teCari.Text = "";
            gridRTLHIBAH.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlHIBAH();
        }

        private void RkmTlHIBAHTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)  
        {
            this.Dispose();
        }

        #endregion
        
        private void cariDataRkmTlHIBAH(string _strWhere, bool iniHIBAHodeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = iniHIBAHodeCari;
            getInitRkmTlHIBAH();
        }

        #endregion

        #region PMP

        KSK.TL.PMP.ucRTLPMPGrid gridRTLPMP;
        KSK.TL.PMP.ucRTLPMPForm formRTLPMPTambah;
        KSK.TL.PMP.ucRTLPMPForm formRTLPMPUbah;
        KSK.TL.PMP.ucRTLPMPForm formRTLPMPDetail;
        private ArrayList dsgridRTLPMP;
        SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dOutRtlPMP;
        SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient ambilRtlPMP;

        private void nbiTLPMP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonModal;
            konfigApp.kdPelayanan = "14";
            konfigApp.namaPelayanan = this.subMenuMonModal;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPMP();
            modeCari = false;
            gridRTLPMP.teNamaKolom.Text = "";
            gridRTLPMP.teCari.Text = "";
            gridRTLPMP.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPMP();
        }

        private void setEventBtnTlPMP()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPMPTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPMPEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPMPHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPMPRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPMPMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPMPDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPMPKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPMPTutup); 
        }

        public void initGridRkmTlPMP()
        {

            //if (gridRTLPMP == null)
            //{
                gridRTLPMP = new KSK.TL.PMP.ucRTLPMPGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPMP),
                    detailDataGrid = new DetailDataGrid(RkmTlPMPEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPMP();
            setPanel(gridRTLPMP);
        }

        #region --++ Ambil Data PMP
        private void getInitRkmTlPMP()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutSelect.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPMP = new SvcWasdalPindahtanganTdLanjutSelect.execute_pttClient();
                ambilRtlPMP.Open();
                ambilRtlPMP.Beginexecute(parInp, new AsyncCallback(getRkmTlPMP), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPMP(IAsyncResult result)
        {
            try
            {
                dOutRtlPMP = ambilRtlPMP.Endexecute(result);
                ambilRtlPMP.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPMP(dsRtlPMP), dOutRtlPMP);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPMP(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlPMP(SvcWasdalPindahtanganTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_SELECT_WASDAL_PT.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_SELECT_WASDAL_PT[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLPMP = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB = (dataOut.SF_TL_SELECT_WASDAL_PT[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_CREATED);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_SELECT_WASDAL_PT[i].TGL_SK);
                dataOut.SF_TL_SELECT_WASDAL_PT[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_SELECT_WASDAL_PT[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLPMP.Add(dataOut.SF_TL_SELECT_WASDAL_PT[i]);
            }

            gridRTLPMP.sbCariOnline.Enabled = !modeCari;
            gridRTLPMP.dsDataSource = dsgridRTLPMP;
            gridRTLPMP.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPMP.teNamaKolom.Text.Trim();
                string xDua = gridRTLPMP.teCari.Text.Trim();
                string xTiga = gridRTLPMP.fieldDicari;
                gridRTLPMP.gvGridSk.ClearColumnsFilter();
                gridRTLPMP.teNamaKolom.Text = xSatu;
                gridRTLPMP.teCari.Text = xDua;
                gridRTLPMP.fieldDicari = xTiga;
            }
            else
                gridRTLPMP.gvGridSk.ClearColumnsFilter();
            gridRTLPMP.labelTotData.Text = "";
            gridRTLPMP.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PMP

        #region --++ Simpan Data PMP
        SvcWasdalPindahtanganTdLanjutCud.OutputParameters dOutAmbilDataPMP;
        SvcWasdalPindahtanganTdLanjutCud.execute_pttClient ambilDataPMP;

        private void simpanDataRtlPMP(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();

                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.idSkWasdal : formRTLPMPUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.idSkTL : formRTLPMPUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_KD_PELAYANAN = "14";

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.teNomorSk.Text.Trim() : formRTLPMPUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.teNoBuktiLaksana.Text.Trim() : formRTLPMPUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.cbJnsDokLaksana.SelectedText : formRTLPMPUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.deTglBuktiLaksana.EditValue : formRTLPMPUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMPTambah.teKetBukti.Text : formRTLPMPUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPMPTambah.filePath) : konfigApp.convert2byte(formRTLPMPUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPMP = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataPMP.Beginexecute(parInp, new AsyncCallback(cudRtlPMP), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPMP() 
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPindahtanganTdLanjutCud.InputParameters parInp = new SvcWasdalPindahtanganTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRTLPMP.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = gridRTLPMP.dataTerpilih.ID_TL_WASDAL_PINDAHTANGAN;
                parInp.P_SK_KEPUTUSAN = gridRTLPMP.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPMP.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLPMP.dataTerpilih.JNS_BUKTI_LAKSANA;
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(gridRTLPMP.dataTerpilih.TGL_BUKTI_LAKSANA);
                parInp.P_KET = gridRTLPMP.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPMP = new SvcWasdalPindahtanganTdLanjutCud.execute_pttClient();
                ambilDataPMP.Beginexecute(parInp, new AsyncCallback(cudRtlPMP), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPMP(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPMP = ambilDataPMP.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPMP(this.ubahDsRtlPMP), dOutAmbilDataPMP);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataPMP.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPMP(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPMP = 0;

        private void ubahDsRtlPMP(SvcWasdalPindahtanganTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT dataPenyama = new SvcWasdalPindahtanganTdLanjutSelect.WASDALSROW_TL_SELECT_WASDAL_PT();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPMPTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPMPTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPMPTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPMPTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPMPTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPMPTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPMPTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPMPTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPMPTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPMPTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPMPTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPMPTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPMPTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPMPTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPMPTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPMPTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPMPTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPMPTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLPMP == null ? 1 : dsgridRTLPMP.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLPMPTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPMPTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPMPTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPMPTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPMPTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPMPTambah.teUraianKeputusan.Text;
                        dsgridRTLPMP.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPMP.dataTerpilih = dataPenyama;
                            _keBerapaPMP = 1;
                            formRTLPMPTambah.gcDaftarAset.Enabled = true;
                            formRTLPMPTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPMPTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPMPTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPMPTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPMPTambah.sbCariPemohon.Enabled = false;
                            formRTLPMPTambah.sbRefresh.Enabled = true;
                            formRTLPMPTambah.sbHapus.Enabled = true;
                            formRTLPMPTambah.sbTambah.Enabled = true;
                            formRTLPMPTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPMPTambah.cePilihSemua.Enabled = true;
                            formRTLPMPTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPMPTambah.statusForm = "CU";
                            formRTLPMPTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLPMP.IndexOf(gridRTLPMP.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLPMP.Remove(gridRTLPMP.dataTerpilih);
                            dsgridRTLPMP.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPMPUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPMPUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPMPUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPMPUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPMPUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPMPUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPMPUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPMPUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPMPUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPMPUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPMPUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPMPUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPMPUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPMPUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLPMP.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLPMPUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPMPUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPMPUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPMPUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLPMP.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLPMP.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLPMPUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLPMP.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLPMP.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPMPUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPMPUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLPMP.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLPMP.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLPMP.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLPMPUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPMPUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPMPUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLPMP.IndexOf(gridRTLPMP.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLPMP.Remove(gridRTLPMP.dataTerpilih);
                        dsgridRTLPMP.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLPMP.Remove(gridRTLPMP.dataTerpilih);
                        break;
                }
                gridRTLPMP.dsDataSource = dsgridRTLPMP;
                gridRTLPMP.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPmp(SvcWasdalPmpSkSelect.WASDALSROW_READ_WASDAL_PT_MODAL _skTerpilih)
        {
            formRTLPMPTambah = new KSK.TL.PMP.ucRTLPMPForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPMP = new SimpanDataRtl(simpanDataRtlPMP)
            };
            formRTLPMPTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPMPTambah);
            formRTLPMPTambah.inisialisasiForm();
            setTombolRtlForm();
        }
        #endregion Simpan Data PSP BMN

        #region action button
         KSK.TL.PMP.frmPuSk formSkPmp;

         private void RkmTlPMPTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan14), konfigApp.judulKonfirmasi,
                  MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
             {
                 formSkPmp = new KSK.TL.PMP.frmPuSk()
                 {

                     toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                     pilihSkPmp = new PilihSkPmp(pilihSkPmp)
                 };
                 formSkPmp.ShowDialog();
             }
         }

         private void RkmTlPMPEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             if (gridRTLPMP.dataTerpilih != null)
             {
                 if (formRTLPMPUbah == null)
                 {
                     formRTLPMPUbah = new KSK.TL.PMP.ucRTLPMPForm("U")
                     {

                         toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                         simpanDataRtlPMP = new SimpanDataRtl(simpanDataRtlPMP)
                     };
                 }
                 formRTLPMPUbah.dataTerpilih = gridRTLPMP.dataTerpilih;
                 setPanel(formRTLPMPUbah);
                 formRTLPMPUbah.inisialisasiForm();
                 setTombolRtlForm();
             }
             else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
         }

         private void RkmTlPMPHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             if (gridRTLPMP.dataTerpilih != null)
             {
                 if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPMP.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                  MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                 {
                     this.HapusDataRtlPMP();
                 }
             }
         }

         private void RkmTlPMPDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
         {
             if (gridRTLPMP.dataTerpilih != null)
             {
                 if (formRTLPMPDetail == null)
                 {
                     formRTLPMPDetail = new KSK.TL.PMP.ucRTLPMPForm("A")
                     {

                         toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                         simpanDataRtlPMP = new SimpanDataRtl(simpanDataRtlPMP)
                     };
                 }
                 formRTLPMPDetail.dataTerpilih = gridRTLPMP.dataTerpilih;
                 setPanel(formRTLPMPDetail);
                 formRTLPMPDetail.inisialisasiForm();
                 setTombolRtlForm();
             }
             else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
         }

         private void RkmTlPMPRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             strCari = "";
             modeCari = false;
             gridRTLPMP.teNamaKolom.Text = "";
             gridRTLPMP.teCari.Text = "";
             gridRTLPMP.fieldDicari = "";
             gridRTLPMP.dataInisial = true;
             this.dataInisial = true;
             this.getInitRkmTlPMP();
         }

         private void RkmTlPMPMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             if (this.masihAdaData == true)
             {
                 this.dataInisial = false;
                 this.getInitRkmTlPMP();
             }
         }

         private void RkmTlPMPKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e) 
         {
             konfigApp.strMenu = this.menuRekamTlWasdal;
             konfigApp.strSubMenu = this.subMenuMonModal;
             konfigApp.kdPelayanan = "14";
             konfigApp.namaPelayanan = this.subMenuMonModal;
             this.Enabled = false;
             this.inisialisasiForm();
             rpRkmTindakLanjut.Visible = true;
             ribbon.SelectedPage = rpRkmTindakLanjut;
             initGridRkmTlPMP();
             modeCari = false;
             gridRTLPMP.teNamaKolom.Text = "";
             gridRTLPMP.teCari.Text = "";
             gridRTLPMP.fieldDicari = "";
             strCari = "";
             this.dataInisial = true;
             this.getInitRkmTlPMP();
         }

         private void RkmTlPMPTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
         {
             this.Dispose();
         }

         #endregion

        private void cariDataRkmTlPMP(string _strWhere, bool iniPMPodeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = iniPMPodeCari;
            getInitRkmTlPMP();
        }

        #endregion

        #region PMBMN

        KSK.TL.PMBMN.ucRTLPMGrid gridRTLPMBMN;
        KSK.TL.PMBMN.ucRTLPMForm formRTLPMBMNTambah;
        KSK.TL.PMBMN.ucRTLPMForm formRTLPMBMNUbah;
        KSK.TL.PMBMN.ucRTLPMForm formRTLPMBMNDetail;
        private ArrayList dsgridRTLPMBMN;
        SvcWasdalHapusTdLanjutSelect.OutputParameters dOutRtlPMBMN;
        SvcWasdalHapusTdLanjutSelect.execute_pttClient ambilRtlPMBMN;


        private void nbiTLPMBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonMusnah;
            konfigApp.kdPelayanan = "15";
            konfigApp.namaPelayanan = this.subMenuMonMusnah;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPMBMN();
            modeCari = false;
            gridRTLPMBMN.teNamaKolom.Text = "";
            gridRTLPMBMN.teCari.Text = "";
            gridRTLPMBMN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPMBMN();
        }

        private void setEventBtnTlPMBMN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPMBMNTutup);
        }

        public void initGridRkmTlPMBMN()
        {

            //if (gridRTLPMBMN == null)
            //{
                gridRTLPMBMN = new KSK.TL.PMBMN.ucRTLPMGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPMBMN),
                    detailDataGrid = new DetailDataGrid(RkmTlPMBMNEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPMBMN();
            setPanel(gridRTLPMBMN);
        }

        #region --++ Ambil Data PMBMN
        private void getInitRkmTlPMBMN()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutSelect.InputParameters parInp = new SvcWasdalHapusTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2} ", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPMBMN = new SvcWasdalHapusTdLanjutSelect.execute_pttClient();
                ambilRtlPMBMN.Open();
                ambilRtlPMBMN.Beginexecute(parInp, new AsyncCallback(getRkmTlPMBMN), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPMBMN(IAsyncResult result)
        {
            try
            {
                dOutRtlPMBMN = ambilRtlPMBMN.Endexecute(result);
                ambilRtlPMBMN.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPMBMN(dsRtlPMBMN), dOutRtlPMBMN);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPMBMN(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlPMBMN(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS_TL.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS_TL[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLPMBMN = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLPMBMN.Add(dataOut.SF_READ_WASDAL_HAPUS_TL[i]);
            }

            gridRTLPMBMN.sbCariOnline.Enabled = !modeCari;
            gridRTLPMBMN.dsDataSource = dsgridRTLPMBMN;
            gridRTLPMBMN.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPMBMN.teNamaKolom.Text.Trim();
                string xDua = gridRTLPMBMN.teCari.Text.Trim();
                string xTiga = gridRTLPMBMN.fieldDicari;
                gridRTLPMBMN.gvGridSk.ClearColumnsFilter();
                gridRTLPMBMN.teNamaKolom.Text = xSatu;
                gridRTLPMBMN.teCari.Text = xDua;
                gridRTLPMBMN.fieldDicari = xTiga;
            }
            else
                gridRTLPMBMN.gvGridSk.ClearColumnsFilter();
            gridRTLPMBMN.labelTotData.Text = "";
            gridRTLPMBMN.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PMBMN

        #region --++ Simpan Data PMBMN
        SvcWasdalHapusTdLanjutCud.OutputParameters dOutAmbilDataPMBMN;
        SvcWasdalHapusTdLanjutCud.execute_pttClient ambilDataPMBMN;

        private void simpanDataRtlPMBMN(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.teNomorSk.Text.Trim() : formRTLPMBMNUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.teNoBuktiLaksana.Text.Trim() : formRTLPMBMNUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.cbJnsDokLaksana.EditValue.ToString() : formRTLPMBMNUbah.cbJnsDokLaksana.EditValue.ToString());
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.deTglBuktiLaksana.EditValue : formRTLPMBMNUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.teKetBukti.Text : formRTLPMBMNUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPMBMNTambah.filePath) : konfigApp.convert2byte(formRTLPMBMNUbah.filePath));
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPMBMNTambah.filePath) : formRTLPMBMNTambah.outFileWasdal.PO_FILE_BUKTI);
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.idSkWasdal : formRTLPMBMNUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPMBMNTambah.idSkTL : formRTLPMBMNUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPMBMN = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPMBMN.Beginexecute(parInp, new AsyncCallback(cudRtlPMBMN), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPMBMN()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_HAPUS = gridRTLPMBMN.dataTerpilih.ID_SK_WASDAL_HAPUS;
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = gridRTLPMBMN.dataTerpilih.ID_TL_WASDAL_PENGHAPUSAN;
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;
                parInp.P_SK_KEPUTUSAN = gridRTLPMBMN.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPMBMN.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPMBMN = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPMBMN.Beginexecute(parInp, new AsyncCallback(cudRtlPMBMN), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPMBMN(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPMBMN = ambilDataPMBMN.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPMBMN(this.ubahDsRtlPMBMN), dOutAmbilDataPMBMN);

            }
            catch(Exception e)
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+e.Message, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPMBMN(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPMBMN = 0;

        private void ubahDsRtlPMBMN(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL dataPenyama = new SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                //dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPMBMNTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPMBMNTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPMBMNTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPMBMNTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPMBMNTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPMBMNTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPMBMNTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPMBMNTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPMBMNTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPMBMNTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPMBMNTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPMBMNTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPMBMNTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPMBMNTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPMBMNTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPMBMNTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPMBMNTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPMBMNTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLPMBMN == null ? 1 : dsgridRTLPMBMN.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLPMBMNTambah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPMBMNTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPMBMNTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        //dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPMBMNTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPMBMNTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPMBMNTambah.teUraianKeputusan.Text;
                        dsgridRTLPMBMN.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPMBMN.dataTerpilih = dataPenyama;
                            _keBerapaPMBMN = 1;
                            formRTLPMBMNTambah.gcDaftarAset.Enabled = true;
                            formRTLPMBMNTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.sbCariPemohon.Enabled = false;
                            formRTLPMBMNTambah.sbRefresh.Enabled = true;
                            formRTLPMBMNTambah.sbTambah.Enabled = true;
                            formRTLPMBMNTambah.sbHapus.Enabled = true;
                            formRTLPMBMNTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.cePilihSemua.Enabled = true;
                            formRTLPMBMNTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPMBMNTambah.statusForm = "CU";
                            formRTLPMBMNTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLPMBMN.IndexOf(gridRTLPMBMN.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLPMBMN.Remove(gridRTLPMBMN.dataTerpilih);
                            dsgridRTLPMBMN.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPMBMNUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPMBMNUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPMBMNUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPMBMNUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPMBMNUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPMBMNUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPMBMNUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPMBMNUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPMBMNUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPMBMNUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPMBMNUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPMBMNUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPMBMNUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPMBMNUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLPMBMN.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLPMBMNUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPMBMNUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPMBMNUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPMBMNUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLPMBMN.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLPMBMN.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLPMBMNUbah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = gridRTLPMBMN.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLPMBMN.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPMBMNUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPMBMNUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLPMBMN.dataTerpilih.TOT_BMN;
                        //dataPenyama.TOT_STATUS = gridRTLPMBMN.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLPMBMN.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLPMBMNUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPMBMNUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPMBMNUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLPMBMN.IndexOf(gridRTLPMBMN.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLPMBMN.Remove(gridRTLPMBMN.dataTerpilih);
                        dsgridRTLPMBMN.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLPMBMN.Remove(gridRTLPMBMN.dataTerpilih);
                        break;
                }
                gridRTLPMBMN.dsDataSource = dsgridRTLPMBMN;
                gridRTLPMBMN.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPMBMN(SvcWasdalHapusSkTLSelect.WASDALSROW_SK_WASDAL_HAPUS_TL _skTerpilih)
        {
            formRTLPMBMNTambah = new KSK.TL.PMBMN.ucRTLPMForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPMBMN)
            };
            formRTLPMBMNTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPMBMNTambah);
            formRTLPMBMNTambah.inisialisasiForm();
            setTombolRtlForm();
        }
        #endregion Simpan Data PSP BMN

        #region action button
        KSK.TL.PMBMN.frmPuSk formSkPMBMN;

        private void RkmTlPMBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan15), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPMBMN = new KSK.TL.PMBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPM = new PilihSkHapus(pilihSkPMBMN)
                };
                formSkPMBMN.ShowDialog();
            }
        }

        private void RkmTlPMBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPMBMN.dataTerpilih != null)
            {
                if (formRTLPMBMNUbah == null)
                {
                    formRTLPMBMNUbah = new KSK.TL.PMBMN.ucRTLPMForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPMBMN)
                    };
                }
                formRTLPMBMNUbah.dataTerpilih = gridRTLPMBMN.dataTerpilih;
                setPanel(formRTLPMBMNUbah);
                formRTLPMBMNUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPMBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPMBMN.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPMBMN.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPMBMN();
                }
            }
        }

        private void RkmTlPMBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPMBMN.dataTerpilih != null)
            {
                if (formRTLPMBMNDetail == null)
                {
                    formRTLPMBMNDetail = new KSK.TL.PMBMN.ucRTLPMForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPMBMN)
                    };
                }
                formRTLPMBMNDetail.dataTerpilih = gridRTLPMBMN.dataTerpilih;
                setPanel(formRTLPMBMNDetail);
                formRTLPMBMNDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPMBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPMBMN.teNamaKolom.Text = "";
            gridRTLPMBMN.teCari.Text = "";
            gridRTLPMBMN.fieldDicari = "";
            gridRTLPMBMN.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPMBMN();
        }

        private void RkmTlPMBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPMBMN();
            }
        }

        private void RkmTlPMBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonHapus;
            konfigApp.kdPelayanan = "15";
            konfigApp.namaPelayanan = this.subMenuMonHapus;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPMBMN();
            modeCari = false;
            gridRTLPMBMN.teNamaKolom.Text = "";
            gridRTLPMBMN.teCari.Text = "";
            gridRTLPMBMN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPMBMN();
        }

        private void RkmTlPMBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion
        
        private void cariDataRkmTlPMBMN(string _strWhere, bool iniPMBMNodeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = iniPMBMNodeCari;
            getInitRkmTlPMBMN();
        }

        #endregion

        #region PBKSL

        KSK.TL.PBKSL.ucRTLPBKSLGrid gridRTLPBKSL;
        KSK.TL.PBKSL.ucRTLPBKSLForm formRTLPBKSLTambah;
        KSK.TL.PBKSL.ucRTLPBKSLForm formRTLPBKSLUbah;
        KSK.TL.PBKSL.ucRTLPBKSLForm formRTLPBKSLDetail;
        private ArrayList dsgridRTLPBKSL;
        SvcWasdalHapusTdLanjutSelect.OutputParameters dOutRtlPBKSL;
        SvcWasdalHapusTdLanjutSelect.execute_pttClient ambilRtlPBKSL;
        private void nbiTLPBKSL_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonHapusLain;
            konfigApp.kdPelayanan = "17";
            konfigApp.namaPelayanan = this.subMenuMonHapusLain;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBKSL();
            modeCari = false;
            gridRTLPBKSL.teNamaKolom.Text = "";
            gridRTLPBKSL.teCari.Text = "";
            gridRTLPBKSL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPBKSL();
        }
        private void setEventBtnTlPBKSL()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLEdit);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLDetail);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLMore);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPBKSLTutup);
        }

        public void initGridRkmTlPBKSL()
        {

            //if (gridRTLPBKSL == null)
            //{
                gridRTLPBKSL = new KSK.TL.PBKSL.ucRTLPBKSLGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPBKSL),
                    detailDataGrid = new DetailDataGrid(RkmTlPBKSLEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPBKSL();
            setPanel(gridRTLPBKSL);
        }

        #region --++ Ambil Data PBKSL
        private void getInitRkmTlPBKSL()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutSelect.InputParameters parInp = new SvcWasdalHapusTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON= {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPBKSL = new SvcWasdalHapusTdLanjutSelect.execute_pttClient();
                ambilRtlPBKSL.Open();
                ambilRtlPBKSL.Beginexecute(parInp, new AsyncCallback(getRkmTlPBKSL), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPBKSL(IAsyncResult result)
        {
            try
            {
                dOutRtlPBKSL = ambilRtlPBKSL.Endexecute(result);
                ambilRtlPBKSL.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPBKSL(dsRtlPBKSL), dOutRtlPBKSL);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPBKSL(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlPBKSL(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS_TL.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS_TL[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLPBKSL = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLPBKSL.Add(dataOut.SF_READ_WASDAL_HAPUS_TL[i]);
            }

            gridRTLPBKSL.sbCariOnline.Enabled = !modeCari;
            gridRTLPBKSL.dsDataSource = dsgridRTLPBKSL;
            gridRTLPBKSL.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPBKSL.teNamaKolom.Text.Trim();
                string xDua = gridRTLPBKSL.teCari.Text.Trim();
                string xTiga = gridRTLPBKSL.fieldDicari;
                gridRTLPBKSL.gvGridSk.ClearColumnsFilter();
                gridRTLPBKSL.teNamaKolom.Text = xSatu;
                gridRTLPBKSL.teCari.Text = xDua;
                gridRTLPBKSL.fieldDicari = xTiga;
            }
            else
                gridRTLPBKSL.gvGridSk.ClearColumnsFilter();
            gridRTLPBKSL.labelTotData.Text = "";
            gridRTLPBKSL.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PBKSL

        #region --++ Simpan Data PBKSL
        SvcWasdalHapusTdLanjutCud.OutputParameters dOutAmbilDataPBKSL;
        SvcWasdalHapusTdLanjutCud.execute_pttClient ambilDataPBKSL;

        private void simpanDataRtlPBKSL(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();

                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.teNomorSk.Text.Trim() : formRTLPBKSLUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.teNoBuktiLaksana.Text.Trim() : formRTLPBKSLUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.cbJnsDokLaksana.EditValue.ToString() : formRTLPBKSLUbah.cbJnsDokLaksana.EditValue.ToString());
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.deTglBuktiLaksana.EditValue : formRTLPBKSLUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.teKetBukti.Text : formRTLPBKSLUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPBKSLTambah.filePath) : konfigApp.convert2byte(formRTLPBKSLUbah.filePath));
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.idSkWasdal : formRTLPBKSLUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKSLTambah.idSkTL : formRTLPBKSLUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;
                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPBKSL = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPBKSL.Beginexecute(parInp, new AsyncCallback(cudRtlPBKSL), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPBKSL()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();
                parInp.P_ID_SK_WASDAL_HAPUS = gridRTLPBKSL.dataTerpilih.ID_SK_WASDAL_HAPUS;
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = gridRTLPBKSL.dataTerpilih.ID_TL_WASDAL_PENGHAPUSAN;
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;
                parInp.P_SK_KEPUTUSAN = gridRTLPBKSL.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPBKSL.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPBKSL = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPBKSL.Beginexecute(parInp, new AsyncCallback(cudRtlPBKSL), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPBKSL(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPBKSL = ambilDataPBKSL.Endexecute(result);
                ambilDataPBKSL.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPBKSL(this.ubahDsRtlPBKSL), dOutAmbilDataPBKSL);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataPBKSL.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPBKSL(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPBKSL = 0;

        private void ubahDsRtlPBKSL(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL dataPenyama = new SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                //dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPBKSLTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPBKSLTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPBKSLTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPBKSLTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPBKSLTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPBKSLTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPBKSLTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPBKSLTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPBKSLTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPBKSLTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKSLTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPBKSLTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKSLTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPBKSLTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPBKSLTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPBKSLTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPBKSLTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPBKSLTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLPBKSL == null ? 1 : dsgridRTLPBKSL.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLPBKSLTambah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPBKSLTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPBKSLTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        //dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPBKSLTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPBKSLTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPBKSLTambah.teUraianKeputusan.Text;
                        dsgridRTLPBKSL.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPBKSL.dataTerpilih = dataPenyama;
                            _keBerapaPBKSL = 1;
                            formRTLPBKSLTambah.gcDaftarAset.Enabled = true;
                            formRTLPBKSLTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.sbCariPemohon.Enabled = false;
                            formRTLPBKSLTambah.sbRefresh.Enabled = true;
                            formRTLPBKSLTambah.sbTambah.Enabled = true;
                            formRTLPBKSLTambah.sbHapus.Enabled = true;
                            formRTLPBKSLTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.cePilihSemua.Enabled = true;
                            formRTLPBKSLTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPBKSLTambah.statusForm = "CU";
                            formRTLPBKSLTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLPBKSL.IndexOf(gridRTLPBKSL.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLPBKSL.Remove(gridRTLPBKSL.dataTerpilih);
                            dsgridRTLPBKSL.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPBKSLUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPBKSLUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPBKSLUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPBKSLUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPBKSLUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPBKSLUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPBKSLUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPBKSLUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPBKSLUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPBKSLUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKSLUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPBKSLUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKSLUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPBKSLUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLPBKSL.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLPBKSLUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPBKSLUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPBKSLUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPBKSLUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLPBKSL.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLPBKSL.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLPBKSLUbah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = gridRTLPBKSL.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLPBKSL.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPBKSLUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPBKSLUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLPBKSL.dataTerpilih.TOT_BMN;
                        //dataPenyama.TOT_STATUS = gridRTLPBKSL.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLPBKSL.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLPBKSLUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPBKSLUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPBKSLUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLPBKSL.IndexOf(gridRTLPBKSL.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLPBKSL.Remove(gridRTLPBKSL.dataTerpilih);
                        dsgridRTLPBKSL.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLPBKSL.Remove(gridRTLPBKSL.dataTerpilih);
                        break;
                }
                gridRTLPBKSL.dsDataSource = dsgridRTLPBKSL;
                gridRTLPBKSL.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPBKSL(SvcWasdalHapusSkTLSelect.WASDALSROW_SK_WASDAL_HAPUS_TL _skTerpilih)
        {
            formRTLPBKSLTambah = new KSK.TL.PBKSL.ucRTLPBKSLForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKSL)
            };
            formRTLPBKSLTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPBKSLTambah);
            formRTLPBKSLTambah.inisialisasiForm();
            setTombolRtlForm();
        }
        #endregion Simpan Data PSP BMN

        #region action button
        KSK.TL.PBKSL.frmPuSk formSkPBKSL;

        private void RkmTlPBKSLTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan17), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPBKSL = new KSK.TL.PBKSL.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPM = new PilihSkHapus(pilihSkPBKSL)
                };
                formSkPBKSL.ShowDialog();
            }
        }

        private void RkmTlPBKSLEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKSL.dataTerpilih != null)
            {
                if (formRTLPBKSLUbah == null)
                {
                    formRTLPBKSLUbah = new KSK.TL.PBKSL.ucRTLPBKSLForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKSL)
                    };
                }
                formRTLPBKSLUbah.dataTerpilih = gridRTLPBKSL.dataTerpilih;
                setPanel(formRTLPBKSLUbah);
                formRTLPBKSLUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBKSLHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKSL.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPBKSL.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPBKSL();
                }
            }
        }

        private void RkmTlPBKSLDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKSL.dataTerpilih != null)
            {
                if (formRTLPBKSLDetail == null)
                {
                    formRTLPBKSLDetail = new KSK.TL.PBKSL.ucRTLPBKSLForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKSL)
                    };
                }
                formRTLPBKSLDetail.dataTerpilih = gridRTLPBKSL.dataTerpilih;
                setPanel(formRTLPBKSLDetail);
                formRTLPBKSLDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBKSLRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPBKSL.teNamaKolom.Text = "";
            gridRTLPBKSL.teCari.Text = "";
            gridRTLPBKSL.fieldDicari = "";
            gridRTLPBKSL.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPBKSL();
        }

        private void RkmTlPBKSLMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPBKSL();
            }
        }

        private void RkmTlPBKSLKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonHapusLain;
            konfigApp.kdPelayanan = "17";
            konfigApp.namaPelayanan = this.subMenuMonHapusLain;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBKSL();
            modeCari = false;
            gridRTLPBKSL.teNamaKolom.Text = "";
            gridRTLPBKSL.teCari.Text = "";
            gridRTLPBKSL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPBKSL();
        }

        private void RkmTlPBKSLTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmTlPBKSL(string _strWhere, bool iniPBKSLNodeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = iniPBKSLNodeCari;
            getInitRkmTlPBKSL();
        }

        #endregion

        #region PBKPP

        KSK.TL.PBKPP.ucRTLPBKPPGrid gridRTLPBKPP;
        KSK.TL.PBKPP.ucRTLPBKPPForm formRTLPBKPPTambah;
        KSK.TL.PBKPP.ucRTLPBKPPForm formRTLPBKPPUbah;
        KSK.TL.PBKPP.ucRTLPBKPPForm formRTLPBKPPDetail;
        private ArrayList dsgridRTLPBKPP;
        SvcWasdalHapusTdLanjutSelect.OutputParameters dOutRtlPBKPP;
        SvcWasdalHapusTdLanjutSelect.execute_pttClient ambilRtlPBKPP;

        private void nbiTLPBKPP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPengadilan;
            konfigApp.kdPelayanan = "16";
            konfigApp.namaPelayanan = this.subMenuMonPengadilan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBKPP();
            modeCari = false;
            gridRTLPBKPP.teNamaKolom.Text = "";
            gridRTLPBKPP.teCari.Text = "";
            gridRTLPBKPP.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPBKPP();
        }

        private void setEventBtnTlPBKPP()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPEdit);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPDetail);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPMore);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlPBKPPTutup);
        }

        public void initGridRkmTlPBKPP()
        {

            //if (gridRTLPBKPP == null)
            //{
                gridRTLPBKPP = new KSK.TL.PBKPP.ucRTLPBKPPGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmTlPBKPP),
                    detailDataGrid = new DetailDataGrid(RkmTlPBKPPEdit)
                };
            //}
            setTombolRtlGrid();
            setEventBtnTlPBKPP();
            setPanel(gridRTLPBKPP);
        }

        #region --++ Ambil Data PBKPP
        private void getInitRkmTlPBKPP()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutSelect.InputParameters parInp = new SvcWasdalHapusTdLanjutSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlPBKPP = new SvcWasdalHapusTdLanjutSelect.execute_pttClient();
                ambilRtlPBKPP.Open();
                ambilRtlPBKPP.Beginexecute(parInp, new AsyncCallback(getRkmTlPBKPP), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlPBKPP(IAsyncResult result)
        {
            try
            {
                dOutRtlPBKPP = ambilRtlPBKPP.Endexecute(result);
                ambilRtlPBKPP.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlPBKPP(dsRtlPBKPP), dOutRtlPBKPP);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlPBKPP(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut);

        private void dsRtlPBKPP(SvcWasdalHapusTdLanjutSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_READ_WASDAL_HAPUS_TL.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_READ_WASDAL_HAPUS_TL[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLPBKPP = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB = (dataOut.SF_READ_WASDAL_HAPUS_TL[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_CREATED);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_READ_WASDAL_HAPUS_TL[i].TGL_SK);
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_READ_WASDAL_HAPUS_TL[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLPBKPP.Add(dataOut.SF_READ_WASDAL_HAPUS_TL[i]);
            }

            gridRTLPBKPP.sbCariOnline.Enabled = !modeCari;
            gridRTLPBKPP.dsDataSource = dsgridRTLPBKPP;
            gridRTLPBKPP.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLPBKPP.teNamaKolom.Text.Trim();
                string xDua = gridRTLPBKPP.teCari.Text.Trim();
                string xTiga = gridRTLPBKPP.fieldDicari;
                gridRTLPBKPP.gvGridSk.ClearColumnsFilter();
                gridRTLPBKPP.teNamaKolom.Text = xSatu;
                gridRTLPBKPP.teCari.Text = xDua;
                gridRTLPBKPP.fieldDicari = xTiga;
            }
            else
                gridRTLPBKPP.gvGridSk.ClearColumnsFilter();
            gridRTLPBKPP.labelTotData.Text = "";
            gridRTLPBKPP.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PBKPP

        #region --++ Simpan Data PBKPP
        SvcWasdalHapusTdLanjutCud.OutputParameters dOutAmbilDataPBKPP;
        SvcWasdalHapusTdLanjutCud.execute_pttClient ambilDataPBKPP;

        private void simpanDataRtlPBKPP(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.teNomorSk.Text.Trim() : formRTLPBKPPUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.teNoBuktiLaksana.Text.Trim() : formRTLPBKPPUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.cbJnsDokLaksana.SelectedText : formRTLPBKPPUbah.cbJnsDokLaksana.SelectedText);
                parInp.P_TGL_BUKTI_LAKSANA = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.deTglBuktiLaksana.EditValue : formRTLPBKPPUbah.deTglBuktiLaksana.EditValue));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.teKetBukti.Text : formRTLPBKPPUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLPBKPPTambah.filePath) : konfigApp.convert2byte(formRTLPBKPPUbah.filePath));
                parInp.P_ID_SK_WASDAL_HAPUS = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.idSkWasdal : formRTLPBKPPUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLPBKPPTambah.idSkTL : formRTLPBKPPUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataPBKPP = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPBKPP.Beginexecute(parInp, new AsyncCallback(cudRtlPBKPP), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlPBKPP()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalHapusTdLanjutCud.InputParameters parInp = new SvcWasdalHapusTdLanjutCud.InputParameters();
                parInp.P_SK_KEPUTUSAN = gridRTLPBKPP.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLPBKPP.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_ID_SK_WASDAL_HAPUSSpecified = true;
                parInp.P_ID_TL_WASDAL_PENGHAPUSANSpecified = true;
                parInp.P_ID_SK_WASDAL_HAPUS = gridRTLPBKPP.dataTerpilih.ID_SK_WASDAL_HAPUS;
                parInp.P_ID_TL_WASDAL_PENGHAPUSAN = gridRTLPBKPP.dataTerpilih.ID_TL_WASDAL_PENGHAPUSAN;
                
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataPBKPP = new SvcWasdalHapusTdLanjutCud.execute_pttClient();
                ambilDataPBKPP.Beginexecute(parInp, new AsyncCallback(cudRtlPBKPP), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlPBKPP(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataPBKPP = ambilDataPBKPP.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlPBKPP(this.ubahDsRtlPBKPP), dOutAmbilDataPBKPP);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog+"\r\n"+dOutAmbilDataPBKPP.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlPBKPP(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl);

        int _keBerapaPBKPP = 0;

        private void ubahDsRtlPBKPP(SvcWasdalHapusTdLanjutCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL dataPenyama = new SvcWasdalHapusTdLanjutSelect.WASDALSROW_READ_WASDAL_HAPUS_TL();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                //dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLPBKPPTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPBKPPTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPBKPPTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPBKPPTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPBKPPTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPBKPPTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPBKPPTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPBKPPTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPBKPPTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPBKPPTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKPPTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPBKPPTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKPPTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPBKPPTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLPBKPPTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPBKPPTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPBKPPTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPBKPPTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLPBKPP == null ? 1 : dsgridRTLPBKPP.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLPBKPPTambah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPBKPPTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPBKPPTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        //dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLPBKPPTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPBKPPTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPBKPPTambah.teUraianKeputusan.Text;
                        dsgridRTLPBKPP.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLPBKPP.dataTerpilih = dataPenyama;
                            _keBerapaPBKPP = 1;
                            formRTLPBKPPTambah.gcDaftarAset.Enabled = true;
                            formRTLPBKPPTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.sbCariPemohon.Enabled = false;
                            formRTLPBKPPTambah.sbRefresh.Enabled = true;
                            formRTLPBKPPTambah.sbTambah.Enabled = true;
                            formRTLPBKPPTambah.sbHapus.Enabled = true;
                            formRTLPBKPPTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.cePilihSemua.Enabled = true;
                            formRTLPBKPPTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLPBKPPTambah.statusForm = "CU";
                            formRTLPBKPPTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLPBKPP.IndexOf(gridRTLPBKPP.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLPBKPP.Remove(gridRTLPBKPP.dataTerpilih);
                            dsgridRTLPBKPP.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLPBKPPUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLPBKPPUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLPBKPPUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLPBKPPUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLPBKPPUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLPBKPPUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLPBKPPUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLPBKPPUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLPBKPPUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLPBKPPUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKPPUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLPBKPPUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLPBKPPUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLPBKPPUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLPBKPP.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLPBKPPUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLPBKPPUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLPBKPPUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLPBKPPUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLPBKPP.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLPBKPP.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLPBKPPUbah.teNomorSk.Text;
                        //dataPenyama.STATUS_BMN = gridRTLPBKPP.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLPBKPP.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLPBKPPUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLPBKPPUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLPBKPP.dataTerpilih.TOT_BMN;
                        //dataPenyama.TOT_STATUS = gridRTLPBKPP.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLPBKPP.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLPBKPPUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLPBKPPUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLPBKPPUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLPBKPP.IndexOf(gridRTLPBKPP.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLPBKPP.Remove(gridRTLPBKPP.dataTerpilih);
                        dsgridRTLPBKPP.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLPBKPP.Remove(gridRTLPBKPP.dataTerpilih);
                        break;
                }
                gridRTLPBKPP.dsDataSource = dsgridRTLPBKPP;
                gridRTLPBKPP.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain+"\r\n"+dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPBKPP(SvcWasdalHapusSkTLSelect.WASDALSROW_SK_WASDAL_HAPUS_TL _skTerpilih)
        {
            formRTLPBKPPTambah = new KSK.TL.PBKPP.ucRTLPBKPPForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKPP)
            };
            formRTLPBKPPTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLPBKPPTambah);
            formRTLPBKPPTambah.inisialisasiForm();
            setTombolRtlForm();
        }
        #endregion Simpan Data PSP BMN

        #region action button
        KSK.TL.PBKPP.frmPuSk formSkPBKPP;

        private void RkmTlPBKPPTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan16), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPBKPP = new KSK.TL.PBKPP.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkPM = new PilihSkHapus(pilihSkPBKPP)
                };
                formSkPBKPP.ShowDialog();
            }
        }

        private void RkmTlPBKPPEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKPP.dataTerpilih != null)
            {
                if (formRTLPBKPPUbah == null)
                {
                    formRTLPBKPPUbah = new KSK.TL.PBKPP.ucRTLPBKPPForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKPP)
                    };
                }
                formRTLPBKPPUbah.dataTerpilih = gridRTLPBKPP.dataTerpilih;
                setPanel(formRTLPBKPPUbah);
                formRTLPBKPPUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBKPPHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKPP.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLPBKPP.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlPBKPP();
                }
            }
        }

        private void RkmTlPBKPPDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLPBKPP.dataTerpilih != null)
            {
                if (formRTLPBKPPDetail == null)
                {
                    formRTLPBKPPDetail = new KSK.TL.PBKPP.ucRTLPBKPPForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlPM = new SimpanDataRtl(simpanDataRtlPBKPP)
                    };
                }
                formRTLPBKPPDetail.dataTerpilih = gridRTLPBKPP.dataTerpilih;
                setPanel(formRTLPBKPPDetail);
                formRTLPBKPPDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlPBKPPRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLPBKPP.teNamaKolom.Text = "";
            gridRTLPBKPP.teCari.Text = "";
            gridRTLPBKPP.fieldDicari = "";
            gridRTLPBKPP.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlPBKPP();
        }

        private void RkmTlPBKPPMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlPBKPP();
            }
        }

        private void RkmTlPBKPPKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPengadilan;
            konfigApp.kdPelayanan = "16";
            konfigApp.namaPelayanan = this.subMenuMonPengadilan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlPBKPP();
            modeCari = false;
            gridRTLPBKPP.teNamaKolom.Text = "";
            gridRTLPBKPP.teCari.Text = "";
            gridRTLPBKPP.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlPBKPP();
        }

        private void RkmTlPBKPPTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmTlPBKPP(string _strWhere, bool iniPBKPPNodeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = iniPBKPPNodeCari;
            getInitRkmTlPBKPP();
        }

        #endregion

        #region BONGKARAN

        KSK.TL.BONGKARAN.ucRTLBONGKARANGrid gridRTLBONGKARAN;
        KSK.TL.BONGKARAN.ucRTLBONGKARANForm formRTLBONGKARANTambah;
        KSK.TL.BONGKARAN.ucRTLBONGKARANForm formRTLBONGKARANUbah;
        KSK.TL.BONGKARAN.ucRTLBONGKARANForm formRTLBONGKARANDetail;
        private ArrayList dsgridRTLBONGKARAN;
        SvcTLBongkaranSelect.OutputParameters dOutRtlBONGKARAN;
        SvcTLBongkaranSelect.execute_pttClient ambilRtlBONGKARAN;


        private void nbiTLBONGKARAN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonBongkaran;
            konfigApp.kdPelayanan = "22";
            konfigApp.namaPelayanan = this.subMenuMonBongkaran;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBONGKARAN();
            modeCari = false;
            gridRTLBONGKARAN.teNamaKolom.Text = "";
            gridRTLBONGKARAN.teCari.Text = "";
            gridRTLBONGKARAN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBONGKARAN();
        }

        private void setEventBtnTlBONGKARAN()
        {
            this.resetEventBtnTlWasdal();
            this.bbiRkmTlTambah.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANTambah);
            this.bbiRkmTlEdit.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANEdit);
            this.bbiRkmTlHapus.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANHapus);
            this.bbiRkmTlRefresh.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANRefresh);
            this.bbiRkmTlMore.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANMore);
            this.bbiRkmTlDetail.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANDetail);
            this.bbiRkmTlKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANKembali);
            this.bbiRkmTlTutup.ItemClick += new ItemClickEventHandler(this.RkmTlBONGKARANTutup);
        }

        public void initGridRkmTlBONGKARAN()
        {

            //if (gridRTLBONGKARAN == null)
            //{
            gridRTLBONGKARAN = new KSK.TL.BONGKARAN.ucRTLBONGKARANGrid()
            {
                cariDataOnline = new CariDataOnline(cariDataRkmTlBONGKARAN),
                detailDataGrid = new DetailDataGrid(RkmTlBONGKARANEdit)
            };
            //}
            setTombolRtlGrid();
            setEventBtnTlBONGKARAN();
            setPanel(gridRTLBONGKARAN);
        }

        #region --++ Ambil Data BONGKARAN
        private void getInitRkmTlBONGKARAN()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcTLBongkaranSelect.InputParameters parInp = new SvcTLBongkaranSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format("NO_BUKTI_LAKSANA IS NOT NULL AND KD_PELAYANAN = '{0}' AND TIPE_PEMOHON='SATKER' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRtlBONGKARAN = new SvcTLBongkaranSelect.execute_pttClient();
                ambilRtlBONGKARAN.Open();
                ambilRtlBONGKARAN.Beginexecute(parInp, new AsyncCallback(getRkmTlBONGKARAN), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmTlBONGKARAN(IAsyncResult result)
        {
            try
            {
                dOutRtlBONGKARAN = ambilRtlBONGKARAN.Endexecute(result);
                ambilRtlBONGKARAN.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRtlBONGKARAN(dsRtlBONGKARAN), dOutRtlBONGKARAN);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRtlBONGKARAN(SvcTLBongkaranSelect.OutputParameters dataOut);

        private void dsRtlBONGKARAN(SvcTLBongkaranSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_TL_BONGKARAN_GRID.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_TL_BONGKARAN_GRID[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmTlMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmTlMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsgridRTLBONGKARAN = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_TL_BONGKARAN_GRID[i].IS_TB = (dataOut.SF_TL_BONGKARAN_GRID[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_TL_BONGKARAN_GRID[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_TL_BONGKARAN_GRID[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_TL_BONGKARAN_GRID[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_TL_BONGKARAN_GRID[i].TGL_CREATED);
                dataOut.SF_TL_BONGKARAN_GRID[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_TL_BONGKARAN_GRID[i].TGL_SK);
                dataOut.SF_TL_BONGKARAN_GRID[i].KD_SATKER = konfigApp.kodeSatker;
                dataOut.SF_TL_BONGKARAN_GRID[i].UR_SATKER = konfigApp.namaSatker;
                dsgridRTLBONGKARAN.Add(dataOut.SF_TL_BONGKARAN_GRID[i]);
            }

            gridRTLBONGKARAN.sbCariOnline.Enabled = !modeCari;
            gridRTLBONGKARAN.dsDataSource = dsgridRTLBONGKARAN;
            gridRTLBONGKARAN.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRTLBONGKARAN.teNamaKolom.Text.Trim();
                string xDua = gridRTLBONGKARAN.teCari.Text.Trim();
                string xTiga = gridRTLBONGKARAN.fieldDicari;
                gridRTLBONGKARAN.gvGridSk.ClearColumnsFilter();
                gridRTLBONGKARAN.teNamaKolom.Text = xSatu;
                gridRTLBONGKARAN.teCari.Text = xDua;
                gridRTLBONGKARAN.fieldDicari = xTiga;
            }
            else
                gridRTLBONGKARAN.gvGridSk.ClearColumnsFilter();
            gridRTLBONGKARAN.labelTotData.Text = "";
            gridRTLBONGKARAN.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil BONGKARAN

        #region --++ Simpan Data BONGKARAN
        SvcTLBongkaranCud.OutputParameters dOutAmbilDataBONGKARAN;
        SvcTLBongkaranCud.execute_pttClient ambilDataBONGKARAN;

        private void simpanDataRtlBONGKARAN(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcTLBongkaranCud.InputParameters parInp = new SvcTLBongkaranCud.InputParameters();

                parInp.P_ID_SK_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.idSkWasdal : formRTLBONGKARANUbah.idSkWasdal);
                parInp.P_ID_SK_BNKSpecified = true;
                parInp.P_ID_TL_WASDAL_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.idSkTL : formRTLBONGKARANUbah.idSkTL);
                parInp.P_ID_TL_WASDAL_BNKSpecified = true;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;

                parInp.P_SK_KEPUTUSAN_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.teNomorSk.Text.Trim() : formRTLBONGKARANUbah.teNomorSk.Text.Trim());
                parInp.P_NO_BUKTI_LAKSANA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.teNoBuktiLaksana.Text.Trim() : formRTLBONGKARANUbah.teNoBuktiLaksana.Text.Trim());
                parInp.P_JNS_BUKTI_LAKSANAAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.jnsBuktiStr(formRTLBONGKARANTambah.cbJnsDokLaksana.SelectedIndex) : formRTLBONGKARANUbah.jnsBuktiStr(formRTLBONGKARANUbah.cbJnsDokLaksana.SelectedIndex));
                parInp.P_TGL_BUKTI_LAKSANA = Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.deTglBuktiLaksana.EditValue : formRTLBONGKARANUbah.deTglBuktiLaksana.EditValue);
                parInp.P_TGL_BUKTI_LAKSANASpecified = true;
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRTLBONGKARANTambah.teKetBukti.Text : formRTLBONGKARANUbah.teKetBukti.Text);
                //parInp.P_FILE_BUKTI = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRTLBONGKARANTambah.filePath) : konfigApp.convert2byte(formRTLBONGKARANUbah.filePath));

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilDataBONGKARAN = new SvcTLBongkaranCud.execute_pttClient();
                ambilDataBONGKARAN.Beginexecute(parInp, new AsyncCallback(cudRtlBONGKARAN), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRtlBONGKARAN()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcTLBongkaranCud.InputParameters parInp = new SvcTLBongkaranCud.InputParameters();
                parInp.P_ID_SK_BNKSpecified = true;
                parInp.P_ID_SK_BNK = gridRTLBONGKARAN.dataTerpilih.ID_SK_WASDAL_PINDAHTANGAN;
                parInp.P_ID_TL_WASDAL_BNKSpecified = true;
                parInp.P_ID_TL_WASDAL_BNK = gridRTLBONGKARAN.dataTerpilih.ID_TL_WASDAL_BNK;
                parInp.P_SK_KEPUTUSAN_BNK = gridRTLBONGKARAN.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NO_BUKTI_LAKSANA = gridRTLBONGKARAN.dataTerpilih.NO_BUKTI_LAKSANA;
                parInp.P_JNS_BUKTI_LAKSANAAN = gridRTLBONGKARAN.dataTerpilih.JNS_BUKTI_LAKSANA;
                parInp.P_TGL_BUKTI_LAKSANA = gridRTLBONGKARAN.dataTerpilih.TGL_BUKTI_LAKSANA;
                parInp.P_KET = gridRTLBONGKARAN.dataTerpilih.KET;
                parInp.P_KD_PELAYANAN = konfigApp.kdPelayanan;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilDataBONGKARAN = new SvcTLBongkaranCud.execute_pttClient();
                ambilDataBONGKARAN.Beginexecute(parInp, new AsyncCallback(cudRtlBONGKARAN), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRtlBONGKARAN(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataBONGKARAN = ambilDataBONGKARAN.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRtlBONGKARAN(this.ubahDsRtlBONGKARAN), dOutAmbilDataBONGKARAN);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog + "\r\n" + dOutAmbilDataBONGKARAN.PO_RESULT_MESSAGE, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRtlBONGKARAN(SvcTLBongkaranCud.OutputParameters dataOutRtl);

        int _keBerapaBONGKARAN = 0;

        private void ubahDsRtlBONGKARAN(SvcTLBongkaranCud.OutputParameters dataOutRtl)
        {
            if (dataOutRtl.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcTLBongkaranSelect.WASDALSROW_TL_BONGKARAN_GRID dataPenyama = new SvcTLBongkaranSelect.WASDALSROW_TL_BONGKARAN_GRID();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_PEMOHON = konfigApp.idSatker;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_CREATEDSpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_PEMOHON = formRTLBONGKARANTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBONGKARANTambah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBONGKARANTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLBONGKARANTambah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLBONGKARANTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBONGKARANTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBONGKARANTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBONGKARANTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBONGKARANTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBONGKARANTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBONGKARANTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBONGKARANTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBONGKARANTambah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLBONGKARANTambah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRTLBONGKARANTambah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLBONGKARANTambah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLBONGKARANTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBONGKARANTambah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = "";
                        dataPenyama.NUM = (dsgridRTLBONGKARAN == null ? 1 : dsgridRTLBONGKARAN.Count + 1);
                        dataPenyama.SK_KEPUTUSAN = formRTLBONGKARANTambah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = "";
                        dataPenyama.TGL_CREATED = DateTime.Now;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBONGKARANTambah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLBONGKARANTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRTLBONGKARANTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBONGKARANTambah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLBONGKARANTambah.teUraianKeputusan.Text;
                        dsgridRTLBONGKARAN.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRTLBONGKARAN.dataTerpilih = dataPenyama;
                            _keBerapaBONGKARAN = 1;
                            formRTLBONGKARANTambah.gcDaftarAset.Enabled = true;
                            formRTLBONGKARANTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.teNomorSk.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.sbCariPemohon.Enabled = false;
                            formRTLBONGKARANTambah.sbRefresh.Enabled = true;
                            formRTLBONGKARANTambah.sbTambah.Enabled = true;
                            formRTLBONGKARANTambah.sbHapus.Enabled = true;
                            formRTLBONGKARANTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.cePilihSemua.Enabled = true;
                            formRTLBONGKARANTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRTLBONGKARANTambah.statusForm = "CU";
                            formRTLBONGKARANTambah.teNoBuktiLaksana.Properties.ReadOnly = true;
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskPpBmn.IndexOf(gridSkPpBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkPpBmn.dataTerpilih = gridSkPpBmn.dataTerpilih;
                            }*/
                            _indeksData = dsgridRTLBONGKARAN.IndexOf(gridRTLBONGKARAN.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsgridRTLBONGKARAN.Remove(gridRTLBONGKARAN.dataTerpilih);
                            dsgridRTLBONGKARAN.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_PEMOHON = formRTLBONGKARANUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRTLBONGKARANUbah.idPemohon;
                        dataPenyama.IS_TB = (formRTLBONGKARANUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        //dataPenyama.JABATAN_TTD = formRTLBONGKARANUbah.teJabatan.Text;
                        dataPenyama.KD_KL = formRTLBONGKARANUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRTLBONGKARANUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRTLBONGKARANUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRTLBONGKARANUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRTLBONGKARANUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRTLBONGKARANUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRTLBONGKARANUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRTLBONGKARANUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRTLBONGKARANUbah.teNilaiPenetapan.Text);
                        //dataPenyama.NIP_PENANDATANGAN = formRTLBONGKARANUbah.teNipPenandaTangan.Text;
                        dataPenyama.NM_PELAYANAN = gridRTLBONGKARAN.dataTerpilih.NM_PELAYANAN;
                        dataPenyama.NM_PEMOHON = formRTLBONGKARANUbah.teNamaPemohon.Text;
                        //dataPenyama.NM_PENANDATANGAN = formRTLBONGKARANUbah.teNamaPenandaTangan.Text;
                        dataPenyama.NM_PENERBIT_SK = formRTLBONGKARANUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRTLBONGKARANUbah.namaPenerbitSkDetail;
                        dataPenyama.NM_PENGGUNA = gridRTLBONGKARAN.dataTerpilih.NM_PENGGUNA;
                        dataPenyama.NUM = gridRTLBONGKARAN.dataTerpilih.NUM;
                        dataPenyama.SK_KEPUTUSAN = formRTLBONGKARANUbah.teNomorSk.Text;
                        dataPenyama.STATUS_BMN = gridRTLBONGKARAN.dataTerpilih.STATUS_BMN;
                        dataPenyama.TGL_CREATED = gridRTLBONGKARAN.dataTerpilih.TGL_CREATED;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRTLBONGKARANUbah.teTanggalSk.Text);
                        dataPenyama.TIPE_PEMOHON = formRTLBONGKARANUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = gridRTLBONGKARAN.dataTerpilih.TOT_BMN;
                        dataPenyama.TOT_STATUS = gridRTLBONGKARAN.dataTerpilih.TOT_STATUS;
                        dataPenyama.TOTAL_DATA = gridRTLBONGKARAN.dataTerpilih.TOTAL_DATA;
                        dataPenyama.UR_KL = formRTLBONGKARANUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRTLBONGKARANUbah.teNamaPemohon.Text;
                        //dataPenyama.URAIAN_KEPUTUSAN = formRTLBONGKARANUbah.teUraianKeputusan.Text;
                        _indeksData = dsgridRTLBONGKARAN.IndexOf(gridRTLBONGKARAN.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsgridRTLBONGKARAN.Remove(gridRTLBONGKARAN.dataTerpilih);
                        dsgridRTLBONGKARAN.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsgridRTLBONGKARAN.Remove(gridRTLBONGKARAN.dataTerpilih);
                        break;
                }
                gridRTLBONGKARAN.dsDataSource = dsgridRTLBONGKARAN;
                gridRTLBONGKARAN.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initgridSkPpBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain + "\r\n" + dataOutRtl.PO_RESULT_MESSAGE, konfigApp.judulKonfirmasi);
        }

        private void pilihSkBongkaran(SvcWasdalRSKBongkaranSkSelect.WASDALSROW_SK_BONGKARAN_GRID _skTerpilih)
        {
            formRTLBONGKARANTambah = new KSK.TL.BONGKARAN.ucRTLBONGKARANForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRtlBONGKARAN = new SimpanDataRtl(simpanDataRtlBONGKARAN)
            };
            formRTLBONGKARANTambah.skTerpilih = _skTerpilih;
            setPanel(formRTLBONGKARANTambah);
            formRTLBONGKARANTambah.inisialisasiForm();
            setTombolRtlForm();
        }

        #endregion

        #region Action Button
        KSK.TL.BONGKARAN.frmPuSk formSkBongkaran;

        private void RkmTlBONGKARANTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat Tindak Lanjut Baru \n{0}?", konfigApp.namaLayanan22), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkBongkaran = new KSK.TL.BONGKARAN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkBongkaran = new PilihSkBOngkaran(pilihSkBongkaran)
                };
                formSkBongkaran.ShowDialog();
            }
        }

        private void RkmTlBONGKARANEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBONGKARAN.dataTerpilih != null)
            {
                if (formRTLBONGKARANUbah == null)
                {
                    formRTLBONGKARANUbah = new KSK.TL.BONGKARAN.ucRTLBONGKARANForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBONGKARAN = new SimpanDataRtl(simpanDataRtlBONGKARAN)
                    };
                }
                formRTLBONGKARANUbah.dataTerpilih = gridRTLBONGKARAN.dataTerpilih;
                setPanel(formRTLBONGKARANUbah);
                formRTLBONGKARANUbah.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBONGKARANHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBONGKARAN.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus Tindak Lanjut\n{0}?", gridRTLBONGKARAN.dataTerpilih.NO_BUKTI_LAKSANA), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRtlBONGKARAN();
                    getInitRkmTlBONGKARAN();
                }
            }
        }

        private void RkmTlBONGKARANDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRTLBONGKARAN.dataTerpilih != null)
            {
                if (formRTLBONGKARANDetail == null)
                {
                    formRTLBONGKARANDetail = new KSK.TL.BONGKARAN.ucRTLBONGKARANForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRtlBONGKARAN = new SimpanDataRtl(simpanDataRtlBONGKARAN)
                    };
                }
                formRTLBONGKARANDetail.dataTerpilih = gridRTLBONGKARAN.dataTerpilih;
                setPanel(formRTLBONGKARANDetail);
                formRTLBONGKARANDetail.inisialisasiForm();
                setTombolRtlForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmTlBONGKARANRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRTLBONGKARAN.teNamaKolom.Text = "";
            gridRTLBONGKARAN.teCari.Text = "";
            gridRTLBONGKARAN.fieldDicari = "";
            gridRTLBONGKARAN.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmTlBONGKARAN();
        }

        private void RkmTlBONGKARANMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmTlBONGKARAN();
            }
        }

        private void RkmTlBONGKARANKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamTlWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "22";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmTindakLanjut.Visible = true;
            ribbon.SelectedPage = rpRkmTindakLanjut;
            initGridRkmTlBONGKARAN();
            modeCari = false;
            gridRTLBONGKARAN.teNamaKolom.Text = "";
            gridRTLBONGKARAN.teCari.Text = "";
            gridRTLBONGKARAN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmTlBONGKARAN();
        }

        private void RkmTlBONGKARANTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion Action Button

        private void cariDataRkmTlBONGKARAN(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmTlBONGKARAN();
        }

        #endregion

        #endregion

        #region PEREKAMAN PNBP

        private void resetEventBtnPnbpWasdal()
        {
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpTambah);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpUbah);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpHapus);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpRefresh);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpMore);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpDetail);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpKembaliGrid);
            konfigApp.RemoveClickEvent(this.bbiRkmPnbpTutup);
        }

        public void setTombolRkmPnbpGrid()
        {
            bbiRkmPnbpTambah.Enabled = true;
            bbiRkmPnbpUbah.Enabled = true;
            bbiRkmPnbpHapus.Enabled = true;
            bbiRkmPnbpDetail.Enabled = true;
            bbiRkmPnbpMore.Enabled = true;
            bbiRkmPnbpRefresh.Enabled = true;
            bbiRkmPnbpKembaliGrid.Enabled = false;
            bbiRkmPnbpTutup.Enabled = true;

        }

        public void setTombolRkmPnbpForm()
        {
            bbiRkmPnbpTambah.Enabled = false;
            bbiRkmPnbpUbah.Enabled = false;
            bbiRkmPnbpHapus.Enabled = false;
            bbiRkmPnbpDetail.Enabled = false;
            bbiRkmPnbpMore.Enabled = false;
            bbiRkmPnbpRefresh.Enabled = false;
            bbiRkmPnbpKembaliGrid.Enabled = true;
            bbiRkmPnbpTutup.Enabled = true;
        }

        private void setGridRkmPnbpWasdal(string menu, string submenu)
        {


            konfigApp.strMenu = menu;
            konfigApp.strSubMenu = submenu;
            this.inisialisasiForm();
            //this.rpRkmTindakLanjut.Text = konfigApp.strSubMenu;
            //this.rpgRkmTindakLanjut.Text = konfigApp.strSubMenu;
            //this.rpRkmTindakLanjut.Visible = true;
            //this.ribbon.SelectedPage = this.rpRkmTindakLanjut;
            this.rpRkmPnbp.Text = konfigApp.strSubMenu;
            this.rpgRkmPnbp.Text = konfigApp.strSubMenu;
            this.rpRkmPnbp.Visible = true;
            this.ribbon.SelectedPage = this.rpRkmPnbp;
            this.modeLoadData = "normal";
            this.strCari = "";
            this.dataInisial = true;
            this.adaData = false;
            this.masihAdaData = true;
        }

        private void bbiRkmPnbpKembali_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            panelKoorSatker.Controls.Clear();
            rpRkmPnbp.Visible = false;
        }

        #region SEWABMN
        KSK.PNBP.SWBMN.ucSewaBmnGrid gridRkmPnbpSwBmn;
        KSK.PNBP.SWBMN.ucPNBPSewaBmnForm formRkmPnbpSwBmnTambah;
        KSK.PNBP.SWBMN.ucPNBPSewaBmnForm formRkmPnbpSwBmnUbah;
        KSK.PNBP.SWBMN.ucPNBPSewaBmnForm formRkmPnbpSwBmnDetail;
        private ArrayList dsGridRkmPnbpSwBmn;
        SvcWasdalManfaatPnbpSelect.OutputParameters dOutRkmPnbpSwBmn;
        SvcWasdalManfaatPnbpSelect.execute_pttClient ambilRkmPnbpSwBmn;

        private void nbiPnbpSWBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonSWBMN;
            konfigApp.kdPelayanan = "06";
            konfigApp.namaPelayanan = this.subMenuMonSWBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpSWBMN();
            modeCari = false;
            gridRkmPnbpSwBmn.teNamaKolom.Text = "";
            gridRkmPnbpSwBmn.teCari.Text = "";
            gridRkmPnbpSwBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpSwBmn();
        }

        private void setEventBtnPnbpSWBMN()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpSWBMNTutup);

        }

        public void initGridRkmPnbpSWBMN()
        {

            if (gridRkmPnbpSwBmn == null)
            {
                gridRkmPnbpSwBmn = new KSK.PNBP.SWBMN.ucSewaBmnGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpSwBmn),
                    detailDataGrid = new DetailDataGrid(RkmPnbpSWBMNEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpSWBMN();
            setPanel(gridRkmPnbpSwBmn);
        }

        #region --++ Ambil Data SEWA BMN
        private void getInitRkmPnbpSwBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpSelect.InputParameters parInp = new SvcWasdalManfaatPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpSwBmn = new SvcWasdalManfaatPnbpSelect.execute_pttClient();
                ambilRkmPnbpSwBmn.Open();
                ambilRkmPnbpSwBmn.Beginexecute(parInp, new AsyncCallback(getRkmPnbpSwBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpSwBmn(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpSwBmn = ambilRkmPnbpSwBmn.Endexecute(result);
                ambilRkmPnbpSwBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpSwBmn(dsRkmPnbpSwBmn), dOutRkmPnbpSwBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpSwBmn(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpSwBmn(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpSwBmn = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRkmPnbpSwBmn.Add(dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i]);
            }

            gridRkmPnbpSwBmn.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpSwBmn.dsDataSource = dsGridRkmPnbpSwBmn;
            gridRkmPnbpSwBmn.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpSwBmn.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpSwBmn.teCari.Text.Trim();
                string xTiga = gridRkmPnbpSwBmn.fieldDicari;
                gridRkmPnbpSwBmn.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpSwBmn.teNamaKolom.Text = xSatu;
                gridRkmPnbpSwBmn.teCari.Text = xDua;
                gridRkmPnbpSwBmn.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpSwBmn.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpSwBmn.labelTotData.Text = "";
            gridRkmPnbpSwBmn.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data SEWA BMN
        SvcWasdalManfaatPnbpCud.OutputParameters dOutAmbilPnbpSwBmn;
        SvcWasdalManfaatPnbpCud.execute_pttClient ambilPnbpSwBmn;

        private void simpanDataRkmPnbpSwBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.idSkWasdal : formRkmPnbpSwBmnUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.idSkPNBP : formRkmPnbpSwBmnUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.idTlSkWasdal : formRkmPnbpSwBmnUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.idSatker : formRkmPnbpSwBmnUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.kd_pelayanan : formRkmPnbpSwBmnUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teNomorSk.Text.Trim() : formRkmPnbpSwBmnUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teNTPN.Text.Trim() : formRkmPnbpSwBmnUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpSwBmnTambah.deTglSetor.Text) : konfigApp.toDateTime(formRkmPnbpSwBmnUbah.deTglSetor.Text));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teNTB.Text : formRkmPnbpSwBmnUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpSwBmnTambah.deTglTransaksi.Text) : konfigApp.toDateTime(formRkmPnbpSwBmnUbah.deTglTransaksi.Text));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teNamaPenyetor.Text : formRkmPnbpSwBmnUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.leAkun.EditValue.ToString() : formRkmPnbpSwBmnUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.leAkun.Text : formRkmPnbpSwBmnUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpSwBmnTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpSwBmnUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teKet.Text : formRkmPnbpSwBmnUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpSwBmnTambah.filePath) : konfigApp.convert2byte(formRkmPnbpSwBmnUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpSwBmnTambah.teKdBilling.Text : formRkmPnbpSwBmnUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpSwBmn = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpSwBmn.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpSwBmn), "");
                
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpSwBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRkmPnbpSwBmn.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpSwBmn.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpSwBmn.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NTPN = gridRkmPnbpSwBmn.dataTerpilih.NTPN;
                parInp.P_ID_SATKER = gridRkmPnbpSwBmn.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpSwBmn.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpSwBmn.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpSwBmn.dataTerpilih.KD_AKUN;
                parInp.P_KD_PELAYANAN = gridRkmPnbpSwBmn.dataTerpilih.KD_PELAYANAN;
                parInp.P_KD_BILLING = gridRkmPnbpSwBmn.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpSwBmn = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpSwBmn.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpSwBmn), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRkmPnbpSwBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpSwBmn = ambilPnbpSwBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpSwBmn(this.ubahDsRkmPnbpSwBmn), dOutAmbilPnbpSwBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpSwBmn(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpSwBmn = 0;

        private void ubahDsRkmPnbpSwBmn(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP dataPenyama = new SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpSwBmnTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpSwBmnTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpSwBmnTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpSwBmnTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpSwBmnTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpSwBmnTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpSwBmnTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpSwBmnTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpSwBmnTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpSwBmnTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpSwBmnTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpSwBmnTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpSwBmnTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpSwBmnTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpSwBmnTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpSwBmnTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpSwBmnTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpSwBmnTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpSwBmn == null ? 1 : dsGridRkmPnbpSwBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpSwBmnTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = formRkmPnbpSwBmnTambah.deTglSetor.DateTime;
                        dataPenyama.NTB = formRkmPnbpSwBmnTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = formRkmPnbpSwBmnTambah.deTglTransaksi.DateTime;
                        dataPenyama.NM_PENYETOR = formRkmPnbpSwBmnTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpSwBmnTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpSwBmnTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpSwBmnTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpSwBmnTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpSwBmnTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpSwBmnTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpSwBmnTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpSwBmnTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpSwBmnTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpSwBmnTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpSwBmnTambah.idSatker;
                        dsGridRkmPnbpSwBmn.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpSwBmn.dataTerpilih = dataPenyama;
                            _keBrpPnbpSwBmn = 1;
                            formRkmPnbpSwBmnTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpSwBmnTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpSwBmnTambah.sbRefresh.Enabled = true;
                            formRkmPnbpSwBmnTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpSwBmnTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpSwBmnTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskSwBmn.IndexOf(gridSkSwBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkSwBmn.dataTerpilih = gridSkSwBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpSwBmn.IndexOf(gridRkmPnbpSwBmn.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpSwBmn.Remove(gridRkmPnbpSwBmn.dataTerpilih);
                            dsGridRkmPnbpSwBmn.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpSwBmnUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpSwBmnUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpSwBmnUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpSwBmnUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpSwBmnUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpSwBmnUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpSwBmnUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpSwBmnUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpSwBmnUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpSwBmnUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpSwBmnUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpSwBmnUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpSwBmnUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpSwBmnUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpSwBmnUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpSwBmnUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpSwBmnUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpSwBmnUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpSwBmn == null ? 1 : dsGridRkmPnbpSwBmn.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpSwBmnUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = formRkmPnbpSwBmnUbah.deTglSetor.DateTime;
                        dataPenyama.NTB = formRkmPnbpSwBmnUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = formRkmPnbpSwBmnUbah.deTglTransaksi.DateTime;
                        dataPenyama.NM_PENYETOR = formRkmPnbpSwBmnUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpSwBmnUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpSwBmnUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpSwBmnUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpSwBmnUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpSwBmnUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpSwBmnUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpSwBmnUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpSwBmnUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpSwBmnUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpSwBmnUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpSwBmnUbah.idSatker;
                        _indeksData = dsGridRkmPnbpSwBmn.IndexOf(gridRkmPnbpSwBmn.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpSwBmn.Remove(gridRkmPnbpSwBmn.dataTerpilih);
                        dsGridRkmPnbpSwBmn.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                         strCari = "";
                        modeCari = false;
                        gridRkmPnbpSwBmn.teNamaKolom.Text = "";
                        gridRkmPnbpSwBmn.teCari.Text = "";
                        gridRkmPnbpSwBmn.fieldDicari = "";
                        gridRkmPnbpSwBmn.dataInisial = true;
                        this.dataInisial = true;
                        this.getInitRkmPnbpSwBmn();
                        //dsGridRkmPnbpSwBmn.Remove(gridRkmPnbpSwBmn.dataTerpilih);
                        break;
                }
                //gridRkmPnbpSwBmn.dsDataSource = dsGridRkmPnbpSwBmn;
                //gridRkmPnbpSwBmn.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkSwBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbp(SvcWasdalManfaatPnbpSelectSk.WASDALSROW_READ_WASDAL_MANFAAT_PNBP _skTerpilih)
        {
            formRkmPnbpSwBmnTambah = new KSK.PNBP.SWBMN.ucPNBPSewaBmnForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpSwBmn = new SimpanDataRPNBP(simpanDataRkmPnbpSwBmn)
            };
            formRkmPnbpSwBmnTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpSwBmnTambah);
            formRkmPnbpSwBmnTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data PSP BMN

        #region action button
        KSK.PNBP.SWBMN.frmPuSk formSkPnbp;

        private void RkmPnbpSWBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Sewa BMN Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbp = new KSK.PNBP.SWBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkManfaatPnbp(pilihSkPnbp)
                };
                formSkPnbp.ShowDialog();
            }
        }

        private void RkmPnbpSWBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpSwBmn.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpSwBmnUbah == null)
                {
                    formRkmPnbpSwBmnUbah = new KSK.PNBP.SWBMN.ucPNBPSewaBmnForm("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpSwBmn = new SimpanDataRPNBP(simpanDataRkmPnbpSwBmn)
                    };
                }
                formRkmPnbpSwBmnUbah.dataTerpilih = gridRkmPnbpSwBmn.dataTerpilih;
                formRkmPnbpSwBmnUbah.inisialisasiForm();
                setPanel(formRkmPnbpSwBmnUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpSWBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpSwBmn.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Sewa BMN\n{0}?", gridRkmPnbpSwBmn.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpSwBmn();
                }
            }
        }

        private void RkmPnbpSWBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpSwBmn.dataTerpilih != null)
            {
                if (formRkmPnbpSwBmnDetail == null)
                {
                    formRkmPnbpSwBmnDetail = new KSK.PNBP.SWBMN.ucPNBPSewaBmnForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpSwBmn = new SimpanDataRPNBP(simpanDataRkmPnbpSwBmn)
                    };
                }
                formRkmPnbpSwBmnDetail.dataTerpilih = gridRkmPnbpSwBmn.dataTerpilih;
                setPanel(formRkmPnbpSwBmnDetail);
                formRkmPnbpSwBmnDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpSWBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpSwBmn.teNamaKolom.Text = "";
            gridRkmPnbpSwBmn.teCari.Text = "";
            gridRkmPnbpSwBmn.fieldDicari = "";
            gridRkmPnbpSwBmn.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpSwBmn();
        }

        private void RkmPnbpSWBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpSwBmn();
            }
        }

        private void RkmPnbpSWBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonSWBMN;
            konfigApp.kdPelayanan = "06";
            konfigApp.namaPelayanan = this.subMenuMonSWBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpSWBMN();
            modeCari = false;
            gridRkmPnbpSwBmn.teNamaKolom.Text = "";
            gridRkmPnbpSwBmn.teCari.Text = "";
            gridRkmPnbpSwBmn.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpSwBmn();
        }

        private void RkmPnbpSWBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpSwBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpSwBmn();
        }
        #endregion

        #region KERJASAMA PEMANFAATAN
        KSK.PNBP.KPBMN.ucKpBmnGrid gridRkmPnbpKPBMN;
        KSK.PNBP.KPBMN.ucPNBPKpBmnForm formRkmPnbpKPBMNTambah;
        KSK.PNBP.KPBMN.ucPNBPKpBmnForm formRkmPnbpKPBMNUbah;
        KSK.PNBP.KPBMN.ucPNBPKpBmnForm formRkmPnbpKPBMNDetail;
        private ArrayList dsGridRkmPnbpKPBMN;
        SvcWasdalManfaatPnbpSelect.OutputParameters dOutRkmPnbpKpBmn;
        SvcWasdalManfaatPnbpSelect.execute_pttClient ambilRkmPnbpKpBmn;

        private void setEventBtnPnbpKPBMN()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpKPBMNTutup);

        }

        private void nbiPnbpKPBMN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonKPBMN;
            konfigApp.kdPelayanan = "08";
            konfigApp.namaPelayanan = this.subMenuMonKPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpKPBMN();
            modeCari = false;
            gridRkmPnbpKPBMN.teNamaKolom.Text = "";
            gridRkmPnbpKPBMN.teCari.Text = "";
            gridRkmPnbpKPBMN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpKpBmn();
        }

        public void initGridRkmPnbpKPBMN()
        {

            if (gridRkmPnbpKPBMN == null)
            {
                gridRkmPnbpKPBMN = new KSK.PNBP.KPBMN.ucKpBmnGrid() 
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpKpBmn),
                    detailDataGrid = new DetailDataGrid(RkmPnbpKPBMNEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpKPBMN();
            setPanel(gridRkmPnbpKPBMN);  
        }
        
        #region --++ Ambil Data KP BMN
        private void getInitRkmPnbpKpBmn()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpSelect.InputParameters parInp = new SvcWasdalManfaatPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpKpBmn = new SvcWasdalManfaatPnbpSelect.execute_pttClient();
                ambilRkmPnbpKpBmn.Open();
                ambilRkmPnbpKpBmn.Beginexecute(parInp, new AsyncCallback(getRkmPnbpKpBmn), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpKpBmn(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpKpBmn = ambilRkmPnbpKpBmn.Endexecute(result);
                ambilRkmPnbpKpBmn.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpKpBmn(dsRkmPnbpKpBmn), dOutRkmPnbpKpBmn);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpKpBmn(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpKpBmn(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpKPBMN = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRkmPnbpKPBMN.Add(dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i]);
            }

            gridRkmPnbpKPBMN.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpKPBMN.dsDataSource = dsGridRkmPnbpKPBMN;
            gridRkmPnbpKPBMN.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpKPBMN.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpKPBMN.teCari.Text.Trim();
                string xTiga = gridRkmPnbpKPBMN.fieldDicari;
                gridRkmPnbpKPBMN.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpKPBMN.teNamaKolom.Text = xSatu;
                gridRkmPnbpKPBMN.teCari.Text = xDua;
                gridRkmPnbpKPBMN.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpKPBMN.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpKPBMN.labelTotData.Text = "";
            gridRkmPnbpKPBMN.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PSP BMN

        #region --++ Simpan Data KP BMN
        SvcWasdalManfaatPnbpCud.OutputParameters dOutAmbilPnbpKpBmn;
        SvcWasdalManfaatPnbpCud.execute_pttClient ambilPnbpKpBmn;

        private void simpanDataRkmPnbpKpBmn(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.idSkWasdal : formRkmPnbpKPBMNUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.idSkPNBP : formRkmPnbpKPBMNUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.idTlSkWasdal : formRkmPnbpKPBMNUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.idSatker : formRkmPnbpKPBMNUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.kd_pelayanan : formRkmPnbpKPBMNUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teNomorSk.Text.Trim() : formRkmPnbpKPBMNUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teNTPN.Text.Trim() : formRkmPnbpKPBMNUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpKPBMNTambah.deTglSetor.DateTime) : konfigApp.toDateTime(formRkmPnbpKPBMNUbah.deTglSetor.DateTime));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teNTB.Text : formRkmPnbpKPBMNUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpKPBMNTambah.deTglTransaksi.DateTime) : konfigApp.toDateTime(formRkmPnbpKPBMNUbah.deTglTransaksi.DateTime));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teNamaPenyetor.Text : formRkmPnbpKPBMNUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.leAkun.EditValue.ToString() : formRkmPnbpKPBMNUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.leAkun.Text : formRkmPnbpKPBMNUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpKPBMNTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpKPBMNUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teKet.Text : formRkmPnbpKPBMNUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpKPBMNTambah.filePath) : konfigApp.convert2byte(formRkmPnbpKPBMNUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpKPBMNTambah.teKdBilling.Text : formRkmPnbpKPBMNUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpKpBmn = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpKpBmn.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpKpBmn), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpKpBmn()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRkmPnbpKPBMN.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpKPBMN.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpKPBMN.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NTPN = gridRkmPnbpKPBMN.dataTerpilih.NTPN;
                parInp.P_ID_SATKER = gridRkmPnbpKPBMN.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpKPBMN.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpKPBMN.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpKPBMN.dataTerpilih.KD_AKUN;
                parInp.P_KD_PELAYANAN = gridRkmPnbpKPBMN.dataTerpilih.KD_PELAYANAN;
                parInp.P_KD_BILLING = gridRkmPnbpKPBMN.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpKpBmn = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpKpBmn.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpKpBmn), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }

        private void cudRkmPnbpKpBmn(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpKpBmn = ambilPnbpKpBmn.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpKpBmn(this.ubahDsRkmPnbpKpBmn), dOutAmbilPnbpKpBmn);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpKpBmn(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpKpBmn = 0;

        private void ubahDsRkmPnbpKpBmn(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP dataPenyama = new SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpKPBMNTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpKPBMNTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpKPBMNTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpKPBMNTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpKPBMNTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpKPBMNTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpKPBMNTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpKPBMNTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpKPBMNTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpKPBMNTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpKPBMNTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpKPBMNTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpKPBMNTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpKPBMNTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpKPBMNTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpKPBMNTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpKPBMNTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpKPBMNTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpKPBMN == null ? 1 : dsGridRkmPnbpKPBMN.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpKPBMNTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpKPBMNTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpKPBMNTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpKPBMNTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpKPBMNTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpKPBMNTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpKPBMNTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpKPBMNTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpKPBMNTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpKPBMNTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpKPBMNTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpKPBMNTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpKPBMNTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpKPBMNTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpKPBMNTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpKPBMNTambah.idSatker;

                        dsGridRkmPnbpKPBMN.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpKPBMN.dataTerpilih = dataPenyama;
                            _keBrpPnbpKpBmn = 1;
                            formRkmPnbpKPBMNTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpKPBMNTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpKPBMNTambah.sbRefresh.Enabled = true;
                            formRkmPnbpKPBMNTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpKPBMNTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpKPBMNTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskSwBmn.IndexOf(gridSkSwBmn.dataTerpilih);
                            }
                            else
                            {
                                gridSkSwBmn.dataTerpilih = gridSkSwBmn.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpKPBMN.IndexOf(gridRkmPnbpKPBMN.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpKPBMN.Remove(gridRkmPnbpKPBMN.dataTerpilih);
                            dsGridRkmPnbpKPBMN.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpKPBMNUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpKPBMNUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpKPBMNUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpKPBMNUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpKPBMNUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpKPBMNUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpKPBMNUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpKPBMNUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpKPBMNUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpKPBMNUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpKPBMNUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpKPBMNUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpKPBMNUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpKPBMNUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpKPBMNUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpKPBMNUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpKPBMNUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpKPBMNUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpKPBMN == null ? 1 : dsGridRkmPnbpKPBMN.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpKPBMNUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpKPBMNUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpKPBMNUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpKPBMNUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpKPBMNUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpKPBMNUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpKPBMNUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpKPBMNUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpKPBMNUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpKPBMNUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpKPBMNUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpKPBMNUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpKPBMNUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpKPBMNUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpKPBMNUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpKPBMNUbah.idSatker;

                        _indeksData = dsGridRkmPnbpKPBMN.IndexOf(gridRkmPnbpKPBMN.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpKPBMN.Remove(gridRkmPnbpKPBMN.dataTerpilih);
                        dsGridRkmPnbpKPBMN.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpKPBMN.Remove(gridRkmPnbpKPBMN.dataTerpilih);
                        break;
                }
                gridRkmPnbpKPBMN.dsDataSource = dsGridRkmPnbpKPBMN;
                gridRkmPnbpKPBMN.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkSwBmn();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbpKpBmn(SvcWasdalManfaatPnbpSelectSk.WASDALSROW_READ_WASDAL_MANFAAT_PNBP _skTerpilih)
        {
            formRkmPnbpKPBMNTambah = new KSK.PNBP.KPBMN.ucPNBPKpBmnForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpKPBMN = new SimpanDataRtl(simpanDataRkmPnbpKpBmn)
            };
            formRkmPnbpKPBMNTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpKPBMNTambah);
            formRkmPnbpKPBMNTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data PSP BMN

        #region action button
        KSK.PNBP.KPBMN.frmPuSk formSkPnbpKpBmn;

        private void RkmPnbpKPBMNTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Kerjasama Pemanfaatan Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpKpBmn = new KSK.PNBP.KPBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkManfaatPnbp(pilihSkPnbpKpBmn)
                };
                formSkPnbpKpBmn.ShowDialog();
            }
        }

        private void RkmPnbpKPBMNEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpKPBMN.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpKPBMNUbah == null)
                {
                    formRkmPnbpKPBMNUbah = new KSK.PNBP.KPBMN.ucPNBPKpBmnForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpKPBMN = new SimpanDataRtl(simpanDataRkmPnbpKpBmn)
                    };
                }
                formRkmPnbpKPBMNUbah.dataTerpilih = gridRkmPnbpKPBMN.dataTerpilih;
                formRkmPnbpKPBMNUbah.inisialisasiForm();
                setPanel(formRkmPnbpKPBMNUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpKPBMNHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpKPBMN.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Kerjasama Pemanfaatan\n{0}?", gridRkmPnbpKPBMN.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpKpBmn();
                }
            }
        }

        private void RkmPnbpKPBMNDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpKPBMN.dataTerpilih != null)
            {
                if (formRkmPnbpKPBMNDetail == null)
                {
                    formRkmPnbpKPBMNDetail = new KSK.PNBP.KPBMN.ucPNBPKpBmnForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpKPBMN = new SimpanDataRtl(simpanDataRkmPnbpKpBmn)
                    };
                }
                formRkmPnbpKPBMNDetail.dataTerpilih = gridRkmPnbpKPBMN.dataTerpilih;
                setPanel(formRkmPnbpKPBMNDetail);
                formRkmPnbpKPBMNDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpKPBMNRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpKPBMN.teNamaKolom.Text = "";
            gridRkmPnbpKPBMN.teCari.Text = "";
            gridRkmPnbpKPBMN.fieldDicari = "";
            gridRkmPnbpKPBMN.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpKpBmn();
        }

        private void RkmPnbpKPBMNMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpKpBmn();
            }
        }

        private void RkmPnbpKPBMNKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonKPBMN;
            konfigApp.kdPelayanan = "08";
            konfigApp.namaPelayanan = this.subMenuMonKPBMN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpKPBMN();
            modeCari = false;
            gridRkmPnbpKPBMN.teNamaKolom.Text = "";
            gridRkmPnbpKPBMN.teCari.Text = "";
            gridRkmPnbpKPBMN.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpKpBmn();
        }

        private void RkmPnbpKPBMNTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpKpBmn(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpKpBmn();
        }

        #endregion 

        #region KSPI
        KSK.PNBP.BGS.ucBGSGrid gridRkmPnbpBGS;
        KSK.PNBP.BGS.ucPNBPBGSForm formRkmPnbpBGSTambah;
        KSK.PNBP.BGS.ucPNBPBGSForm formRkmPnbpBGSUbah;
        KSK.PNBP.BGS.ucPNBPBGSForm formRkmPnbpBGSDetail;
        private ArrayList dsGridRkmPnbpBGS;
        SvcWasdalManfaatPnbpSelect.OutputParameters dOutRkmPnbpBGS;
        SvcWasdalManfaatPnbpSelect.execute_pttClient ambilRkmPnbpBGS;

        private void nbiPnbpBGS_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = konfigApp.namaLayanan09;
            konfigApp.kdPelayanan = "09";
            konfigApp.namaPelayanan = konfigApp.namaLayanan09;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBGS();
            modeCari = false;
            gridRkmPnbpBGS.teNamaKolom.Text = "";
            gridRkmPnbpBGS.teCari.Text = "";
            gridRkmPnbpBGS.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBGS();
        }

        private void setEventBtnPnbpBGS()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpBGSTutup);

        }

        public void initGridRkmPnbpBGS()
        {

            if (gridRkmPnbpBGS == null)
            {
                gridRkmPnbpBGS = new KSK.PNBP.BGS.ucBGSGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpBGS),
                    detailDataGrid = new DetailDataGrid(RkmPnbpBGSEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpBGS();
            setPanel(gridRkmPnbpBGS);
        }

        #region --++ Ambil Data KSPI
        private void getInitRkmPnbpBGS()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpSelect.InputParameters parInp = new SvcWasdalManfaatPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '09' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpBGS = new SvcWasdalManfaatPnbpSelect.execute_pttClient();
                ambilRkmPnbpBGS.Open();
                ambilRkmPnbpBGS.Beginexecute(parInp, new AsyncCallback(getRkmPnbpBGS), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpBGS(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpBGS = ambilRkmPnbpBGS.Endexecute(result);
                ambilRkmPnbpBGS.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpBGS(dsRkmPnbpBGS), dOutRkmPnbpBGS);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpBGS(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpBGS(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpBGS = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRkmPnbpBGS.Add(dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i]);
            }

            gridRkmPnbpBGS.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpBGS.dsDataSource = dsGridRkmPnbpBGS;
            gridRkmPnbpBGS.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpBGS.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpBGS.teCari.Text.Trim();
                string xTiga = gridRkmPnbpBGS.fieldDicari;
                gridRkmPnbpBGS.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpBGS.teNamaKolom.Text = xSatu;
                gridRkmPnbpBGS.teCari.Text = xDua;
                gridRkmPnbpBGS.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpBGS.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpBGS.labelTotData.Text = "";
            gridRkmPnbpBGS.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil BGS

        #region --++ Simpan Data KSPI
        SvcWasdalManfaatPnbpCud.OutputParameters dOutAmbilPnbpBGS;
        SvcWasdalManfaatPnbpCud.execute_pttClient ambilPnbpBGS;

        private void simpanDataRkmPnbpBGS(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.idSkWasdal : formRkmPnbpBGSUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.idSkPNBP : formRkmPnbpBGSUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.idTlSkWasdal : formRkmPnbpBGSUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.idSatker : formRkmPnbpBGSUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.kd_pelayanan : formRkmPnbpBGSUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teNomorSk.Text.Trim() : formRkmPnbpBGSUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teNTPN.Text.Trim() : formRkmPnbpBGSUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpBGSTambah.deTglSetor.DateTime) : konfigApp.toDateTime(formRkmPnbpBGSUbah.deTglSetor.DateTime));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teNTB.Text : formRkmPnbpBGSUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpBGSTambah.deTglTransaksi.DateTime) : konfigApp.toDateTime(formRkmPnbpBGSUbah.deTglTransaksi.DateTime));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teNamaPenyetor.Text : formRkmPnbpBGSUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.leAkun.EditValue.ToString() : formRkmPnbpBGSUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.leAkun.Text : formRkmPnbpBGSUbah.leAkun.Text);
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teKdBilling.Text : formRkmPnbpBGSUbah.teKdBilling.Text);

                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpBGSTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpBGSUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teKet.Text : formRkmPnbpBGSUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpBGSTambah.filePath) : konfigApp.convert2byte(formRkmPnbpBGSUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBGSTambah.teKdBilling.Text : formRkmPnbpBGSUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpBGS = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpBGS.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBGS), "");
                
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpBGS()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRkmPnbpBGS.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpBGS.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpBGS.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NTPN = gridRkmPnbpBGS.dataTerpilih.NTPN;
                parInp.P_ID_SATKER = gridRkmPnbpBGS.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpBGS.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpBGS.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpBGS.dataTerpilih.KD_AKUN;
                parInp.P_KD_PELAYANAN = gridRkmPnbpBGS.dataTerpilih.KD_PELAYANAN;
                parInp.P_KD_BILLING = gridRkmPnbpBGS.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpBGS = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpBGS.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBGS), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpBGS(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpBGS = ambilPnbpBGS.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpBGS(this.ubahDsRkmPnbpBGS), dOutAmbilPnbpBGS);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpBGS(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpBGS = 0;

        private void ubahDsRkmPnbpBGS(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP dataPenyama = new SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBGSTambah.idSkWasdal;
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBGSTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBGSTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBGSTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBGSTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBGSTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBGSTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBGSTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBGSTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBGSTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBGSTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBGSTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBGSTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBGSTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBGSTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpBGSTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBGSTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBGSTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBGS == null ? 1 : dsGridRkmPnbpBGS.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBGSTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBGSTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBGSTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBGSTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBGSTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBGSTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBGSTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBGSTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBGSTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBGSTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBGSTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBGSTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBGSTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpBGSTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBGSTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBGSTambah.idSatker;

                        dsGridRkmPnbpBGS.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpBGS.dataTerpilih = dataPenyama;
                            _keBrpPnbpBGS = 1;
                            formRkmPnbpBGSTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpBGSTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpBGSTambah.sbRefresh.Enabled = true;
                            formRkmPnbpBGSTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpBGSTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpBGSTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskBGS.IndexOf(gridSkBGS.dataTerpilih);
                            }
                            else
                            {
                                gridSkBGS.dataTerpilih = gridSkBGS.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpBGS.IndexOf(gridRkmPnbpBGS.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpBGS.Remove(gridRkmPnbpBGS.dataTerpilih);
                            dsGridRkmPnbpBGS.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBGSUbah.idSkWasdal;
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBGSUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBGSUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBGSUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBGSUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBGSUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBGSUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBGSUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBGSUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBGSUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBGSUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBGSUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBGSUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBGSUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBGSUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpBGSUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBGSUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBGSUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBGS == null ? 1 : dsGridRkmPnbpBGS.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBGSUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBGSUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBGSUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBGSUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBGSUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBGSUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBGSUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBGSUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBGSUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBGSUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBGSUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBGSUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBGSUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpBGSUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBGSUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBGSUbah.idSatker;

                        _indeksData = dsGridRkmPnbpBGS.IndexOf(gridRkmPnbpBGS.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpBGS.Remove(gridRkmPnbpBGS.dataTerpilih);
                        dsGridRkmPnbpBGS.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpBGS.Remove(gridRkmPnbpBGS.dataTerpilih);
                        break;
                }
                gridRkmPnbpBGS.dsDataSource = dsGridRkmPnbpBGS;
                gridRkmPnbpBGS.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkBGS();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbpBGS(SvcWasdalManfaatPnbpSelectSk.WASDALSROW_READ_WASDAL_MANFAAT_PNBP _skTerpilih)
        {
            formRkmPnbpBGSTambah = new KSK.PNBP.BGS.ucPNBPBGSForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpBGS = new SimpanDataRPNBP(simpanDataRkmPnbpBGS)
            };
            formRkmPnbpBGSTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpBGSTambah);
            formRkmPnbpBGSTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data BGS

        #region action button
        KSK.PNBP.BGS.frmPuSk formSkPnbpBGS;

        private void RkmPnbpBGSTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP KSPI Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpBGS = new KSK.PNBP.BGS.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkBGS = new PilihSkManfaatPnbp(pilihSkPnbpBGS)
                };
                formSkPnbpBGS.ShowDialog();
            }
        }

        private void RkmPnbpBGSEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBGS.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpBGSUbah == null)
                {
                    formRkmPnbpBGSUbah = new KSK.PNBP.BGS.ucPNBPBGSForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBGS = new SimpanDataRPNBP(simpanDataRkmPnbpBGS)
                    };
                }
                formRkmPnbpBGSUbah.dataTerpilih = gridRkmPnbpBGS.dataTerpilih;
                formRkmPnbpBGSUbah.inisialisasiForm();
                setPanel(formRkmPnbpBGSUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBGSHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBGS.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP BGS \n{0}?", gridRkmPnbpBGS.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpBGS();
                }
            }
        }

        private void RkmPnbpBGSDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBGS.dataTerpilih != null)
            {
                if (formRkmPnbpBGSDetail == null)
                {
                    formRkmPnbpBGSDetail = new KSK.PNBP.BGS.ucPNBPBGSForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBGS = new SimpanDataRPNBP(simpanDataRkmPnbpBGS)
                    };
                }
                formRkmPnbpBGSDetail.dataTerpilih = gridRkmPnbpBGS.dataTerpilih;
                setPanel(formRkmPnbpBGSDetail);
                formRkmPnbpBGSDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBGSRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpBGS.teNamaKolom.Text = "";
            gridRkmPnbpBGS.teCari.Text = "";
            gridRkmPnbpBGS.fieldDicari = "";
            gridRkmPnbpBGS.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpBGS();
        }

        private void RkmPnbpBGSMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpBGS();
            }
        }

        private void RkmPnbpBGSKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonBGS;
            konfigApp.kdPelayanan = "09";
            konfigApp.namaPelayanan = this.subMenuMonBGS;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBGS();
            modeCari = false;
            gridRkmPnbpBGS.teNamaKolom.Text = "";
            gridRkmPnbpBGS.teCari.Text = "";
            gridRkmPnbpBGS.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBGS();
        }

        private void RkmPnbpBGSTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpBGS(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpBGS();
        }
        #endregion

        #region BGS/BSG
        KSK.PNBP.BSG.ucBSGGrid gridRkmPnbpBSG;
        KSK.PNBP.BSG.ucPNBPBSGForm formRkmPnbpBSGTambah;
        KSK.PNBP.BSG.ucPNBPBSGForm formRkmPnbpBSGUbah;
        KSK.PNBP.BSG.ucPNBPBSGForm formRkmPnbpBSGDetail;
        private ArrayList dsGridRkmPnbpBSG;
        SvcWasdalManfaatPnbpSelect.OutputParameters dOutRkmPnbpBSG;
        SvcWasdalManfaatPnbpSelect.execute_pttClient ambilRkmPnbpBSG;

        private void nbiPnbpBSG_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonBSG;
            konfigApp.kdPelayanan = "10";
            konfigApp.namaPelayanan = this.subMenuMonBSG;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBSG();
            modeCari = false;
            gridRkmPnbpBSG.teNamaKolom.Text = "";
            gridRkmPnbpBSG.teCari.Text = "";
            gridRkmPnbpBSG.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBSG();
        }

        private void setEventBtnPnbpBSG()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpBSGTutup);

        }

        public void initGridRkmPnbpBSG()
        {

            if (gridRkmPnbpBSG == null)
            {
                gridRkmPnbpBSG = new KSK.PNBP.BSG.ucBSGGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpBSG),
                    detailDataGrid = new DetailDataGrid(RkmPnbpBSGEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpBSG();
            setPanel(gridRkmPnbpBSG);
        }

        #region --++ Ambil Data BGS/BSG
        private void getInitRkmPnbpBSG()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpSelect.InputParameters parInp = new SvcWasdalManfaatPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpBSG = new SvcWasdalManfaatPnbpSelect.execute_pttClient();
                ambilRkmPnbpBSG.Open();
                ambilRkmPnbpBSG.Beginexecute(parInp, new AsyncCallback(getRkmPnbpBSG), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpBSG(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpBSG = ambilRkmPnbpBSG.Endexecute(result);
                ambilRkmPnbpBSG.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpBSG(dsRkmPnbpBSG), dOutRkmPnbpBSG);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpBSG(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpBSG(SvcWasdalManfaatPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpBSG = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dsGridRkmPnbpBSG.Add(dataOut.SF_SELECT_WASDAL_MANFAAT_PNBP[i]);
            }

            gridRkmPnbpBSG.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpBSG.dsDataSource = null;
    //        gridRkmPnbpBSG.gcGridSk.DataSource = null;
            gridRkmPnbpBSG.dsDataSource = dsGridRkmPnbpBSG;
            gridRkmPnbpBSG.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpBSG.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpBSG.teCari.Text.Trim();
                string xTiga = gridRkmPnbpBSG.fieldDicari;
                gridRkmPnbpBSG.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpBSG.teNamaKolom.Text = xSatu;
                gridRkmPnbpBSG.teCari.Text = xDua;
                gridRkmPnbpBSG.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpBSG.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpBSG.labelTotData.Text = "";
            gridRkmPnbpBSG.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil BSG

        #region --++ Simpan Data BGS/BSG
        SvcWasdalManfaatPnbpCud.OutputParameters dOutAmbilPnbpBSG;
        SvcWasdalManfaatPnbpCud.execute_pttClient ambilPnbpBSG;

        private void simpanDataRkmPnbpBSG(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();

                parInp.P_ID_SK_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.idSkWasdal : formRkmPnbpBSGUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.idSkPNBP : formRkmPnbpBSGUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_MANFAAT = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.idTlSkWasdal : formRkmPnbpBSGUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.idSatker : formRkmPnbpBSGUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.kd_pelayanan : formRkmPnbpBSGUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teNomorSk.Text.Trim() : formRkmPnbpBSGUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teNTPN.Text.Trim() : formRkmPnbpBSGUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpBSGTambah.deTglSetor.DateTime) : konfigApp.toDateTime(formRkmPnbpBSGUbah.deTglSetor.DateTime));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teNTB.Text : formRkmPnbpBSGUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString((_mode == "C" || _mode == "CU" || _mode == "D") ? konfigApp.toDateTime(formRkmPnbpBSGTambah.deTglTransaksi.DateTime) : konfigApp.toDateTime(formRkmPnbpBSGUbah.deTglTransaksi.DateTime));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teNamaPenyetor.Text : formRkmPnbpBSGUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.leAkun.EditValue.ToString() : formRkmPnbpBSGUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.leAkun.Text : formRkmPnbpBSGUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpBSGTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpBSGUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teKet.Text : formRkmPnbpBSGUbah.teKet.Text);
                //parInp.P = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpBSGTambah.filePath) : konfigApp.convert2byte(formRkmPnbpBSGUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBSGTambah.teKdBilling.Text : formRkmPnbpBSGUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpBSG = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpBSG.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBSG), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpBSG()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatPnbpCud.InputParameters parInp = new SvcWasdalManfaatPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_MANFAATSpecified = true;
                parInp.P_ID_SK_WASDAL_MANFAAT = gridRkmPnbpBSG.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpBSG.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpBSG.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_ID_SATKER = gridRkmPnbpBSG.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NTPN = gridRkmPnbpBSG.dataTerpilih.NTPN;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpBSG.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpBSG.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpBSG.dataTerpilih.KD_AKUN;
                parInp.P_KD_PELAYANAN = gridRkmPnbpBSG.dataTerpilih.KD_PELAYANAN;
                parInp.P_KD_BILLING = gridRkmPnbpBSG.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpBSG = new SvcWasdalManfaatPnbpCud.execute_pttClient();
                ambilPnbpBSG.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBSG), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpBSG(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpBSG = ambilPnbpBSG.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpBSG(this.ubahDsRkmPnbpBSG), dOutAmbilPnbpBSG);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpBSG(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpBSG = 0;

        private void ubahDsRkmPnbpBSG(SvcWasdalManfaatPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP dataPenyama = new SvcWasdalManfaatPnbpSelect.WASDALSROW_SELECT_MANFAAT_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBSGTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpBSGTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBSGTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBSGTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBSGTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBSGTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBSGTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBSGTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBSGTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBSGTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBSGTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBSGTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBSGTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBSGTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBSGTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpBSGTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBSGTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBSGTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBSG == null ? 1 : dsGridRkmPnbpBSG.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBSGTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBSGTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBSGTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBSGTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBSGTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBSGTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBSGTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBSGTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBSGTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBSGTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBSGTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBSGTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBSGTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpBSGTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBSGTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBSGTambah.idSatker;
                        dsGridRkmPnbpBSG.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpBSG.dataTerpilih = dataPenyama;
                            _keBrpPnbpBSG = 1;
                            formRkmPnbpBSGTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpBSGTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpBSGTambah.sbRefresh.Enabled = true;
                            formRkmPnbpBSGTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpBSGTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpBSGTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskBSG.IndexOf(gridSkBSG.dataTerpilih);
                            }
                            else
                            {
                                gridSkBSG.dataTerpilih = gridSkBSG.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpBSG.IndexOf(gridRkmPnbpBSG.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpBSG.Remove(gridRkmPnbpBSG.dataTerpilih);
                            dsGridRkmPnbpBSG.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpBSGUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpBSGUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBSGUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBSGUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBSGUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBSGUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBSGUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBSGUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBSGUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBSGUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBSGUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBSGUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBSGUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBSGUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBSGUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpBSGUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBSGUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBSGUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBSG == null ? 1 : dsGridRkmPnbpBSG.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBSGUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBSGUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBSGUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBSGUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBSGUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBSGUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBSGUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBSGUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBSGUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBSGUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBSGUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBSGUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBSGUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_MANFAAT = formRkmPnbpBSGUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBSGUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBSGUbah.idSatker;
                        _indeksData = dsGridRkmPnbpBSG.IndexOf(gridRkmPnbpBSG.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpBSG.Remove(gridRkmPnbpBSG.dataTerpilih);
                        dsGridRkmPnbpBSG.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpBSG.Remove(gridRkmPnbpBSG.dataTerpilih);
                        break;
                }
                gridRkmPnbpBSG.dsDataSource = dsGridRkmPnbpBSG;
                gridRkmPnbpBSG.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkBSG();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbpBSG(SvcWasdalManfaatPnbpSelectSk.WASDALSROW_READ_WASDAL_MANFAAT_PNBP _skTerpilih)
        {
            formRkmPnbpBSGTambah = new KSK.PNBP.BSG.ucPNBPBSGForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpBSG = new SimpanDataRPNBP(simpanDataRkmPnbpBSG)
            };
            formRkmPnbpBSGTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpBSGTambah);
            formRkmPnbpBSGTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data BSG

        #region action button
        KSK.PNBP.BSG.frmPuSk formSkPnbpBSG;

        private void RkmPnbpBSGTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP BSG Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpBSG = new KSK.PNBP.BSG.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSkBSG = new PilihSkManfaatPnbp(pilihSkPnbpBSG)
                };
                formSkPnbpBSG.ShowDialog();
            }
        }

        private void RkmPnbpBSGEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBSG.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpBSGUbah == null)
                {
                    formRkmPnbpBSGUbah = new KSK.PNBP.BSG.ucPNBPBSGForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBSG = new SimpanDataRPNBP(simpanDataRkmPnbpBSG)
                    };
                }
                formRkmPnbpBSGUbah.dataTerpilih = gridRkmPnbpBSG.dataTerpilih;
                formRkmPnbpBSGUbah.inisialisasiForm();
                setPanel(formRkmPnbpBSGUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBSGHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBSG.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP BSG\n{0}?", gridRkmPnbpBSG.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpBSG();
                }
            }
        }

        private void RkmPnbpBSGDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBSG.dataTerpilih != null)
            {
                if (formRkmPnbpBSGDetail == null)
                {
                    formRkmPnbpBSGDetail = new KSK.PNBP.BSG.ucPNBPBSGForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBSG = new SimpanDataRPNBP(simpanDataRkmPnbpBSG)
                    };
                }
                formRkmPnbpBSGDetail.dataTerpilih = gridRkmPnbpBSG.dataTerpilih;
                setPanel(formRkmPnbpBSGDetail);
                formRkmPnbpBSGDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBSGRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpBSG.teNamaKolom.Text = "";
            gridRkmPnbpBSG.teCari.Text = "";
            gridRkmPnbpBSG.fieldDicari = "";
            gridRkmPnbpBSG.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpBSG();
        }

        private void RkmPnbpBSGMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpBSG();
            }
        }

        private void RkmPnbpBSGKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonBSG;
            konfigApp.kdPelayanan = "10";
            konfigApp.namaPelayanan = this.subMenuMonBSG;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBSG();
            modeCari = false;
            gridRkmPnbpBSG.teNamaKolom.Text = "";
            gridRkmPnbpBSG.teCari.Text = "";
            gridRkmPnbpBSG.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBSG();
        }

        private void RkmPnbpBSGTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpBSG(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpBSG();
        }
        #endregion

        #region JUAL
        KSK.PNBP.JUAL.ucJualGrid gridRkmPnbpJual;
        KSK.PNBP.JUAL.ucPNBPJualForm formRkmPnbpJualTambah;
        KSK.PNBP.JUAL.ucPNBPJualForm formRkmPnbpJualUbah;
        KSK.PNBP.JUAL.ucPNBPJualForm formRkmPnbpJualDetail;
        private ArrayList dsGridRkmPnbpJual;
        SvcWasdalPTJualPnbpSelect.OutputParameters dOutRkmPnbpJual;
        SvcWasdalPTJualPnbpSelect.execute_pttClient ambilRkmPnbpJual;

        private void nbiPnbpJual_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "11";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpJual();
            modeCari = false;
            gridRkmPnbpJual.teNamaKolom.Text = "";
            gridRkmPnbpJual.teCari.Text = "";
            gridRkmPnbpJual.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpJual();
        }

        private void setEventBtnPnbpJual()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpJualTutup);

        }

        public void initGridRkmPnbpJual()
        {

            if (gridRkmPnbpJual == null)
            {
                gridRkmPnbpJual = new KSK.PNBP.JUAL.ucJualGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpJual),
                    detailDataGrid = new DetailDataGrid(RkmPnbpJualEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpJual();
            setPanel(gridRkmPnbpJual);
        }

        #region --++ Ambil Data JUAL
        private void getInitRkmPnbpJual()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPTJualPnbpSelect.InputParameters parInp = new SvcWasdalPTJualPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpJual = new SvcWasdalPTJualPnbpSelect.execute_pttClient();
                ambilRkmPnbpJual.Open();
                ambilRkmPnbpJual.Beginexecute(parInp, new AsyncCallback(getRkmPnbpJual), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpJual(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpJual = ambilRkmPnbpJual.Endexecute(result);
                ambilRkmPnbpJual.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpJual(dsRkmPnbpJual), dOutRkmPnbpJual);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpJual(SvcWasdalPTJualPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpJual(SvcWasdalPTJualPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_JUAL_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_JUAL_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpJual = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_CREATED);
                dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_SETOR);
                dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_SK);
                dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i].TGL_TRANSAKSI);
                dsGridRkmPnbpJual.Add(dataOut.SF_SELECT_WASDAL_JUAL_PNBP[i]);
            }

            gridRkmPnbpJual.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpJual.dsDataSource = dsGridRkmPnbpJual;
            gridRkmPnbpJual.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpJual.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpJual.teCari.Text.Trim();
                string xTiga = gridRkmPnbpJual.fieldDicari;
                gridRkmPnbpJual.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpJual.teNamaKolom.Text = xSatu;
                gridRkmPnbpJual.teCari.Text = xDua;
                gridRkmPnbpJual.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpJual.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpJual.labelTotData.Text = "";
            gridRkmPnbpJual.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PNBP JUAL

        #region --++ Simpan Data JUAL
        SvcWasdalPTJualPnbpCud.OutputParameters dOutAmbilPnbpJual;
        SvcWasdalPTJualPnbpCud.execute_pttClient ambilPnbpJual;

        private void simpanDataRkmPnbpJual(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPTJualPnbpCud.InputParameters parInp = new SvcWasdalPTJualPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.idSkWasdal : formRkmPnbpJualUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.idSkPNBP : formRkmPnbpJualUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.idTlSkWasdal : formRkmPnbpJualUbah.idTlSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.idSkWasdal : formRkmPnbpJualUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.idSatker : formRkmPnbpJualUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                //parInp.P_K = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.kd_pelayanan : formRkmPnbpJualUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teNomorSk.Text.Trim() : formRkmPnbpJualUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teNTPN.Text.Trim() : formRkmPnbpJualUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.deTglSetor.EditValue : formRkmPnbpJualUbah.deTglSetor.EditValue));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teNTB.Text : formRkmPnbpJualUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.deTglTransaksi.EditValue : formRkmPnbpJualUbah.deTglTransaksi.EditValue));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teNamaPenyetor.Text : formRkmPnbpJualUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.leAkun.EditValue.ToString() : formRkmPnbpJualUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.leAkun.Text : formRkmPnbpJualUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpJualTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpJualUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teKet.Text : formRkmPnbpJualUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpJualTambah.filePath) : konfigApp.convert2byte(formRkmPnbpJualUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpJualTambah.teKdBilling.Text : formRkmPnbpJualUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpJual = new SvcWasdalPTJualPnbpCud.execute_pttClient();
                ambilPnbpJual.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpJual), "");
                
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpJual()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalPTJualPnbpCud.InputParameters parInp = new SvcWasdalPTJualPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRkmPnbpJual.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpJual.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpJual.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_ID_SATKER = gridRkmPnbpJual.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NTPN = gridRkmPnbpJual.dataTerpilih.NTPN;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpJual.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpJual.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpJual.dataTerpilih.KD_AKUN;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpJual = new SvcWasdalPTJualPnbpCud.execute_pttClient();
                ambilPnbpJual.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpJual), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpJual(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpJual = ambilPnbpJual.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpJual(this.ubahDsRkmPnbpJual), dOutAmbilPnbpJual);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpJual(SvcWasdalPTJualPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpJual = 0;

        private void ubahDsRkmPnbpJual(SvcWasdalPTJualPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalPTJualPnbpSelect.WASDALSROW_SELECT_JUAL_PNBP dataPenyama = new SvcWasdalPTJualPnbpSelect.WASDALSROW_SELECT_JUAL_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpJualTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpJualTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpJualTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpJualTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpJualTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpJualTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpJualTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpJualTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpJualTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpJualTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpJualTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpJualTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpJualTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpJualTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpJualTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpJualTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpJualTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpJualTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpJual == null ? 1 : dsGridRkmPnbpJual.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpJualTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpJualTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpJualTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpJualTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpJualTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpJualTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpJualTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpJualTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpJualTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpJualTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpJualTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpJualTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpJualTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_PINDAHTANGAN = formRkmPnbpJualTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpJualTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpJualTambah.idSatker;
                        dsGridRkmPnbpJual.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpJual.dataTerpilih = dataPenyama;
                            _keBrpPnbpJual = 1;
                            formRkmPnbpJualTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpJualTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpJualTambah.sbRefresh.Enabled = true;
                            formRkmPnbpJualTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpJualTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpJualTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskJual.IndexOf(gridSkJual.dataTerpilih);
                            }
                            else
                            {
                                gridSkJual.dataTerpilih = gridSkJual.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpJual.IndexOf(gridRkmPnbpJual.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpJual.Remove(gridRkmPnbpJual.dataTerpilih);
                            dsGridRkmPnbpJual.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpJualUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpJualUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpJualUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpJualUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpJualUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpJualUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpJualUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpJualUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpJualUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpJualUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpJualUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpJualUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpJualUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpJualUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpJualUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpJualUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpJualUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpJualUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpJual == null ? 1 : dsGridRkmPnbpJual.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpJualUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpJualUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpJualUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpJualUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpJualUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpJualUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpJualUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpJualUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpJualUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpJualUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpJualUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpJualUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpJualUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_PINDAHTANGAN = formRkmPnbpJualUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpJualUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpJualUbah.idSatker;
                        _indeksData = dsGridRkmPnbpJual.IndexOf(gridRkmPnbpJual.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpJual.Remove(gridRkmPnbpJual.dataTerpilih);
                        dsGridRkmPnbpJual.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpJual.Remove(gridRkmPnbpJual.dataTerpilih);
                        break;
                }
                gridRkmPnbpJual.dsDataSource = dsGridRkmPnbpJual;
                gridRkmPnbpJual.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkJual();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbp(SvcWasdalPTJualPnbpSelectSk.WASDALSROW_READ_WASDAL_PT_JUAL_PNBP _skTerpilih)
        {
            formRkmPnbpJualTambah = new KSK.PNBP.JUAL.ucPNBPJualForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpJual = new SimpanDataRPNBP(simpanDataRkmPnbpJual)
            };
            formRkmPnbpJualTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpJualTambah);
            formRkmPnbpJualTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data JUAL

        #region action button
        KSK.PNBP.JUAL.frmPuSk formSkPnbpJual;

        private void RkmPnbpJualTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Penjualan Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpJual = new KSK.PNBP.JUAL.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkJualPnbp(pilihSkPnbp)
                };
                formSkPnbpJual.ShowDialog();
            }
        }

        private void RkmPnbpJualEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpJual.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpJualUbah == null)
                {
                    formRkmPnbpJualUbah = new KSK.PNBP.JUAL.ucPNBPJualForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpJual = new SimpanDataRPNBP(simpanDataRkmPnbpJual)
                    };
                }
                formRkmPnbpJualUbah.dataTerpilih = gridRkmPnbpJual.dataTerpilih;
                formRkmPnbpJualUbah.inisialisasiForm();
                setPanel(formRkmPnbpJualUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;

            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpJualHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpJual.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Penjualan\n{0}?", gridRkmPnbpJual.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpJual();
                }
            }
        }

        private void RkmPnbpJualDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpJual.dataTerpilih != null)
            {
                if (formRkmPnbpJualDetail == null)
                {
                    formRkmPnbpJualDetail = new KSK.PNBP.JUAL.ucPNBPJualForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpJual = new SimpanDataRPNBP(simpanDataRkmPnbpJual)
                    };
                }
                formRkmPnbpJualDetail.dataTerpilih = gridRkmPnbpJual.dataTerpilih;
                setPanel(formRkmPnbpJualDetail);
                formRkmPnbpJualDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpJualRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpJual.teNamaKolom.Text = "";
            gridRkmPnbpJual.teCari.Text = "";
            gridRkmPnbpJual.fieldDicari = "";
            gridRkmPnbpJual.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpJual();
        }

        private void RkmPnbpJualMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpJual();
            }
        }

        private void RkmPnbpJualKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "11";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpJual();
            modeCari = false;
            gridRkmPnbpJual.teNamaKolom.Text = "";
            gridRkmPnbpJual.teCari.Text = "";
            gridRkmPnbpJual.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpJual();
        }

        private void RkmPnbpJualTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpJual(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpJual();
        }
        #endregion

        #region TMBMN
        KSK.PNBP.TMBMN.ucTukarGrid gridRkmPnbpTukar;
        KSK.PNBP.TMBMN.ucPNBPTukarForm formRkmPnbpTukarTambah;
        KSK.PNBP.TMBMN.ucPNBPTukarForm formRkmPnbpTukarUbah;
        KSK.PNBP.TMBMN.ucPNBPTukarForm formRkmPnbpTukarDetail;
        private ArrayList dsGridRkmPnbpTukar;
        SvcWasdalTukarPnbpSelect.OutputParameters dOutRkmPnbpTukar;
        SvcWasdalTukarPnbpSelect.execute_pttClient ambilRkmPnbpTukar;

        private void nbiPnbpTukar_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonTukar;
            konfigApp.kdPelayanan = "12";
            konfigApp.namaPelayanan = this.subMenuMonTukar;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpTukar();
            modeCari = false;
            gridRkmPnbpTukar.teNamaKolom.Text = "";
            gridRkmPnbpTukar.teCari.Text = "";
            gridRkmPnbpTukar.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpTukar();
        }

        private void setEventBtnPnbpTukar()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpTukarTutup);

        }

        public void initGridRkmPnbpTukar()
        {

            if (gridRkmPnbpTukar == null)
            {
                gridRkmPnbpTukar = new KSK.PNBP.TMBMN.ucTukarGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpTukar),
                    detailDataGrid = new DetailDataGrid(RkmPnbpTukarEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpTukar();
            setPanel(gridRkmPnbpTukar);
        }

        #region --++ Ambil Data TMBMN
        private void getInitRkmPnbpTukar()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalTukarPnbpSelect.InputParameters parInp = new SvcWasdalTukarPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpTukar = new SvcWasdalTukarPnbpSelect.execute_pttClient();
                ambilRkmPnbpTukar.Open();
                ambilRkmPnbpTukar.Beginexecute(parInp, new AsyncCallback(getRkmPnbpTukar), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpTukar(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpTukar = ambilRkmPnbpTukar.Endexecute(result);
                ambilRkmPnbpTukar.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpTukar(dsRkmPnbpTukar), dOutRkmPnbpTukar);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpTukar(SvcWasdalTukarPnbpSelect.OutputParameters dataOut);

        private void dsRkmPnbpTukar(SvcWasdalTukarPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_TUKAR_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpTukar = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_CREATED);
                dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_SETOR);
                dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_SK);
                dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i].TGL_TRANSAKSI);
                dsGridRkmPnbpTukar.Add(dataOut.SF_SELECT_WASDAL_TUKAR_PNBP[i]);
            }

            gridRkmPnbpTukar.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpTukar.dsDataSource = dsGridRkmPnbpTukar;
            gridRkmPnbpTukar.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpTukar.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpTukar.teCari.Text.Trim();
                string xTiga = gridRkmPnbpTukar.fieldDicari;
                gridRkmPnbpTukar.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpTukar.teNamaKolom.Text = xSatu;
                gridRkmPnbpTukar.teCari.Text = xDua;
                gridRkmPnbpTukar.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpTukar.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpTukar.labelTotData.Text = "";
            gridRkmPnbpTukar.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PNBP TMBMN

        #region --++ Simpan Data TMBMN
        SvcWasdalTukarPnbpCud.OutputParameters dOutAmbilPnbpTukar;
        SvcWasdalTukarPnbpCud.execute_pttClient ambilPnbpTukar;

        private void simpanDataRkmPnbpTukar(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalTukarPnbpCud.InputParameters parInp = new SvcWasdalTukarPnbpCud.InputParameters();

                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.idSkWasdal : formRkmPnbpTukarUbah.idSkWasdal);
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.idSkPNBP : formRkmPnbpTukarUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_PINDAHTANGAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.idTlSkWasdal : formRkmPnbpTukarUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.idSatker : formRkmPnbpTukarUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                //parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.kd_pelayanan : formRkmPnbpTukarUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teNomorSk.Text.Trim() : formRkmPnbpTukarUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teNTPN.Text.Trim() : formRkmPnbpTukarUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = (_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.deTglSetor.EditValue.ToString() : formRkmPnbpTukarUbah.deTglSetor.EditValue.ToString();
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teNTB.Text : formRkmPnbpTukarUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = (_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.deTglTransaksi.EditValue.ToString() : formRkmPnbpTukarUbah.deTglTransaksi.EditValue.ToString();
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teNamaPenyetor.Text : formRkmPnbpTukarUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.leAkun.EditValue.ToString() : formRkmPnbpTukarUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.leAkun.Text : formRkmPnbpTukarUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpTukarTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpTukarUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teKet.Text : formRkmPnbpTukarUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpTukarTambah.filePath) : konfigApp.convert2byte(formRkmPnbpTukarUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpTukarTambah.teKdBilling.Text : formRkmPnbpTukarUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpTukar = new SvcWasdalTukarPnbpCud.execute_pttClient();
                ambilPnbpTukar.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpTukar), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpTukar()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalTukarPnbpCud.InputParameters parInp = new SvcWasdalTukarPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDAL_PINDAHTANGANSpecified = true;
                parInp.P_ID_SK_WASDAL_PINDAHTANGAN = gridRkmPnbpTukar.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_SATKER = gridRkmPnbpTukar.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpTukar.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpTukar.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_NTPN = gridRkmPnbpTukar.dataTerpilih.NTPN;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpTukar.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpTukar.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpTukar.dataTerpilih.KD_AKUN;
                parInp.P_KD_BILLING = gridRkmPnbpTukar.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpTukar = new SvcWasdalTukarPnbpCud.execute_pttClient();
                ambilPnbpTukar.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpTukar), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpTukar(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpTukar = ambilPnbpTukar.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpTukar(this.ubahDsRkmPnbpTukar), dOutAmbilPnbpTukar);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpTukar(SvcWasdalTukarPnbpCud.OutputParameters dataOutRkm);

        int _keBrpPnbpTukar = 0;

        private void ubahDsRkmPnbpTukar(SvcWasdalTukarPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalTukarPnbpSelect.WASDALSROW_SELECT_TUKAR_PNBP dataPenyama = new SvcWasdalTukarPnbpSelect.WASDALSROW_SELECT_TUKAR_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpTukarTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpTukarTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpTukarTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpTukarTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpTukarTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpTukarTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpTukarTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpTukarTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpTukarTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpTukarTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpTukarTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpTukarTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpTukarTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpTukarTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpTukarTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpTukarTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpTukarTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpTukarTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpTukar == null ? 1 : dsGridRkmPnbpTukar.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpTukarTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpTukarTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpTukarTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpTukarTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpTukarTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpTukarTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpTukarTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpTukarTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpTukarTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpTukarTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpTukarTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpTukarTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpTukarTambah.teNamaPemohon.Text;
                        dsGridRkmPnbpTukar.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpTukar.dataTerpilih = dataPenyama;
                            _keBrpPnbpTukar = 1;
                            formRkmPnbpTukarTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpTukarTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpTukarTambah.sbRefresh.Enabled = true;
                            formRkmPnbpTukarTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpTukarTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpTukarTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskJual.IndexOf(gridSkJual.dataTerpilih);
                            }
                            else
                            {
                                gridSkJual.dataTerpilih = gridSkJual.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpTukar.IndexOf(gridRkmPnbpTukar.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpTukar.Remove(gridRkmPnbpTukar.dataTerpilih);
                            dsGridRkmPnbpTukar.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpTukarUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpTukarUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpTukarUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpTukarUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpTukarUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpTukarUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpTukarUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpTukarUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpTukarUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpTukarUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpTukarUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpTukarUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpTukarUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpTukarUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpTukarUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpTukarUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpTukarUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpTukarUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpTukar == null ? 1 : dsGridRkmPnbpTukar.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpTukarUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpTukarUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpTukarUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpTukarUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpTukarUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpTukarUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpTukarUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpTukarUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpTukarUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpTukarUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpTukarUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpTukarUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpTukarUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRkmPnbpTukar.IndexOf(gridRkmPnbpTukar.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpTukar.Remove(gridRkmPnbpTukar.dataTerpilih);
                        dsGridRkmPnbpTukar.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpTukar.Remove(gridRkmPnbpTukar.dataTerpilih);
                        break;
                }
                gridRkmPnbpTukar.dsDataSource = dsGridRkmPnbpTukar;
                gridRkmPnbpTukar.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkJual();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbp(SvcWasdalTukarPnbpSelectSK.WASDALSROW_READ_WASDAL_PT_TUKAR_PNBP _skTerpilih)
        {
            formRkmPnbpTukarTambah = new KSK.PNBP.TMBMN.ucPNBPTukarForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpTukar = new SimpanDataRPNBP(simpanDataRkmPnbpTukar)
            };
            formRkmPnbpTukarTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpTukarTambah);
            formRkmPnbpTukarTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data TMBMN

        #region action button
        KSK.PNBP.TMBMN.frmPuSk formSkPnbpTukar;

        private void RkmPnbpTukarTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Tukar Menukar Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpTukar = new KSK.PNBP.TMBMN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkTmPnbp(pilihSkPnbp)
                };
                formSkPnbpTukar.ShowDialog();
            }
        }

        private void RkmPnbpTukarEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpTukar.dataTerpilih != null)
            {
                //if (formRkmPnbpTukarUbah == null)
                //{
                    formRkmPnbpTukarUbah = new KSK.PNBP.TMBMN.ucPNBPTukarForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpTukar = new SimpanDataRPNBP(simpanDataRkmPnbpTukar)
                    };
                //}
                formRkmPnbpTukarUbah.dataTerpilih = gridRkmPnbpTukar.dataTerpilih;
                setPanel(formRkmPnbpTukarUbah);
                formRkmPnbpTukarUbah.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpTukarHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpTukar.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Tukar Menukar\n{0}?", gridRkmPnbpTukar.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpTukar();
                }
            }
        }

        private void RkmPnbpTukarDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpTukar.dataTerpilih != null)
            {
                //if (formRkmPnbpTukarDetail == null)
                //{
                    formRkmPnbpTukarDetail = new KSK.PNBP.TMBMN.ucPNBPTukarForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpTukar = new SimpanDataRPNBP(simpanDataRkmPnbpTukar)
                    };
                //}
                formRkmPnbpTukarDetail.dataTerpilih = gridRkmPnbpTukar.dataTerpilih;
                setPanel(formRkmPnbpTukarDetail);
                formRkmPnbpTukarDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpTukarRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpTukar.teNamaKolom.Text = "";
            gridRkmPnbpTukar.teCari.Text = "";
            gridRkmPnbpTukar.fieldDicari = "";
            gridRkmPnbpTukar.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpTukar();
        }

        private void RkmPnbpTukarMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpTukar();
            }
        }

        private void RkmPnbpTukarKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            initGridRkmPnbpTukar();
            modeCari = false;
            gridRkmPnbpTukar.teNamaKolom.Text = "";
            gridRkmPnbpTukar.teCari.Text = "";
            gridRkmPnbpTukar.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpTukar();
        }

        private void RkmPnbpTukarTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpTukar(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpTukar();
        }
        #endregion

        #region DIOPERASIKAN PIHAK lAIN
        KSK.PNBP.DPL.ucDPLGrid gridRkmPnbpDPL;
        KSK.PNBP.DPL.ucPNBPDPLForm formRkmPnbpDPLTambah;
        KSK.PNBP.DPL.ucPNBPDPLForm formRkmPnbpDPLUbah;
        KSK.PNBP.DPL.ucPNBPDPLForm formRkmPnbpDPLDetail;
        private ArrayList dsGridRkmPnbpDPL;
        SvcWasdalLainPnbpSelect.OutputParameters dOutRkmPnbpDPL;
        SvcWasdalLainPnbpSelect.execute_pttClient ambilRkmPnbpDPL;

        private void nbiDpl_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMNLAIN;
            konfigApp.kdPelayanan = "03";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMNLAIN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpDPL();
            modeCari = false;
            gridRkmPnbpDPL.teNamaKolom.Text = "";
            gridRkmPnbpDPL.teCari.Text = "";
            gridRkmPnbpDPL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpDPL();
        }

        private void setEventBtnPnbpDPL()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpDPLTutup);

        }

        public void initGridRkmPnbpDPL()
        {

            if (gridRkmPnbpDPL == null)
            {
                gridRkmPnbpDPL = new KSK.PNBP.DPL.ucDPLGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpDPL),
                    detailDataGrid = new DetailDataGrid(RkmPnbpDPLEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpDPL();
            setPanel(gridRkmPnbpDPL);
        }


        #region --++ Ambil Data DPL
        private void getInitRkmPnbpDPL()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainPnbpSelect.InputParameters parInp = new SvcWasdalLainPnbpSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpDPL = new SvcWasdalLainPnbpSelect.execute_pttClient();
                ambilRkmPnbpDPL.Open();
                ambilRkmPnbpDPL.Beginexecute(parInp, new AsyncCallback(getRkmPnbpDPL), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpDPL(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpDPL = ambilRkmPnbpDPL.Endexecute(result);
                ambilRkmPnbpDPL.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpDPL(dsRkmPnbpDPL), dOutRkmPnbpDPL);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpDPL(SvcWasdalLainPnbpSelect.OutputParameters dataOut);
        int _keBrpPnbpDPL = 0;
        private void dsRkmPnbpDPL(SvcWasdalLainPnbpSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_WASDAL_LAIN_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_WASDAL_LAIN_PNBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpDPL = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].IS_TB = (dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_CREATED);
                dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_SETOR);
                dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_SK);
                dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i].TGL_TRANSAKSI);
                dsGridRkmPnbpDPL.Add(dataOut.SF_SELECT_WASDAL_LAIN_PNBP[i]);
            }

            gridRkmPnbpDPL.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpDPL.dsDataSource = dsGridRkmPnbpDPL;
            gridRkmPnbpDPL.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpDPL.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpDPL.teCari.Text.Trim();
                string xTiga = gridRkmPnbpDPL.fieldDicari;
                gridRkmPnbpDPL.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpDPL.teNamaKolom.Text = xSatu;
                gridRkmPnbpDPL.teCari.Text = xDua;
                gridRkmPnbpDPL.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpDPL.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpDPL.labelTotData.Text = "";
            gridRkmPnbpDPL.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PNBP DPL

        #region --++ Simpan Data DPL
        SvcWasdalLainPnbpCud.OutputParameters dOutAmbilPnbpDPL;
        SvcWasdalLainPnbpCud.execute_pttClient ambilPnbpDPL;

        private void simpanDataRkmPnbpDPL(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainPnbpCud.InputParameters parInp = new SvcWasdalLainPnbpCud.InputParameters();

                parInp.P_ID_SK_WASDAL = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.idSkWasdal : formRkmPnbpDPLUbah.idSkWasdal);
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_WASDAL_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.idSkPNBP : formRkmPnbpDPLUbah.idSkPNBP);
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_TL_WASDAL_GUNA = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.idTlSkWasdal : formRkmPnbpDPLUbah.idTlSkWasdal);
                parInp.P_ID_TL_WASDAL_GUNASpecified = true;
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.idSatker : formRkmPnbpDPLUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                //parInp.P_KD_PELAYANAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.kd_pelayanan : formRkmPnbpDPLUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teNomorSk.Text.Trim() : formRkmPnbpDPLUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teNTPN.Text.Trim() : formRkmPnbpDPLUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = (_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.deTglSetor.EditValue.ToString() : formRkmPnbpDPLUbah.deTglSetor.EditValue.ToString();
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teNTB.Text : formRkmPnbpDPLUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = (_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.deTglTransaksi.EditValue.ToString() : formRkmPnbpDPLUbah.deTglTransaksi.EditValue.ToString();
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teNamaPenyetor.Text : formRkmPnbpDPLUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.leAkun.EditValue.ToString() : formRkmPnbpDPLUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.leAkun.Text : formRkmPnbpDPLUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpDPLTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpDPLUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teKet.Text : formRkmPnbpDPLUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpDPLTambah.filePath) : konfigApp.convert2byte(formRkmPnbpDPLUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpDPLTambah.teKdBilling.Text : formRkmPnbpDPLUbah.teKdBilling.Text);

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpDPL = new SvcWasdalLainPnbpCud.execute_pttClient();
                ambilPnbpDPL.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpDPL), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpDPL()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalLainPnbpCud.InputParameters parInp = new SvcWasdalLainPnbpCud.InputParameters();
                parInp.P_ID_SK_WASDALSpecified = true;
                parInp.P_ID_SK_WASDAL = gridRkmPnbpDPL.dataTerpilih.ID_SK_WASDAL;
                parInp.P_ID_WASDAL_PNBPSpecified = true;
                parInp.P_ID_WASDAL_PNBP = gridRkmPnbpDPL.dataTerpilih.ID_WASDAL_PNBP;
                parInp.P_SK_KEPUTUSAN = gridRkmPnbpDPL.dataTerpilih.SK_KEPUTUSAN;
                parInp.P_ID_SATKER = gridRkmPnbpDPL.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NTPN = gridRkmPnbpDPL.dataTerpilih.NTPN;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpDPL.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpDPL.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpDPL.dataTerpilih.KD_AKUN;
                parInp.P_KD_BILLING = gridRkmPnbpDPL.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpDPL = new SvcWasdalLainPnbpCud.execute_pttClient();
                ambilPnbpDPL.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpDPL), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpDPL(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpDPL = ambilPnbpDPL.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpDPL(this.ubahDsRkmPnbpDPL), dOutAmbilPnbpDPL);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpDPL(SvcWasdalLainPnbpCud.OutputParameters dataOutRkm);

        //int _keBrpPnbpDPL = 0;

        private void ubahDsRkmPnbpDPL(SvcWasdalLainPnbpCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcWasdalLainPnbpSelect.WASDALSROW_SELECT_LAIN_PNBP dataPenyama = new SvcWasdalLainPnbpSelect.WASDALSROW_SELECT_LAIN_PNBP();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpDPLTambah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpDPLTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpDPLTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpDPLTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpDPLTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpDPLTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpDPLTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpDPLTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpDPLTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpDPLTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpDPLTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpDPLTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpDPLTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpDPLTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpDPLTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpDPLTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpDPLTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpDPLTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpDPL == null ? 1 : dsGridRkmPnbpDPL.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpDPLTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpDPLTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpDPLTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpDPLTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpDPLTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpDPLTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpDPLTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpDPLTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpDPLTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpDPLTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpDPLTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpDPLTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpDPLTambah.teNamaPemohon.Text;
                        dsGridRkmPnbpDPL.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpDPL.dataTerpilih = dataPenyama;
                            _keBrpPnbpTukar = 1;
                            formRkmPnbpDPLTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpDPLTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpDPLTambah.sbRefresh.Enabled = true;
                            formRkmPnbpDPLTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpDPLTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpDPLTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskJual.IndexOf(gridSkJual.dataTerpilih);
                            }
                            else
                            {
                                gridSkJual.dataTerpilih = gridSkJual.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpDPL.IndexOf(gridRkmPnbpDPL.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpDPL.Remove(gridRkmPnbpDPL.dataTerpilih);
                            dsGridRkmPnbpDPL.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_WASDAL = formRkmPnbpDPLUbah.idSkWasdal;
                        dataPenyama.ID_WASDAL_PNBP = formRkmPnbpDPLUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpDPLUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpDPLUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpDPLUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpDPLUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpDPLUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpDPLUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpDPLUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpDPLUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpDPLUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpDPLUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpDPLUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpDPLUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpDPLUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK = Convert.ToDateTime(formRkmPnbpDPLUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpDPLUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpDPLUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpDPL == null ? 1 : dsGridRkmPnbpDPL.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpDPLUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpDPLUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpDPLUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpDPLUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpDPLUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpDPLUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpDPLUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpDPLUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpDPLUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpDPLUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpDPLUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpDPLUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpDPLUbah.teNamaPemohon.Text;
                        _indeksData = dsGridRkmPnbpDPL.IndexOf(gridRkmPnbpDPL.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpDPL.Remove(gridRkmPnbpDPL.dataTerpilih);
                        dsGridRkmPnbpDPL.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpDPL.Remove(gridRkmPnbpDPL.dataTerpilih);
                        break;
                }
                gridRkmPnbpDPL.dsDataSource = dsGridRkmPnbpDPL;
                gridRkmPnbpDPL.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkJual();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbp(SvcWasdalLainPnbpSelectSK.WASDALSROW_READ_WASDAL_PSP_LAIN_PNBP _skTerpilih)
        {
            formRkmPnbpDPLTambah = new KSK.PNBP.DPL.ucPNBPDPLForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpDPL = new SimpanDataRPNBP(simpanDataRkmPnbpDPL)
            };
            formRkmPnbpDPLTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpDPLTambah);
            formRkmPnbpDPLTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data DPL

        #region action button
        KSK.PNBP.DPL.frmPuSk formSkPnbpDPL;

        private void RkmPnbpDPLTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Dioperasikan Pihak Lain Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpDPL = new KSK.PNBP.DPL.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkDplPnbp(pilihSkPnbp)
                };
                formSkPnbpDPL.ShowDialog();
            }
        }

        private void RkmPnbpDPLEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpDPL.dataTerpilih != null)
            {
                //if (formRkmPnbpDPLUbah == null)
                //{
                    formRkmPnbpDPLUbah = new KSK.PNBP.DPL.ucPNBPDPLForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpDPL = new SimpanDataRPNBP(simpanDataRkmPnbpDPL)
                    };
                //}
                formRkmPnbpDPLUbah.dataTerpilih = gridRkmPnbpDPL.dataTerpilih;
                setPanel(formRkmPnbpDPLUbah);
                formRkmPnbpDPLUbah.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpDPLHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpDPL.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Dioperasikan Pihak Lain\n{0}?", gridRkmPnbpDPL.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpDPL();
                }
            }
        }

        private void RkmPnbpDPLDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpDPL.dataTerpilih != null)
            {
                //if (formRkmPnbpDPLDetail == null)
                //{
                    formRkmPnbpDPLDetail = new KSK.PNBP.DPL.ucPNBPDPLForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpDPL = new SimpanDataRPNBP(simpanDataRkmPnbpDPL)
                    };
                //}
                formRkmPnbpDPLDetail.dataTerpilih = gridRkmPnbpDPL.dataTerpilih;
                setPanel(formRkmPnbpDPLDetail);
                formRkmPnbpDPLDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpDPLRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpDPL.teNamaKolom.Text = "";
            gridRkmPnbpDPL.teCari.Text = "";
            gridRkmPnbpDPL.fieldDicari = "";
            gridRkmPnbpDPL.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpDPL();
        }

        private void RkmPnbpDPLMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpDPL();
            }
        }

        private void RkmPnbpDPLKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonPSPBMNLAIN;
            konfigApp.kdPelayanan = "03";
            konfigApp.namaPelayanan = this.subMenuMonPSPBMNLAIN;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpDPL();
            modeCari = false;
            gridRkmPnbpDPL.teNamaKolom.Text = "";
            gridRkmPnbpDPL.teCari.Text = "";
            gridRkmPnbpDPL.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpDPL();
        }

        private void RkmPnbpDPLTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion  action button

        private void cariDataRkmPnbpDPL(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpDPL();
        }

        #endregion  DPL

        #region BONGKARAN
        KSK.PNBP.BONGKARAN.ucBongkaranGrid gridRkmPnbpBongkaran;
        KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm formRkmPnbpBongkaranTambah;
        KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm formRkmPnbpBongkaranUbah;
        KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm formRkmPnbpBongkaranDetail;
        private ArrayList dsGridRkmPnbpBongkaran;
        SvcPnbpBongkaranSelect.OutputParameters dOutRkmPnbpBongkaran;
        SvcPnbpBongkaranSelect.execute_pttClient ambilRkmPnbpBongkaran;

        private void nbiPnbpBongkaran_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonBongkaran;
            konfigApp.kdPelayanan = "22";
            konfigApp.namaPelayanan = this.subMenuMonBongkaran;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBongkaran();
            modeCari = false;
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBongkaran();
        }

        private void setEventBtnPnbpBongkaran()
        {
            this.resetEventBtnPnbpWasdal();
            this.bbiRkmPnbpTambah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranTambah);
            this.bbiRkmPnbpUbah.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranEdit);
            this.bbiRkmPnbpHapus.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranHapus);
            this.bbiRkmPnbpRefresh.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranRefresh);
            this.bbiRkmPnbpMore.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranMore);
            this.bbiRkmPnbpDetail.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranDetail);
            this.bbiRkmPnbpKembaliGrid.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranKembali);
            this.bbiRkmPnbpTutup.ItemClick += new ItemClickEventHandler(this.RkmPnbpBongkaranTutup);

        }

        public void initGridRkmPnbpBongkaran()
        {

            if (gridRkmPnbpBongkaran == null)
            {
                gridRkmPnbpBongkaran = new KSK.PNBP.BONGKARAN.ucBongkaranGrid()
                {
                    cariDataOnline = new CariDataOnline(cariDataRkmPnbpBongkaran),
                    detailDataGrid = new DetailDataGrid(RkmPnbpBongkaranEdit)
                };
            }
            setTombolRkmPnbpGrid();
            setEventBtnPnbpBongkaran();
            setPanel(gridRkmPnbpBongkaran);
        }

        #region --++ Ambil Data JUAL
        private void getInitRkmPnbpBongkaran()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcPnbpBongkaranSelect.InputParameters parInp = new SvcPnbpBongkaranSelect.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND KD_PELAYANAN = '{0}' AND ID_PEMOHON = {1} {2}", konfigApp.kdPelayanan, konfigApp.idSatker, this.strCari);
                ambilRkmPnbpBongkaran = new SvcPnbpBongkaranSelect.execute_pttClient();
                ambilRkmPnbpBongkaran.Open();
                ambilRkmPnbpBongkaran.Beginexecute(parInp, new AsyncCallback(getRkmPnbpBongkaran), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRkmPnbpBongkaran(IAsyncResult result)
        {
            try
            {
                dOutRkmPnbpBongkaran = ambilRkmPnbpBongkaran.Endexecute(result);
                ambilRkmPnbpBongkaran.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsRkmPnbpBongkaran(dsRkmPnbpBongkaran), dOutRkmPnbpBongkaran);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsRkmPnbpBongkaran(SvcPnbpBongkaranSelect.OutputParameters dataOut);

        private void dsRkmPnbpBongkaran(SvcPnbpBongkaranSelect.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_SELECT_PNBP_BONG.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_SELECT_PNBP_BONG[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiRkmPnbpMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiRkmPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridRkmPnbpBongkaran = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_SELECT_PNBP_BONG[i].IS_TB = (dataOut.SF_SELECT_PNBP_BONG[i].IS_TB == "Y" ? konfigApp.namaTb : konfigApp.namaNonTb);
                dataOut.SF_SELECT_PNBP_BONG[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_SELECT_PNBP_BONG[i].TGL_CREATED);
                dataOut.SF_SELECT_PNBP_BONG[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_SELECT_PNBP_BONG[i].TGL_SETOR);
                dataOut.SF_SELECT_PNBP_BONG[i].TGL_SK_BNK = konfigApp.setDefaultDate(dataOut.SF_SELECT_PNBP_BONG[i].TGL_SK_BNK);
                dataOut.SF_SELECT_PNBP_BONG[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_SELECT_PNBP_BONG[i].TGL_TRANSAKSI);
                dsGridRkmPnbpBongkaran.Add(dataOut.SF_SELECT_PNBP_BONG[i]);
            }

            gridRkmPnbpBongkaran.sbCariOnline.Enabled = !modeCari;
            gridRkmPnbpBongkaran.dsDataSource = dsGridRkmPnbpBongkaran;
            gridRkmPnbpBongkaran.displayData();
            if (modeCari == true)
            {
                string xSatu = gridRkmPnbpBongkaran.teNamaKolom.Text.Trim();
                string xDua = gridRkmPnbpBongkaran.teCari.Text.Trim();
                string xTiga = gridRkmPnbpBongkaran.fieldDicari;
                gridRkmPnbpBongkaran.gvGridSk.ClearColumnsFilter();
                gridRkmPnbpBongkaran.teNamaKolom.Text = xSatu;
                gridRkmPnbpBongkaran.teCari.Text = xDua;
                gridRkmPnbpBongkaran.fieldDicari = xTiga;
            }
            else
                gridRkmPnbpBongkaran.gvGridSk.ClearColumnsFilter();

            gridRkmPnbpBongkaran.labelTotData.Text = "";
            gridRkmPnbpBongkaran.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }


        #endregion Ambil PNBP JUAL

        #region --++ Simpan Data JUAL
        SvcPnbpBongkaranCud.OutputParameters dOutAmbilPnbpBongkaran;
        SvcPnbpBongkaranCud.execute_pttClient ambilPnbpBongkaran;

        private void simpanDataRkmPnbpBongkaran(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcPnbpBongkaranCud.InputParameters parInp = new SvcPnbpBongkaranCud.InputParameters();
                parInp.P_ID_SK_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.idSkWasdal : formRkmPnbpBongkaranUbah.idSkWasdal);
                parInp.P_ID_SK_BNKSpecified = true;
                parInp.P_ID_PNBP_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.idSkPNBP : formRkmPnbpBongkaranUbah.idSkPNBP);
                parInp.P_ID_PNBP_BNKSpecified = true;
                parInp.P_ID_TL_WASDAL_BNKSpecified = true;
                parInp.P_ID_TL_WASDAL_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.idTlSkWasdal : formRkmPnbpBongkaranUbah.idTlSkWasdal);
                parInp.P_ID_SATKER = konfigApp.idSatker;//((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.idSatker : formRkmPnbpBongkaranUbah.idSatker);
                parInp.P_ID_SATKERSpecified = true;
                //parInp.P_K = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.kd_pelayanan : formRkmPnbpBongkaranUbah.kd_pelayanan);
                parInp.P_SK_KEPUTUSAN_BNK = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teNomorSk.Text.Trim() : formRkmPnbpBongkaranUbah.teNomorSk.Text.Trim());
                parInp.P_NTPN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teNTPN.Text.Trim() : formRkmPnbpBongkaranUbah.teNTPN.Text.Trim());
                parInp.P_TGL_SETOR = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.deTglSetor.EditValue : formRkmPnbpBongkaranUbah.deTglSetor.EditValue));
                parInp.P_NTB = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teNTB.Text : formRkmPnbpBongkaranUbah.teNTB.Text);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(Convert.ToDateTime((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.deTglTransaksi.EditValue : formRkmPnbpBongkaranUbah.deTglTransaksi.EditValue));
                parInp.P_NM_PENYETOR = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teNamaPenyetor.Text : formRkmPnbpBongkaranUbah.teNamaPenyetor.Text);
                parInp.P_KD_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.leAkun.EditValue.ToString() : formRkmPnbpBongkaranUbah.leAkun.EditValue.ToString());
                parInp.P_UR_AKUN = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.leAkun.Text : formRkmPnbpBongkaranUbah.leAkun.Text);
                parInp.P_NILAI_PNBPSpecified = true;
                parInp.P_NILAI_PNBP = ((_mode == "C" || _mode == "CU" || _mode == "D") ? Convert.ToDecimal(formRkmPnbpBongkaranTambah.teNilaiPnbp.Text) : Convert.ToDecimal(formRkmPnbpBongkaranUbah.teNilaiPnbp.Text));
                parInp.P_KET = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teKet.Text : formRkmPnbpBongkaranUbah.teKet.Text);
                //parInp.P_FILE_PNBP = ((_mode == "C" || _mode == "CU") ? konfigApp.convert2byte(formRkmPnbpBongkaranTambah.filePath) : konfigApp.convert2byte(formRkmPnbpBongkaranUbah.filePath));
                parInp.P_KD_BILLING = ((_mode == "C" || _mode == "CU" || _mode == "D") ? formRkmPnbpBongkaranTambah.teKdBilling.Text : formRkmPnbpBongkaranUbah.teKdBilling.Text);
                

                string _penggantiChar = (_mode == "CU" ? "U" : _mode);
                string _charSementara = (_mode == "CU" ? "Z" : _mode);
                parInp.P_SELECT = _penggantiChar;
                modeCrud = Convert.ToChar(_charSementara);
                ambilPnbpBongkaran = new SvcPnbpBongkaranCud.execute_pttClient();
                ambilPnbpBongkaran.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBongkaran), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void HapusDataRkmPnbpBongkaran()
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcPnbpBongkaranCud.InputParameters parInp = new SvcPnbpBongkaranCud.InputParameters();
                parInp.P_ID_SK_BNKSpecified = true;
                parInp.P_ID_SK_BNK = gridRkmPnbpBongkaran.dataTerpilih.ID_SK_BNK;
                parInp.P_ID_PNBP_BNKSpecified = true;
                parInp.P_ID_PNBP_BNK = gridRkmPnbpBongkaran.dataTerpilih.ID_PNBP_BNK;
                parInp.P_SK_KEPUTUSAN_BNK = gridRkmPnbpBongkaran.dataTerpilih.SK_KEPUTUSAN_BNK;
                parInp.P_NTPN = gridRkmPnbpBongkaran.dataTerpilih.NTPN;
                parInp.P_ID_SATKER = gridRkmPnbpBongkaran.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_NILAI_PNBPSpecified = false;
                parInp.P_TGL_SETOR = konfigApp.DateToString(gridRkmPnbpBongkaran.dataTerpilih.TGL_SETOR);
                parInp.P_TGL_TRANSAKSI = konfigApp.DateToString(gridRkmPnbpBongkaran.dataTerpilih.TGL_SETOR);
                parInp.P_KD_AKUN = gridRkmPnbpBongkaran.dataTerpilih.KD_AKUN;
                parInp.P_KD_BILLING = gridRkmPnbpBongkaran.dataTerpilih.KD_BILLING;
                parInp.P_SELECT = "D";
                modeCrud = Convert.ToChar("D");
                ambilPnbpBongkaran = new SvcPnbpBongkaranCud.execute_pttClient();
                ambilPnbpBongkaran.Beginexecute(parInp, new AsyncCallback(cudRkmPnbpBongkaran), "");

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalHapus, konfigApp.judulGagalHapus);
            }
        }


        private void cudRkmPnbpBongkaran(IAsyncResult result)
        {
            try
            {
                dOutAmbilPnbpBongkaran = ambilPnbpBongkaran.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRkmPnbpBongkaran(this.ubahDsRkmPnbpBongkaran), dOutAmbilPnbpBongkaran);

            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRkmPnbpBongkaran(SvcPnbpBongkaranCud.OutputParameters dataOutRkm);

        int _keBrpPnbpBongkaran = 0;

        private void ubahDsRkmPnbpBongkaran(SvcPnbpBongkaranCud.OutputParameters dataOutRkm)
        {
            if (dataOutRkm.PO_RESULT == "Y")
            {
                int _indeksData = 0;
                SvcPnbpBongkaranSelect.WASDALSROW_SELECT_PNBP_BONG dataPenyama = new SvcPnbpBongkaranSelect.WASDALSROW_SELECT_PNBP_BONG();
                dataPenyama.ID_PEMOHONSpecified = true;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.ID_USER = konfigApp.idUser;
                dataPenyama.ID_USERSpecified = true;
                dataPenyama.KD_PELAYANAN = konfigApp.kdPelayanan;
                dataPenyama.ID_SATKERSpecified = true;
                dataPenyama.JANGKA_WAKTUSpecified = true;
                dataPenyama.KUANTITAS_SKSpecified = true;
                dataPenyama.NILAI_PENETAPANSpecified = true;
                dataPenyama.NUMSpecified = true;
                dataPenyama.TGL_SETORSpecified = true;
                dataPenyama.TGL_TRANSAKSISpecified = true;
                dataPenyama.TGL_SK_BNKSpecified = true;
                dataPenyama.TOT_BMNSpecified = true;
                dataPenyama.TOT_STATUSSpecified = true;
                dataPenyama.TOTAL_DATASpecified = true;
                dataPenyama.NILAI_PNBPSpecified = true;
                switch (modeCrud.ToString())
                {
                    case "C":
                    case "Z":
                        dataPenyama.ID_SK_BNK = formRkmPnbpBongkaranTambah.idSkWasdal;
                        dataPenyama.ID_PNBP_BNK = formRkmPnbpBongkaranTambah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBongkaranTambah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBongkaranTambah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBongkaranTambah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBongkaranTambah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBongkaranTambah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBongkaranTambah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBongkaranTambah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBongkaranTambah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBongkaranTambah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBongkaranTambah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBongkaranTambah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBongkaranTambah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBongkaranTambah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK_BNK = Convert.ToDateTime(formRkmPnbpBongkaranTambah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBongkaranTambah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBongkaranTambah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBongkaran == null ? 1 : dsGridRkmPnbpBongkaran.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBongkaranTambah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBongkaranTambah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBongkaranTambah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBongkaranTambah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBongkaranTambah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBongkaranTambah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBongkaranTambah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBongkaranTambah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBongkaranTambah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBongkaranTambah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBongkaranTambah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBongkaranTambah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBongkaranTambah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_BNK = formRkmPnbpBongkaranTambah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBongkaranTambah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBongkaranTambah.idSatker;
                        dsGridRkmPnbpBongkaran.Add(dataPenyama);
                        if (modeCrud == 'C')
                        {
                            gridRkmPnbpBongkaran.dataTerpilih = dataPenyama;
                            _keBrpPnbpBongkaran = 1;
                            formRkmPnbpBongkaranTambah.gcDaftarAset.Enabled = true;
                            formRkmPnbpBongkaranTambah.rgJenisAset.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.teNomorSk.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.teTanggalSk.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.teJenisPemohon.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.sbCariPemohon.Enabled = false;
                            formRkmPnbpBongkaranTambah.sbRefresh.Enabled = true;
                            formRkmPnbpBongkaranTambah.teNamaInstansi.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.cePilihSemua.Enabled = true;
                            formRkmPnbpBongkaranTambah.teKodePemohon.Properties.ReadOnly = true;
                            formRkmPnbpBongkaranTambah.statusForm = "CU";
                        }
                        else if (modeCrud == 'Z')
                        {
                            /*if (_keBerapa == 1)
                            {
                                _keBerapa++;
                                _indeksData = dsGridRskBongkaran.IndexOf(gridSkBongkaran.dataTerpilih);
                            }
                            else
                            {
                                gridSkBongkaran.dataTerpilih = gridSkBongkaran.dataTerpilih;
                            }*/
                            _indeksData = dsGridRkmPnbpBongkaran.IndexOf(gridRkmPnbpBongkaran.dataTerpilih);
                            _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                            dsGridRkmPnbpBongkaran.Remove(gridRkmPnbpBongkaran.dataTerpilih);
                            dsGridRkmPnbpBongkaran.Insert(_indeksData, dataPenyama);
                        }
                        break;
                    case "U":
                        dataPenyama.ID_SK_BNK = formRkmPnbpBongkaranUbah.idSkWasdal;
                        dataPenyama.ID_PNBP_BNK = formRkmPnbpBongkaranUbah.idSkPNBP;
                        dataPenyama.ID_PEMOHON = formRkmPnbpBongkaranUbah.idPemohon;
                        dataPenyama.ID_SATKER = formRkmPnbpBongkaranUbah.idPemohon;
                        dataPenyama.IS_TB = (formRkmPnbpBongkaranUbah.rgJenisAset.SelectedIndex == 0 ? konfigApp.namaTb : konfigApp.namaNonTb);
                        dataPenyama.KD_KL = formRkmPnbpBongkaranUbah.teKodeKl.Text;
                        dataPenyama.KD_PEMOHON = formRkmPnbpBongkaranUbah.teKodePemohon.Text;
                        dataPenyama.KD_PENERBIT_SK = formRkmPnbpBongkaranUbah.teNamaInstansi.EditValue.ToString();
                        dataPenyama.KD_PENERBIT_SK_DTL = formRkmPnbpBongkaranUbah.kodePenerbitSkDetail;
                        dataPenyama.KD_SATKER = formRkmPnbpBongkaranUbah.teKodePemohon.Text;
                        dataPenyama.KUANTITAS_SK = formRkmPnbpBongkaranUbah.teKuantitas.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBongkaranUbah.teKuantitas.Text);
                        dataPenyama.NILAI_PENETAPAN = formRkmPnbpBongkaranUbah.teNilaiPenetapan.Text == "" ? 0 : Convert.ToDecimal(formRkmPnbpBongkaranUbah.teNilaiPenetapan.Text);
                        dataPenyama.NM_PELAYANAN = konfigApp.namaPelayanan;
                        dataPenyama.NM_PEMOHON = formRkmPnbpBongkaranUbah.teNamaPemohon.Text;
                        dataPenyama.TGL_SK_BNK = Convert.ToDateTime(formRkmPnbpBongkaranUbah.teTanggalSk.Text);
                        dataPenyama.NM_PENERBIT_SK = formRkmPnbpBongkaranUbah.teNamaInstansi.Text;
                        dataPenyama.NM_PENERBIT_SK_DTL = formRkmPnbpBongkaranUbah.namaPenerbitSkDetail;
                        dataPenyama.NUM = (dsGridRkmPnbpBongkaran == null ? 1 : dsGridRkmPnbpBongkaran.Count + 1);
                        dataPenyama.ID_USER = konfigApp.idUser;

                        dataPenyama.NTPN = formRkmPnbpBongkaranUbah.teNTPN.Text;
                        dataPenyama.TGL_SETOR = Convert.ToDateTime(formRkmPnbpBongkaranUbah.deTglSetor.Text);
                        dataPenyama.NTB = formRkmPnbpBongkaranUbah.teNTB.Text;
                        dataPenyama.TGL_TRANSAKSI = Convert.ToDateTime(formRkmPnbpBongkaranUbah.deTglTransaksi.Text);
                        dataPenyama.NM_PENYETOR = formRkmPnbpBongkaranUbah.teNamaPenyetor.Text;
                        dataPenyama.KD_AKUN = formRkmPnbpBongkaranUbah.leAkun.EditValue.ToString();
                        dataPenyama.UR_AKUN = formRkmPnbpBongkaranUbah.leAkun.Text;
                        dataPenyama.NILAI_PNBP = Convert.ToDecimal(formRkmPnbpBongkaranUbah.teNilaiPnbp.Text);
                        dataPenyama.KET = formRkmPnbpBongkaranUbah.teKet.Text;
                        dataPenyama.KD_BILLING = formRkmPnbpBongkaranUbah.teKdBilling.Text;

                        dataPenyama.TIPE_PEMOHON = formRkmPnbpBongkaranUbah.teJenisPemohon.Text;
                        dataPenyama.TOT_BMN = 0;
                        dataPenyama.TOT_STATUS = null;
                        dataPenyama.TOTAL_DATA = null;
                        dataPenyama.UR_KL = formRkmPnbpBongkaranUbah.teNamaKl.Text;
                        dataPenyama.UR_SATKER = formRkmPnbpBongkaranUbah.teNamaPemohon.Text;
                        dataPenyama.ID_TL_WASDAL_BNK = formRkmPnbpBongkaranUbah.idTlSkWasdal;
                        dataPenyama.KD_PELAYANAN = formRkmPnbpBongkaranUbah.kd_pelayanan;
                        dataPenyama.ID_SATKER = formRkmPnbpBongkaranUbah.idSatker;
                        _indeksData = dsGridRkmPnbpBongkaran.IndexOf(gridRkmPnbpBongkaran.dataTerpilih);
                        _indeksData = (_indeksData < 0 ? 0 : _indeksData);
                        dsGridRkmPnbpBongkaran.Remove(gridRkmPnbpBongkaran.dataTerpilih);
                        dsGridRkmPnbpBongkaran.Insert(_indeksData, dataPenyama);
                        break;
                    case "D":
                        dsGridRkmPnbpBongkaran.Remove(gridRkmPnbpBongkaran.dataTerpilih);
                        break;
                }
                gridRkmPnbpBongkaran.dsDataSource = dsGridRkmPnbpBongkaran;
                gridRkmPnbpBongkaran.displayData();

                //if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z') || (this.modeCrud == 'D'))
                //{
                //    initGridSkBongkaran();
                //}
            }
            else MessageBox.Show(konfigApp.teksGagalLain, konfigApp.judulKonfirmasi);
        }

        private void pilihSkPnbp(SvcTLBongkaranSelect.WASDALSROW_TL_BONGKARAN_GRID _skTerpilih)
        {
            formRkmPnbpBongkaranTambah = new KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm("C")
            {
                toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                simpanDataRkmPnbpBongkaran = new SimpanDataRPNBP(simpanDataRkmPnbpBongkaran)
            };
            formRkmPnbpBongkaranTambah.skTerpilih = _skTerpilih;
            setPanel(formRkmPnbpBongkaranTambah);
            formRkmPnbpBongkaranTambah.inisialisasiForm();
            setTombolRkmPnbpForm();
        }

        #endregion Simpan Data JUAL

        #region action button
        KSK.PNBP.BONGKARAN.frmPuSk formSkPnbpBongkaran;

        private void RkmPnbpBongkaranTambah(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show(String.Format("Apakah anda ingin membuat PNBP Bongkaran Baru ?"), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                formSkPnbpBongkaran = new KSK.PNBP.BONGKARAN.frmPuSk()
                {

                    toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                    pilihSk = new PilihSkBOngkaranPnbp(pilihSkPnbp)
                };
                formSkPnbpBongkaran.ShowDialog();
            }
        }

        private void RkmPnbpBongkaranEdit(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBongkaran.dataTerpilih != null)
            {
                this.Enabled = false;
                if (formRkmPnbpBongkaranUbah == null)
                {
                    formRkmPnbpBongkaranUbah = new KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm("U")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBongkaran = new SimpanDataRPNBP(simpanDataRkmPnbpBongkaran)
                    };
                }
                formRkmPnbpBongkaranUbah.dataTerpilih = gridRkmPnbpBongkaran.dataTerpilih;
                formRkmPnbpBongkaranUbah.inisialisasiForm();
                setPanel(formRkmPnbpBongkaranUbah);
                setTombolRkmPnbpForm();
                this.Enabled = true;

            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBongkaranHapus(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBongkaran.dataTerpilih != null)
            {
                if (MessageBox.Show(String.Format("Apakah anda ingin menghapus PNBP Bongkaran\n{0}?", gridRkmPnbpBongkaran.dataTerpilih.NTPN), konfigApp.judulKonfirmasi,
                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    this.HapusDataRkmPnbpBongkaran();
                }
            }
        }

        private void RkmPnbpBongkaranDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (gridRkmPnbpBongkaran.dataTerpilih != null)
            {
                if (formRkmPnbpBongkaranDetail == null)
                {
                    formRkmPnbpBongkaranDetail = new KSK.PNBP.BONGKARAN.ucPNBPBongkaranForm("A")
                    {

                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRkmPnbpBongkaran = new SimpanDataRPNBP(simpanDataRkmPnbpBongkaran)
                    };
                }
                formRkmPnbpBongkaranDetail.dataTerpilih = gridRkmPnbpBongkaran.dataTerpilih;
                setPanel(formRkmPnbpBongkaranDetail);
                formRkmPnbpBongkaranDetail.inisialisasiForm();
                setTombolRkmPnbpForm();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void RkmPnbpBongkaranRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridRkmPnbpBongkaran.teNamaKolom.Text = "";
            gridRkmPnbpBongkaran.teCari.Text = "";
            gridRkmPnbpBongkaran.fieldDicari = "";
            gridRkmPnbpBongkaran.dataInisial = true;
            this.dataInisial = true;
            this.getInitRkmPnbpBongkaran();
        }

        private void RkmPnbpBongkaranMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitRkmPnbpBongkaran();
            }
        }

        private void RkmPnbpBongkaranKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            konfigApp.strMenu = this.menuRekamPnbpWasdal;
            konfigApp.strSubMenu = this.subMenuMonPenjualan;
            konfigApp.kdPelayanan = "22";
            konfigApp.namaPelayanan = this.subMenuMonPenjualan;
            this.Enabled = false;
            this.inisialisasiForm();
            rpRkmPnbp.Visible = true;
            ribbon.SelectedPage = rpRkmPnbp;
            initGridRkmPnbpBongkaran();
            modeCari = false;
            gridRkmPnbpBongkaran.teNamaKolom.Text = "";
            gridRkmPnbpBongkaran.teCari.Text = "";
            gridRkmPnbpBongkaran.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitRkmPnbpBongkaran();
        }

        private void RkmPnbpBongkaranTutup(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Dispose();
        }

        #endregion

        private void cariDataRkmPnbpBongkaran(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitRkmPnbpBongkaran();
        }
        #endregion

        #endregion  perekaman pnbp

        #region MONITORING PNBP

        KSK.PNBP.ucGridPnbp gridPnbp;
        ArrayList dsGridLaporanPnbp;
        private void setTombolPnbpGrid()
        {
            bbiPnbpRefresh.Enabled = true;
            bbiPnbpMore.Enabled = false;
        }
        private void resetEventTombolPnbp()
        {
            konfigApp.RemoveClickEvent(bbiPnbpRefresh);
            konfigApp.RemoveClickEvent(bbiPnbpMore);
            konfigApp.RemoveClickEvent(bbiPnbpKeluar);
        }

        #region PNBP per BMN
        private void setEventTombolLaporanPnbp()
        {
            resetEventTombolPnbp();
            bbiPnbpRefresh.ItemClick += new ItemClickEventHandler(bbiLapPnbpRefreshKlik);
            bbiPnbpMore.ItemClick += new ItemClickEventHandler(bbiLapPnbpMoreDataKlik);
            bbiPnbpBack.ItemClick += new ItemClickEventHandler(bbiPnbpTutup_ItemClick);
            bbiPnbpKeluar.ItemClick += new ItemClickEventHandler(bbiPnbpKeluarKlik);
            rpPnbp.Text = "Monitoring PNBP";
        }

        private void initGridLapPnbp()
        {
            if (gridPnbp == null)
            {
                gridPnbp = new KSK.PNBP.ucGridPnbp();
                gridPnbp.cariDataOnline = new CariDataOnline(setCariDataLapPnbp);
            }
            setTombolPnbpGrid();
            setEventTombolLaporanPnbp();
            setPanel(gridPnbp);
        }

        private void bbiLapPnbpRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            //gridPnbp.teNamaKolom.Text = "";
            //gridPnbp.teCari.Text = "";
            //gridPnbp.fieldDicari = "";
            gridPnbp.dataInisial = true;
            this.dataInisial = true;
            this.getInitLaporanPnbp();
        }

        private void bbiLapPnbpMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitLaporanPnbp();
            }
        }

        private void bbiExportExcel_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            PrintableComponentLink componenlink = new PrintableComponentLink(new PrintingSystem());
            componenlink.Component = gridPnbp.gcPnbp;
            componenlink.CreateDocument();
            PrintTool pt = new PrintTool(componenlink.PrintingSystemBase);
            pt.ShowRibbonPreview();
        }

        private void bbiPnbpKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            //Application.Exit();
            inisialisasiForm();
        }

        private void nbiMonitoringPnbp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Monitoring PNBP per BMN";
            konfigApp.strSubMenu = "Monitoring PNBP per BMN";
            this.Enabled = false;
            this.inisialisasiForm();
            rpPnbp.Visible = true;
            rpPnbp.Text = "Monitoring PNBP per BMN";

            //rpTindakLanjut.Visible = true;
            //rpTindakLanjut.Text = "Laporan PNBP";
            ribbon.SelectedPage = rpPnbp;
            initGridLapPnbp();
            modeCari = false;
            gridPnbp.teNamaKolom.Text = "";
            gridPnbp.teCari.Text = "";
            gridPnbp.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitLaporanPnbp();
        }
        private void bbiPnbpTutup_ItemClick(object sender, ItemClickEventArgs e)
        {
            //inisialisasiForm();
            Application.Exit();
        }

        #region --++ Ambil Data
        SvcWasdalManfaatMonPnbp.call_pttClient ambilDataLapPnbp;
        SvcWasdalManfaatMonPnbp.OutputParameters dOutLapPnbp;

        private void getInitLaporanPnbp()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalManfaatMonPnbp.InputParameters parInp = new SvcWasdalManfaatMonPnbp.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                parInp.STR_WHERE = String.Format(" ID_SATKER = {0} {1}", konfigApp.idSatker, this.strCari);
                ambilDataLapPnbp = new SvcWasdalManfaatMonPnbp.call_pttClient();
                ambilDataLapPnbp.Open();
                ambilDataLapPnbp.Beginexecute(parInp, new AsyncCallback(getLaporanPnbp), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLaporanPnbp(IAsyncResult result)
        {
            try
            {
                dOutLapPnbp = ambilDataLapPnbp.Endexecute(result);
                ambilDataLapPnbp.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsLaporanPnbp(dsLaporanPnbp), dOutLapPnbp);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsLaporanPnbp(SvcWasdalManfaatMonPnbp.OutputParameters dataOut);

        private void dsLaporanPnbp(SvcWasdalManfaatMonPnbp.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_MON_PNBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_MON_PNBP[jmlData-1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiPnbpMore.Enabled = true;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridLaporanPnbp = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_MON_PNBP[i].TGL_BUKTI_LAKSANA = konfigApp.setDefaultDate(dataOut.SF_MON_PNBP[i].TGL_BUKTI_LAKSANA);
                dataOut.SF_MON_PNBP[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_MON_PNBP[i].TGL_SETOR);
                dataOut.SF_MON_PNBP[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_MON_PNBP[i].TGL_SK);
                dataOut.SF_MON_PNBP[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_MON_PNBP[i].TGL_TRANSAKSI);
                dsGridLaporanPnbp.Add(dataOut.SF_MON_PNBP[i]);
            }

            gridPnbp.sbCariOnline.Enabled = !modeCari;
            gridPnbp.dsDataSource = dsGridLaporanPnbp;
            gridPnbp.displayData();
            if (modeCari == true)
            {
                string xSatu = gridPnbp.teNamaKolom.Text.Trim();
                string xDua = gridPnbp.teCari.Text.Trim();
                string xTiga = gridPnbp.fieldDicari;
                gridPnbp.gvPnbp.ClearColumnsFilter();
                gridPnbp.teNamaKolom.Text = xSatu;
                gridPnbp.teCari.Text = xDua;
                gridPnbp.fieldDicari = xTiga;
            }
            else
                gridPnbp.gvPnbp.ClearColumnsFilter();

            gridPnbp.labelTotData.Text = "";
            gridPnbp.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }

        private void setCariDataLapPnbp(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitLaporanPnbp();
        }
        #endregion

        #endregion

        #region PNBP perSSBP

        KSK.MONPNBP.SWBMN.ucSewaBmnGrid gridPnbpSSBP;
        ArrayList dsGridMonPnbpSSBP;

        private void nbiMonPnbpSSBP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Monitoring PNBP";
            konfigApp.strSubMenu = "Monitoring PNBP per SSBP";
            this.Enabled = false;
            this.inisialisasiForm();
            rpPnbp.Visible = true;
            rpPnbp.Text = "Monitoring PNBP";

            ribbon.SelectedPage = rpPnbp;
            initGridMonPnbpSSBP();
            modeCari = false;
            gridPnbpSSBP.teNamaKolom.Text = "";
            gridPnbpSSBP.teCari.Text = "";
            gridPnbpSSBP.fieldDicari = "";
            strCari = "";
            this.dataInisial = true;
            this.getInitMonPnbpSSBP();
        }

        private void setEventTombolMonPnbpSSBP()
        {
            resetEventTombolPnbp();
            bbiPnbpRefresh.ItemClick += new ItemClickEventHandler(bbiMonPnbpSSBPRefreshKlik);
            bbiPnbpMore.ItemClick += new ItemClickEventHandler(bbiMonPnbpSSBPMoreDataKlik);
            bbiPnbpBack.ItemClick += new ItemClickEventHandler(bbiPnbpTutup_ItemClick);
            bbiPnbpKeluar.ItemClick += new ItemClickEventHandler(bbiMonPnbpSSBPKeluarKlik);
            rpPnbp.Text = "Monitoring PNBP per SSBP";
        }

        private void initGridMonPnbpSSBP()
        {
            if (gridPnbpSSBP == null)
            {
                gridPnbpSSBP = new KSK.MONPNBP.SWBMN.ucSewaBmnGrid();
                gridPnbpSSBP.cariDataOnline = new CariDataOnline(setCariDataMonPnbpSSBP);
                //PERLUDICEK//gridPnbpSSBP.detailDataGrid = new DetailDataGrid(ambilDatadariGridPnbpSSBP);
            }
            setTombolPnbpGrid();
            setEventTombolMonPnbpSSBP();
            setPanel(gridPnbpSSBP);
        }

        #region ACTION BUTTON
        private void bbiMonPnbpSSBPRefreshKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            strCari = "";
            modeCari = false;
            gridPnbpSSBP.teNamaKolom.Text = "";
            gridPnbpSSBP.teCari.Text = "";
            gridPnbpSSBP.fieldDicari = "";
            gridPnbpSSBP.dataInisial = true;
            this.dataInisial = true;
            this.getInitMonPnbpSSBP();
        }

        private void bbiMonPnbpSSBPMoreDataKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (this.masihAdaData == true)
            {
                this.dataInisial = false;
                this.getInitMonPnbpSSBP();
            }
        }

        private void bbiSSBPExportExcel_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            PrintableComponentLink componenlink = new PrintableComponentLink(new PrintingSystem());
            componenlink.Component = gridPnbpSSBP.gcGridSk;
            componenlink.CreateDocument();
            PrintTool pt = new PrintTool(componenlink.PrintingSystemBase);
            pt.ShowRibbonPreview();
        }

        private void bbiMonPnbpSSBPKeluarKlik(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            inisialisasiForm();
        }
        #endregion

        #region --++ Ambil Data
        SvcWasdalMonPnbpSsbp.call_pttClient ambilDataMonPnbpSSBP;
        SvcWasdalMonPnbpSsbp.OutputParameters dOutMonPnbpSSBP;

        private void getInitMonPnbpSSBP()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcWasdalMonPnbpSsbp.InputParameters parInp = new SvcWasdalMonPnbpSsbp.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "y";
                //parInp.STR_WHERE = String.Format(" ID_SATKER = {0} {1}", konfigApp.idSatker, this.strCari);
                parInp.STR_WHERE = String.Format(" NTPN IS NOT NULL AND ID_PEMOHON = {0} {1}", konfigApp.idSatker, this.strCari);
                ambilDataMonPnbpSSBP = new SvcWasdalMonPnbpSsbp.call_pttClient();
                ambilDataMonPnbpSSBP.Open();
                ambilDataMonPnbpSSBP.Beginexecute(parInp, new AsyncCallback(getMonPnbpSSBP), null);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getMonPnbpSSBP(IAsyncResult result)
        {
            try
            {
                dOutMonPnbpSSBP = ambilDataMonPnbpSSBP.Endexecute(result);
                ambilDataMonPnbpSSBP.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsMonPnbpSSBP(dsMonPnbpSSBP), dOutMonPnbpSSBP);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsMonPnbpSSBP(SvcWasdalMonPnbpSsbp.OutputParameters dataOut);

        private void dsMonPnbpSSBP(SvcWasdalMonPnbpSsbp.OutputParameters dataOut)
        {
            int jmlData = dataOut.SF_MON_WASDAL_PNBP_SSBP.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlData == 0) ? jmlData.ToString() : dataOut.SF_MON_WASDAL_PNBP_SSBP[jmlData - 1].TOTAL_DATA.ToString();
            if (jmlData == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiPnbpMore.Enabled = true;
            }
            else
            {
                if (jmlData > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlData;
                this.masihAdaData = false;
                bbiPnbpMore.Enabled = false;
            }
            if (dataInisial == true)
            {
                dsGridMonPnbpSSBP = new ArrayList();
            }
            for (int i = 0; i < jmlData; i++)
            {
                dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_CREATED = konfigApp.setDefaultDate(dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_CREATED);
                dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_SETOR = konfigApp.setDefaultDate(dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_SETOR);
                dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_SK = konfigApp.setDefaultDate(dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_SK);
                dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_TRANSAKSI = konfigApp.setDefaultDate(dataOut.SF_MON_WASDAL_PNBP_SSBP[i].TGL_TRANSAKSI);
                dsGridMonPnbpSSBP.Add(dataOut.SF_MON_WASDAL_PNBP_SSBP[i]);
            }

            gridPnbpSSBP.sbCariOnline.Enabled = !modeCari;
            gridPnbpSSBP.dsDataSource = dsGridMonPnbpSSBP;
            gridPnbpSSBP.displayData();
            if (modeCari == true)
            {
                string xSatu = gridPnbpSSBP.teNamaKolom.Text.Trim();
                string xDua = gridPnbpSSBP.teCari.Text.Trim();
                string xTiga = gridPnbpSSBP.fieldDicari;
                gridPnbpSSBP.gvGridSk.ClearColumnsFilter();
                gridPnbpSSBP.teNamaKolom.Text = xSatu;
                gridPnbpSSBP.teCari.Text = xDua;
                gridPnbpSSBP.fieldDicari = xTiga;
            }
            else
                gridPnbpSSBP.gvGridSk.ClearColumnsFilter();

            gridPnbpSSBP.labelTotData.Text = "";
            gridPnbpSSBP.labelTotData.Text = "Menampilkan " + jmlCurrent + " dari total " + totalData + " data";
        }

        private void setCariDataMonPnbpSSBP(string _strWhere, bool initModeCari)
        {
            strCari = _strWhere;
            modeCari = true;
            dataInisial = initModeCari;
            getInitMonPnbpSSBP();
        }

        

        #endregion

        #endregion

        #endregion

        #region PERBANDINGAN PNBP SIMAN DAN SPAN
        string cariPnbp = "";

        string cariPnbpLap1 = "";
        string cariPnbpLap2 = "";
        string cariPnbpLap3 = "";
        string cariPnbpLap4 = "";

        #region REKAP PNBP

        AppPengguna.KSK.SIMANSPAN.ucRekapPNBP gridRekapPNBP;
        AppPengguna.KSK.SIMANSPAN.FrmRekapPNBP formRekapPNBPTambah;
        AppPengguna.KSK.SIMANSPAN.FrmRekapPNBP formRekapPNBPUbah;
        AppPengguna.KSK.SIMANSPAN.FrmRekapPNBP formRekapPNBPDetail;
        private ArrayList dsGridRekapPNBP;
        SvcGridPnbpRekap.OutputParameters dOutGridPnbpRekap;
        SvcGridPnbpRekap.execute_pttClient ambilGridPnbpRekap;

        private void initGridRekapPNBP()
        {
            //if (gridSkBongkaran == null)
            //{
            gridRekapPNBP = new AppPengguna.KSK.SIMANSPAN.ucRekapPNBP()
            {
                detailDataGrid = new DetailDataGrid(bbiRskBongkaranUbahKlik),
                filter = new detail(getInitGridRekapPNBP)
            };
            //}
            setEventTombolGridRekapPNBP();
            setPanel(gridRekapPNBP);
        }

        private void setEventTombolGridRekapPNBP()
        {
            resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlRefreshRekapPNBP);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMoreRekapPNBP);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlExportRekapPNBP);
            this.bbiMWasdalPrint.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalRefresh.Visibility = BarItemVisibility.Always;
            this.bbiMWasdalMore.Visibility = BarItemVisibility.Always;
        }

        public void detailDataRekapPNBP()
        {
            if (gridRekapPNBP.dataTerpilih != null)
            {
                if (formRekapPNBPUbah == null)
                {
                    formRekapPNBPUbah = new AppPengguna.KSK.SIMANSPAN.FrmRekapPNBP("U")
                    {
                        toggleProgressBar = new ToggleProgressBar(fToggleProgressBar),
                        simpanDataRskPspBmn = new SimpanDataRsk(simpanDataRekapPNBP)
                    };
                }
                formRekapPNBPUbah.dataTerpilih = gridRekapPNBP.dataTerpilih;
                formRekapPNBPUbah.ShowDialog();
            }
            else MessageBox.Show(konfigApp.teksPilihanKosong, konfigApp.judulKonfirmasi);
        }

        private void nbiPNBPRekap_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            cariPnbp = "";
            konfigApp.strMenu = "Perbandingan Data PNBP SIMAN dan SPAN";
            konfigApp.strSubMenu = "Data Rekap PNBP";
            this.Enabled = false;
            this.inisialisasiForm();
            rpMonitoringWasdal.Visible = true;
            ribbon.SelectedPage = rpMonitoringWasdal;
            initGridRekapPNBP();
            this.dataInisial = true;
            this.getInitGridRekapPNBP();
        }

        #region Tombol Rekap PNBP
        private void mWlRefreshRekapPNBP(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = true;
            this.getInitGridRekapPNBP();
        }

        private void mWlMoreRekapPNBP(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = false;
            this.getInitGridRekapPNBP();
        }

        private void mWlExportRekapPNBP(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Excel Files (*.xls, *.xlsx)|*.xls, *.xlsx";
            DialogResult dr = sfd.ShowDialog();
            if (dr == System.Windows.Forms.DialogResult.OK)
            {
                gridRekapPNBP.gridView1.BestFitColumns();
                gridRekapPNBP.gridControl1.ExportToXlsx(sfd.FileName);
            }

        }

        #endregion Tombol Rekap PNBP

        #region --++ Ambil Data Bongkaran
        private void getInitGridRekapPNBP(string cari = null)
        {
            cariPnbp = cari;
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridPnbpRekap.InputParameters parInp = new SvcGridPnbpRekap.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbp) ? "" : "AND " + cariPnbp);
                // parInp.STR_WHERE = String.Format("KD_PELAYANAN = '{0}' AND (ID_USER={1} OR (TIPE_PEMOHON='SATKER' AND ID_PEMOHON={2})) AND (ID_SATKER = {2} OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                //    parInp.str_where = String.Format("KD_PELAYANAN = '{0}' AND " +
                //" (ID_USER={1} " +
                // "OR (TIPE_PEMOHON = 'SATKER' AND ID_PEMOHON={2}) " +
                // "OR ID_SATKER = {2} " +
                // "OR ID_SATKER_PARENT= {2}) {3}", konfigApp.kdPelayanan, konfigApp.idUser, konfigApp.idSatker, this.strCari);
                ambilGridPnbpRekap = new SvcGridPnbpRekap.execute_pttClient();
                ambilGridPnbpRekap.Open();
                ambilGridPnbpRekap.Beginexecute(parInp, new AsyncCallback(getRekapPNBP), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapPNBP(IAsyncResult result)
        {
            try
            {
                dOutGridPnbpRekap = ambilGridPnbpRekap.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridRekapPNBP(dsOutGridRekapPNBP), dOutGridPnbpRekap);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridRekapPNBP(SvcGridPnbpRekap.OutputParameters dataOut);

        private void dsOutGridRekapPNBP(SvcGridPnbpRekap.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_GRID_REKAP_PNBP_SPAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_GRID_REKAP_PNBP_SPAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridRekapPNBP = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dsGridRekapPNBP.Add(dataOut.SF_GRID_REKAP_PNBP_SPAN[i]);
            }
            gridRekapPNBP.labelTotData.Text = "";
            gridRekapPNBP.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridRekapPNBP.dsDataSource = dsGridRekapPNBP;
            gridRekapPNBP.displayData();
            gridRekapPNBP.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Simpan Data RekapPNBP
        SvcUpdateKetRekapPNBP.OutputParameters dOutAmbilDataRekapPNBP;
        SvcUpdateKetRekapPNBP.execute_pttClient ambilDataRekapPNBP;

        private void simpanDataRekapPNBP(string _mode)
        {
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcUpdateKetRekapPNBP.InputParameters parInp = new SvcUpdateKetRekapPNBP.InputParameters();
                parInp.P_ID_SATKER = gridRekapPNBP.dataTerpilih.ID_SATKER;
                parInp.P_ID_SATKERSpecified = true;
                parInp.P_KET = ((_mode == "C" || _mode == "CU") ? formRekapPNBPTambah.teKeterangan.Text : formRekapPNBPUbah.teKeterangan.Text).ToString();
                parInp.P_PERIODE = gridRekapPNBP.dataTerpilih.PERIODE;

                ambilDataRekapPNBP = new SvcUpdateKetRekapPNBP.execute_pttClient();
                ambilDataRekapPNBP.Open();
                ambilDataRekapPNBP.Beginexecute(parInp, new AsyncCallback(cudRekapPNBP), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulGagalSimpan);
            }
        }

        private void cudRekapPNBP(IAsyncResult result)
        {
            try
            {
                dOutAmbilDataRekapPNBP = ambilDataRekapPNBP.Endexecute(result);
                ambilDataRekapPNBP.Close();
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new UbahDsRekapPNBP(this.ubahDsRekapPNBP), dOutAmbilDataRekapPNBP);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(aktifkanForm), "");
                if ((this.modeCrud == 'C') || (this.modeCrud == 'U') || (this.modeCrud == 'Z'))
                {
                    konfigApp.teksDialog = konfigApp.teksGagalSimpan;
                }
                else if (this.modeCrud == 'D')
                {
                    konfigApp.teksDialog = konfigApp.teksGagalHapus;
                }
                else
                {
                    konfigApp.teksDialog = konfigApp.teksGagalLain;
                }
                MessageBox.Show(konfigApp.teksDialog, konfigApp.judulGagalLain);
            }
        }

        private delegate void UbahDsRekapPNBP(SvcUpdateKetRekapPNBP.OutputParameters dataOutBongkaranCrud);

        private void ubahDsRekapPNBP(SvcUpdateKetRekapPNBP.OutputParameters dataOutBongkaranCrud)
        {
            if (dataOutBongkaranCrud.PO_RESULT == "Y")
            {
                getInitGridRekapPNBP();
            }
            else MessageBox.Show(konfigApp.teksGagalSimpan, konfigApp.judulKonfirmasi);
        }
        #endregion Simpan Data RekapPNBP

        

        #endregion REKAP PNBP

        #region REKAP PNBP SPAN

        AppPengguna.KSK.SIMANSPAN.ucPNBPSPAN gridRekapPNBPSpan;
        private ArrayList dsGridPNBPSpan;
        SvcGridPnbpSpan.OutputParameters dOutGridPnbpSpan;
        SvcGridPnbpSpan.execute_pttClient ambilGridPnbpSpan;

        private void initGridPNBPSPAN()
        {
            gridRekapPNBPSpan = new AppPengguna.KSK.SIMANSPAN.ucPNBPSPAN();
            gridRekapPNBPSpan.filter = new detail(getInitGridRekapPNBPSPAN);
            setEventTombolGridRekapPNBPSPAN();
            setPanel(gridRekapPNBPSpan);
        }
        
        private void setEventTombolGridRekapPNBPSPAN()
        {
            resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlRefreshRekapPNBPSpan);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMoreRekapPNBPSpan);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlExportRekapPNBPSpan);
            this.bbiMWasdalPrint.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalRefresh.Visibility = BarItemVisibility.Always;
            this.bbiMWasdalMore.Visibility = BarItemVisibility.Always;
        }

        private void nbiPNBPSPAN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            cariPnbp = ""; 
            konfigApp.strMenu = "Perbandingan Data PNBP SIMAN dan SPAN";
            konfigApp.strSubMenu = "Data Rekap PNBP SPAN";
            this.Enabled = false;
            this.inisialisasiForm();
            rpMonitoringWasdal.Visible = true;
            ribbon.SelectedPage = rpMonitoringWasdal;
            initGridPNBPSPAN();
            this.dataInisial = true;
            this.getInitGridRekapPNBPSPAN();
        }
        
        #region Tombol Rekap SPAN
        private void mWlRefreshRekapPNBPSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = true;
            this.getInitGridRekapPNBPSPAN();
        }

        private void mWlMoreRekapPNBPSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = false;
            this.getInitGridRekapPNBPSPAN();
        }

        private void mWlExportRekapPNBPSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Excel Files (*.xls, *.xlsx)|*.xls, *.xlsx";
            DialogResult dr = sfd.ShowDialog();
            if (dr == DialogResult.OK)
            {
                gridRekapPNBPSpan.gridView1.BestFitColumns();
                gridRekapPNBPSpan.gridControl1.ExportToXlsx(sfd.FileName);
            }

        }

        #endregion Tombol Rekap PNBP

        #region --++ Ambil Data rekap SPAN
        private void getInitGridRekapPNBPSPAN(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbp = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridPnbpSpan.InputParameters parInp = new SvcGridPnbpSpan.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("FLAG = 'N' AND KD_SATKER LIKE '%{0}%' {1}", konfigApp.kodeSatker.Substring(10,6), (string.IsNullOrEmpty(cariPnbp) ? "" : "AND " + cariPnbp));
                ambilGridPnbpSpan = new SvcGridPnbpSpan.execute_pttClient();
                ambilGridPnbpSpan.Open();
                ambilGridPnbpSpan.Beginexecute(parInp, new AsyncCallback(getRekapPNBPSPAN), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapPNBPSPAN(IAsyncResult result)
        {
            try
            {
                dOutGridPnbpSpan = ambilGridPnbpSpan.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridRekapPNBPSPAN(dsOutGridRekapPNBPSPAN), dOutGridPnbpSpan);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridRekapPNBPSPAN(SvcGridPnbpSpan.OutputParameters dataOut);

        private void dsOutGridRekapPNBPSPAN(SvcGridPnbpSpan.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_GRID_PNBP_SPAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_GRID_PNBP_SPAN[0].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_GRID_PNBP_SPAN[i].TANGGAL) == "11/11/1000") dataOut.SF_GRID_PNBP_SPAN[i].TANGGAL = null;
                dsGridPNBPSpan.Add(dataOut.SF_GRID_PNBP_SPAN[i]);
            }
            gridRekapPNBPSpan.labelTotData.Text = "";
            string maxRow = (jmlDataKl == 0) ? "0" : dataOut.SF_GRID_PNBP_SPAN[0].TOTAL_DATA.ToString();
            gridRekapPNBPSpan.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + maxRow + " data";
            gridRekapPNBPSpan.dsDataSource = dsGridPNBPSpan;
            gridRekapPNBPSpan.displayData();
            gridRekapPNBPSpan.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #endregion REKAP PNBP SPAN

        #region REKAP PNBP SIMAN

        AppPengguna.KSK.SIMANSPAN.ucPNBPSIMAN gridRekapPNBPSiman;
        private ArrayList dsGridPNBPSiman;
        SvcGridPnbpSiman.OutputParameters dOutGridPnbpSiman;
        SvcGridPnbpSiman.execute_pttClient ambilGridPnbpSiman;

        private void initGridPNBPSIMAN()
        {
            gridRekapPNBPSiman = new AppPengguna.KSK.SIMANSPAN.ucPNBPSIMAN();
            gridRekapPNBPSiman.filter = new detail(getInitGridRekapPNBPSIMAN);
            setEventTombolGridRekapPNBPSIMAN();
            setPanel(gridRekapPNBPSiman);
        }

        private void setEventTombolGridRekapPNBPSIMAN()
        {
            resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlRefreshRekapPNBPSiman);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMoreRekapPNBPSiman);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlExportRekapPNBPSiman);
            this.bbiMWasdalPrint.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalRefresh.Visibility = BarItemVisibility.Always;
            this.bbiMWasdalMore.Visibility = BarItemVisibility.Always;
        }

        private void nbiPNBPSIMAN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            cariPnbp = "";
            konfigApp.strMenu = "Perbandingan Data PNBP SIMAN dan SPAN";
            konfigApp.strSubMenu = "Data Rekap PNBP SIMAN";
            this.Enabled = false;
            this.inisialisasiForm();
            rpMonitoringWasdal.Visible = true;
            ribbon.SelectedPage = rpMonitoringWasdal;
            initGridPNBPSIMAN();
            this.dataInisial = true;
            this.getInitGridRekapPNBPSIMAN();
        }

        #region Tombol Rekap SPAN
        private void mWlRefreshRekapPNBPSiman(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = true;
            this.getInitGridRekapPNBPSIMAN();
        }

        private void mWlMoreRekapPNBPSiman(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = false;
            this.getInitGridRekapPNBPSIMAN();
        }

        private void mWlExportRekapPNBPSiman(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Excel Files (*.xls, *.xlsx)|*.xls, *.xlsx";
            DialogResult dr = sfd.ShowDialog();
            if (dr == DialogResult.OK)
            {
                gridRekapPNBPSiman.gridView1.BestFitColumns();
                gridRekapPNBPSiman.gridControl1.ExportToXlsx(sfd.FileName);
            }

        }

        #endregion Tombol Rekap PNBP

        #region --++ Ambil Data Rekap SIMAN
        private void getInitGridRekapPNBPSIMAN(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbp = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridPnbpSiman.InputParameters parInp = new SvcGridPnbpSiman.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbp) ? "" : "AND " + cariPnbp);
                ambilGridPnbpSiman = new SvcGridPnbpSiman.execute_pttClient();
                ambilGridPnbpSiman.Open();
                ambilGridPnbpSiman.Beginexecute(parInp, new AsyncCallback(getRekapPNBPSIMAN), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapPNBPSIMAN(IAsyncResult result)
        {
            try
            {
                dOutGridPnbpSiman = ambilGridPnbpSiman.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridRekapPNBPSIMAN(dsOutGridRekapPNBPSIMAN), dOutGridPnbpSiman);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridRekapPNBPSIMAN(SvcGridPnbpSiman.OutputParameters dataOut);

        private void dsOutGridRekapPNBPSIMAN(SvcGridPnbpSiman.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_GRID_PNBP_SIMAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_GRID_PNBP_SIMAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSiman = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_GRID_PNBP_SIMAN[i].TANGGAL) == "11/11/1000") dataOut.SF_GRID_PNBP_SIMAN[i].TANGGAL = null;
                dsGridPNBPSiman.Add(dataOut.SF_GRID_PNBP_SIMAN[i]);
            }
            gridRekapPNBPSiman.labelTotData.Text = "";
            gridRekapPNBPSiman.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridRekapPNBPSiman.dsDataSource = dsGridPNBPSiman;
            gridRekapPNBPSiman.displayData();
            gridRekapPNBPSiman.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #endregion REKAP PNBP SIMAN

        #region REKAP PNBP BANDING

        AppPengguna.KSK.SIMANSPAN.ucLapBandingSimanSpan gridBanding;
        private ArrayList dsGridBanding;
        SvcGridPnbpSpan.OutputParameters dOutGridBanding;
        SvcGridPnbpSpan.execute_pttClient ambilGridBanding;

        private void initGridBanding()
        {
            gridBanding = new AppPengguna.KSK.SIMANSPAN.ucLapBandingSimanSpan();
            gridBanding.refreshgc1 = new detail(getInitGridBandingSpanSimanAtas);
            gridBanding.refreshgc2 = new detail(getInitGridBandingSpanSiman);
            setEventTombolGridBanding();
            setPanel(gridBanding);
        }

        private void setEventTombolGridBanding()
        {
            resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlRefreshBanding);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMoreBanding);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlExportBanding);
            this.bbiMWasdalPrint.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalRefresh.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalMore.Visibility = BarItemVisibility.Never;
        }

        private void nbiPerbandingan_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            cariPnbp = "";
            konfigApp.strMenu = "Perbandingan Data PNBP SIMAN dan SPAN";
            konfigApp.strSubMenu = "Data Rekap PNBP SPAN";
            this.Enabled = false;
            this.inisialisasiForm();
            rpMonitoringWasdal.Visible = true;
            ribbon.SelectedPage = rpMonitoringWasdal;
            initGridBanding();
            this.dataInisial = true;
            getInitGridBandingSpanSimanAtas();
            getInitGridBandingSpanSiman();
        }

        #region Tombol Rekap SPAN
        private void mWlRefreshBanding(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            //loadBanding(true);
        }

        private void mWlMoreBanding(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            //loadBanding(false);
        }

        private void mWlExportBanding(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Excel Files (*.xls, *.xlsx)|*.xls, *.xlsx";
            DialogResult dr = sfd.ShowDialog();
            if (dr == DialogResult.OK)
            {
                gridRekapPNBPSpan.gridView1.BestFitColumns();
                gridRekapPNBPSpan.gridControl1.ExportToXlsx(sfd.FileName);
            }

        }

        #endregion Tombol Rekap PNBP

        //private void loadBanding(bool initData)
        //{
        //    this.dataInisial = initData;

        //    if (dataInisial == true)
        //    {
        //        konfigApp.currentMaks = konfigApp.dataAkhir;
        //        konfigApp.currentMin = konfigApp.dataAwal;
        //    }
        //    else
        //    {
        //        konfigApp.currentMin = konfigApp.currentMaks + 1;
        //        konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
        //    }

        //    getInitGridBandingSpanSimanAtas();
        //    getInitGridBandingSpanSiman();
        //}

        #region --++ Ambil Data rekap SPAN
        private void getInitGridBanding()
        {
            this.Enabled = false;
            try
            {
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridPnbpSpan.InputParameters parInp = new SvcGridPnbpSpan.InputParameters();
                parInp.P_COL = "";
                //if (dataInisial == true)
                //{
                //    konfigApp.currentMaks = konfigApp.dataAkhir;
                //    konfigApp.currentMin = konfigApp.dataAwal;
                //}
                //else
                //{
                //    konfigApp.currentMin = konfigApp.currentMaks + 1;
                //    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                //}
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("FLAG = 'Y' AND ID_SATKER = {0}", konfigApp.idSatker);
                ambilGridPnbpSpan = new SvcGridPnbpSpan.execute_pttClient();
                ambilGridPnbpSpan.Open();
                ambilGridPnbpSpan.Beginexecute(parInp, new AsyncCallback(getRekapBanding), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapBanding(IAsyncResult result)
        {
            try
            {
                dOutGridBanding = ambilGridPnbpSpan.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridBanding(dsOutGridBanding), dOutGridBanding);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridBanding(SvcGridPnbpSpan.OutputParameters dataOut);

        private void dsOutGridBanding(SvcGridPnbpSpan.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_GRID_PNBP_SPAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_GRID_PNBP_SPAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.dataAkhir;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dsGridPNBPSpan.Add(dataOut.SF_GRID_PNBP_SPAN[i]);
            }
            gridBanding.labelTotData.Text = "";
            gridBanding.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridBanding.dsDataSource = dsGridPNBPSpan;
            gridBanding.displayData();
            gridBanding.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Ambil Data rekap BandingSpanSiman
        SvcGridBandingSpanSiman.OutputParameters dOutGridBandingSpanSiman;
        SvcGridBandingSpanSiman.execute_pttClient ambilGridBandingSpanSiman;
        decimal minBawah = 0, maxBawah = 0;
        private void getInitGridBandingSpanSiman(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbp = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridBandingSpanSiman.InputParameters parInp = new SvcGridBandingSpanSiman.InputParameters();
                parInp.P_COL = "";

                if (String.IsNullOrEmpty(cari))
                {
                    dataInisial = true;
                    maxBawah = konfigApp.dataAkhir;
                    minBawah = konfigApp.dataAwal;
                }
                else
                {
                    dataInisial = false;
                    minBawah = maxBawah + 1;
                    maxBawah = maxBawah + konfigApp.dataAkhir;
                }
                parInp.P_MAX = maxBawah;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = minBawah;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                //parInp.STR_WHERE = String.Format("FLAG = 'N' AND KD_SATKER LIKE '%{0}%' {1}", konfigApp.kodeSatker.Substring(10, 6), (string.IsNullOrEmpty(cariPnbp) ? "" : "AND " + cariPnbp));
                parInp.STR_WHERE = String.Format("FLAG = 'N' AND KD_SATKER LIKE '%{0}%'", konfigApp.kodeSatker.Substring(10, 6));
                ambilGridBandingSpanSiman = new SvcGridBandingSpanSiman.execute_pttClient();
                ambilGridBandingSpanSiman.Open();
                ambilGridBandingSpanSiman.Beginexecute(parInp, new AsyncCallback(getRekapBandingSpanSiman), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapBandingSpanSiman(IAsyncResult result)
        {
            try
            {
                dOutGridBandingSpanSiman = ambilGridBandingSpanSiman.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridBandingSpanSiman(dsOutGridBandingSpanSiman), dOutGridBandingSpanSiman);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridBandingSpanSiman(SvcGridBandingSpanSiman.OutputParameters dataOut);

        private void dsOutGridBandingSpanSiman(SvcGridBandingSpanSiman.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_PERBANDINGAN_SPAN_SIMAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_PERBANDINGAN_SPAN_SIMAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            
            if (jmlDataKl >= maxBawah || jmlDataKl % konfigApp.dataAkhir == 0)
            {
                gridBanding.sbMore2.Enabled = true;
                jmlCurrent = maxBawah;
            }
            else
            {
                gridBanding.sbMore2.Enabled = false;
                jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_PERBANDINGAN_SPAN_SIMAN[i].TANGGAL) == "11/11/1000") dataOut.SF_PERBANDINGAN_SPAN_SIMAN[i].TANGGAL = null;
                dsGridPNBPSpan.Add(dataOut.SF_PERBANDINGAN_SPAN_SIMAN[i]);
            }
            gridBanding.labelTotData2.Text = "";
            gridBanding.labelTotData2.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridBanding.dsDataSource2 = dsGridPNBPSpan;
            gridBanding.displayData2();
            gridBanding.gridView2.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Ambil Data rekap BandingSpanSimanAtas
        SvcGridPnbpSpanSimanValid.OutputParameters dOutGridBandingSpanSimanAtas;
        SvcGridPnbpSpanSimanValid.execute_pttClient ambilGridBandingSpanSimanAtas;
        decimal minAtas = 0, maxAtas = 0;
        private void getInitGridBandingSpanSimanAtas(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbp = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcGridPnbpSpanSimanValid.InputParameters parInp = new SvcGridPnbpSpanSimanValid.InputParameters();
                parInp.P_COL = "";

                if (String.IsNullOrEmpty(cari))
                {
                    dataInisial = true;
                    maxAtas = konfigApp.dataAkhir;
                    minAtas = konfigApp.dataAwal;
                }
                else
                {
                    dataInisial = false;
                    minAtas = maxAtas + 1;
                    maxAtas = maxAtas + konfigApp.dataAkhir;
                }
                parInp.P_MAX = maxAtas;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = minAtas;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                //parInp.STR_WHERE = String.Format("FLAG = 'Y' AND KD_SATKER LIKE '%{0}%' {1}", konfigApp.kodeSatker.Substring(10, 6), (string.IsNullOrEmpty(cariPnbp) ? "" : "AND " + cariPnbp));
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} OR ID_SATKER_PARENT = {1}", konfigApp.idSatker, konfigApp.idSatker);
                ambilGridBandingSpanSimanAtas = new SvcGridPnbpSpanSimanValid.execute_pttClient();
                ambilGridBandingSpanSimanAtas.Open();
                ambilGridBandingSpanSimanAtas.Beginexecute(parInp, new AsyncCallback(getRekapBandingSpanSimanAtas), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapBandingSpanSimanAtas(IAsyncResult result)
        {
            try
            {
                dOutGridBandingSpanSimanAtas = ambilGridBandingSpanSimanAtas.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutGridBandingSpanSimanAtas(dsOutGridBandingSpanSimanAtas), dOutGridBandingSpanSimanAtas);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutGridBandingSpanSimanAtas(SvcGridPnbpSpanSimanValid.OutputParameters dataOut);

        private void dsOutGridBandingSpanSimanAtas(SvcGridPnbpSpanSimanValid.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_GRID_PNBP_SPAN_SIMAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_GRID_PNBP_SPAN_SIMAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            
            if (jmlDataKl >= maxAtas || jmlDataKl % konfigApp.dataAkhir == 0)
            {
                gridBanding.sbMore1.Enabled = true;
                jmlCurrent = maxAtas;
            }
            else
            {
                gridBanding.sbMore1.Enabled = false;
                jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_GRID_PNBP_SPAN_SIMAN[i].TANGGAL) == "11/11/1000") dataOut.SF_GRID_PNBP_SPAN_SIMAN[i].TANGGAL = null;
                dsGridPNBPSpan.Add(dataOut.SF_GRID_PNBP_SPAN_SIMAN[i]);
            }
            gridBanding.labelTotData.Text = "";
            gridBanding.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            gridBanding.dsDataSource = dsGridPNBPSpan;
            gridBanding.displayData();
            gridBanding.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #endregion REKAP PNBP BANDING

        #region LAPORAN PNBP SIMAN SPAN
        //parent
        AppPengguna.KSK.SIMANSPAN.ucLapSIMANSPAN ucLapSimanSpanParent;

        //tabs
        AppPengguna.KSK.SIMANSPAN.LAPSIMANSPAN.ucLapSimanDanSpan ucLapSimanDanSpan;
        AppPengguna.KSK.SIMANSPAN.LAPSIMANSPAN.ucLapSama ucLapSama;
        AppPengguna.KSK.SIMANSPAN.LAPSIMANSPAN.ucLapNonSiman ucLapNonSiman;
        AppPengguna.KSK.SIMANSPAN.LAPSIMANSPAN.ucLapNonSpan ucLapNonSpan;

        #region Tombol Rekap PNBP
        private void setEventTombolGridPNBPSimanSpan()
        {
            resetEventButtonMonWasdal();
            this.bbiMWasdalRefresh.ItemClick += new ItemClickEventHandler(this.mWlRefreshPNBPSimanSpan);
            this.bbiMWasdalMore.ItemClick += new ItemClickEventHandler(this.mWlMorePNBPSimanSpan);
            this.barMonWasdalExcel.ItemClick += new ItemClickEventHandler(this.mWlExportPNBPSimanSpan);
            this.bbiMWasdalPrint.Visibility = BarItemVisibility.Never;
            this.bbiMWasdalRefresh.Visibility = BarItemVisibility.Always;
            this.bbiMWasdalMore.Visibility = BarItemVisibility.Always;
        }

        private void mWlRefreshPNBPSimanSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = true;
            switch (ucLapSimanSpanParent.xtraTabControl1.SelectedTabPageIndex.ToString())
            {
                case "0": getInitLapRekapPnbpSpanSiman(); break;
                case "1": getInitLapSama(); break;
                case "2": getInitLapPnbpBlmRekamSiman(); break;
                case "3": getInitLapPnbpBlmRekamSpan(); break;
            }
            
        }

        private void mWlMorePNBPSimanSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.dataInisial = false;
            switch (ucLapSimanSpanParent.xtraTabControl1.SelectedTabPageIndex.ToString())
            {
                case "0": getInitLapRekapPnbpSpanSiman(); break;
                case "1": getInitLapSama(); break;
                case "2": getInitLapPnbpBlmRekamSiman(); break;
                case "3": getInitLapPnbpBlmRekamSpan(); break;
            }
        }

        private void mWlExportPNBPSimanSpan(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Excel Files (*.xls, *.xlsx)|*.xls, *.xlsx";
            DialogResult dr = sfd.ShowDialog();
            if (dr == System.Windows.Forms.DialogResult.OK)
            {
                switch (ucLapSimanSpanParent.xtraTabControl1.SelectedTabPageIndex.ToString())
                {
                    case "0":
                        ucLapSimanDanSpan.advBandedGridView1.BestFitColumns();
                        ucLapSimanDanSpan.gridControl1.ExportToXlsx(sfd.FileName);
                        break;
                    case "1": 
                        ucLapSama.gridView1.BestFitColumns();
                        ucLapSama.gridControl1.ExportToXlsx(sfd.FileName);
                        break;
                    case "2":
                        ucLapNonSiman.gridView1.BestFitColumns();
                        ucLapNonSiman.gridControl1.ExportToXlsx(sfd.FileName);
                        break;
                    case "3":
                        ucLapNonSpan.gridView1.BestFitColumns();
                        ucLapNonSpan.gridControl1.ExportToXlsx(sfd.FileName);
                        break;
                }
                
            }

        }

        #endregion Tombol Rekap PNBP

        public void perbandinganSimanSpanPanel()
        {
            ucLapSimanSpanParent = new KSK.SIMANSPAN.ucLapSIMANSPAN();

            //tab 1
            ucLapSimanDanSpan = new KSK.SIMANSPAN.LAPSIMANSPAN.ucLapSimanDanSpan();
            //ucLapSimanDanSpan.filter = new detail(getInitLapRekapPnbpSpanSiman);
            ucLapSimanDanSpan.Dock = DockStyle.Fill;
            ucLapSimanSpanParent.panelControl1.Controls.Clear();
            ucLapSimanSpanParent.panelControl1.Controls.Add(ucLapSimanDanSpan);

            //tab 1
            ucLapSama = new KSK.SIMANSPAN.LAPSIMANSPAN.ucLapSama();
            //ucLapSama.filter = new detail(getInitLapSama);
            ucLapSama.Dock = DockStyle.Fill;
            ucLapSimanSpanParent.panelControl2.Controls.Clear();
            ucLapSimanSpanParent.panelControl2.Controls.Add(ucLapSama);

            //tab 1
            ucLapNonSiman = new KSK.SIMANSPAN.LAPSIMANSPAN.ucLapNonSiman();
            //ucLapNonSiman.filter = new detail(getInitLapPnbpBlmRekamSiman);
            ucLapNonSiman.Dock = DockStyle.Fill;
            ucLapSimanSpanParent.panelControl3.Controls.Clear();
            ucLapSimanSpanParent.panelControl3.Controls.Add(ucLapNonSiman);

            //tab 1
            ucLapNonSpan = new KSK.SIMANSPAN.LAPSIMANSPAN.ucLapNonSpan();
            //ucLapNonSpan.filter = new detail(getInitLapPnbpBlmRekamSpan);
            ucLapNonSpan.Dock = DockStyle.Fill;
            ucLapSimanSpanParent.panelControl4.Controls.Clear();
            ucLapSimanSpanParent.panelControl4.Controls.Add(ucLapNonSpan);

            ucLapSimanSpanParent.Dock = DockStyle.Fill;
            setPanel(ucLapSimanSpanParent);
        }

        private void nbiSIMANSPAN_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.strMenu = "Perbandingan PNBP SIMAN dan SPAN";
            konfigApp.strSubMenu = "Perbandingan PNBP SIMAN dan SPAN";
            this.inisialisasiForm();
            rpMonitoringWasdal.Visible = true;
            ribbon.SelectedPage = rpMonitoringWasdal;
            this.dataInisial = true;
            
            setEventTombolGridPNBPSimanSpan();
            perbandinganSimanSpanPanel();

            getInitLapSama();
            getInitLapRekapPnbpSpanSiman();
            getInitLapPnbpBlmRekamSiman();
            getInitLapPnbpBlmRekamSpan();
        }

        #region --++ Ambil Data rekap LapRekapPnbpSpanSiman
        SvcLapRekapPnbpSpanSiman.OutputParameters dOutLapRekapPnbpSpanSiman;
        SvcLapRekapPnbpSpanSiman.execute_pttClient ambilLapRekapPnbpSpanSiman;

        private void getInitLapRekapPnbpSpanSiman(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbpLap1 = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapRekapPnbpSpanSiman.InputParameters parInp = new SvcLapRekapPnbpSpanSiman.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = string.Format("ID_SATKER = {0} {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbpLap1) ? "" : "AND " + cariPnbpLap1);
                ambilLapRekapPnbpSpanSiman = new SvcLapRekapPnbpSpanSiman.execute_pttClient();
                ambilLapRekapPnbpSpanSiman.Open();
                ambilLapRekapPnbpSpanSiman.Beginexecute(parInp, new AsyncCallback(getLapRekapPnbpSpanSiman), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLapRekapPnbpSpanSiman(IAsyncResult result)
        {
            try
            {
                dOutLapRekapPnbpSpanSiman = ambilLapRekapPnbpSpanSiman.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutLapRekapPnbpSpanSiman(dsOutLapRekapPnbpSpanSiman), dOutLapRekapPnbpSpanSiman);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutLapRekapPnbpSpanSiman(SvcLapRekapPnbpSpanSiman.OutputParameters dataOut);

        private void dsOutLapRekapPnbpSpanSiman(SvcLapRekapPnbpSpanSiman.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_LAP_REKAP_SPAN_SIMAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_LAP_REKAP_SPAN_SIMAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.currentMaks;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dsGridPNBPSpan.Add(dataOut.SF_LAP_REKAP_SPAN_SIMAN[i]);
            }
            ucLapSimanDanSpan.labelTotData.Text = "";
            ucLapSimanDanSpan.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            ucLapSimanDanSpan.dsDataSource = dsGridPNBPSpan;
            ucLapSimanDanSpan.displayData();
            ucLapSimanDanSpan.advBandedGridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Ambil Data rekap SPAN SIMAN sama
        SvcLapPnbpSama.OutputParameters dOutLapPnbpSama;
        SvcLapPnbpSama.execute_pttClient ambilLapPnbpSama;

        private void getInitLapSama(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbpLap2 = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapPnbpSama.InputParameters parInp = new SvcLapPnbpSama.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = string.Format("ID_SATKER = {0} {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbpLap2) ? "" : "AND " + cariPnbpLap2);
                ambilLapPnbpSama = new SvcLapPnbpSama.execute_pttClient();
                ambilLapPnbpSama.Open();
                ambilLapPnbpSama.Beginexecute(parInp, new AsyncCallback(getRekapPNBPSIMANSPAN), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getRekapPNBPSIMANSPAN(IAsyncResult result)
        {
            try
            {
                dOutLapPnbpSama = ambilLapPnbpSama.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutLapPnbpSama(dsOutLapPnbpSama), dOutLapPnbpSama);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutLapPnbpSama(SvcLapPnbpSama.OutputParameters dataOut);

        private void dsOutLapPnbpSama(SvcLapPnbpSama.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_LAP_PNBP_SAMA.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_LAP_PNBP_SAMA[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.currentMaks;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                dsGridPNBPSpan.Add(dataOut.SF_LAP_PNBP_SAMA[i]);
            }
            ucLapSama.labelTotData.Text = "";
            ucLapSama.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            ucLapSama.dsDataSource = dsGridPNBPSpan;
            ucLapSama.displayData();
            ucLapSama.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Ambil Data Lap Pnbp Blm Rekam Siman
        SvcLapPnbpBlmRekamSiman.OutputParameters dOutLapPnbpBlmRekamSiman;
        SvcLapPnbpBlmRekamSiman.execute_pttClient ambilLapPnbpBlmRekamSiman;

        private void getInitLapPnbpBlmRekamSiman(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbpLap3 = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapPnbpBlmRekamSiman.InputParameters parInp = new SvcLapPnbpBlmRekamSiman.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} AND STATUS = 'TIDAK ADA DI SIMAN'  {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbpLap3) ? "" : "AND " + cariPnbpLap3);
                ambilLapPnbpBlmRekamSiman = new SvcLapPnbpBlmRekamSiman.execute_pttClient();
                ambilLapPnbpBlmRekamSiman.Open();
                ambilLapPnbpBlmRekamSiman.Beginexecute(parInp, new AsyncCallback(getLapPnbpBlmRekamSiman), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLapPnbpBlmRekamSiman(IAsyncResult result)
        {
            try
            {
                dOutLapPnbpBlmRekamSiman = ambilLapPnbpBlmRekamSiman.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutLapPnbpBlmRekamSiman(dsOutLapPnbpBlmRekamSiman), dOutLapPnbpBlmRekamSiman);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutLapPnbpBlmRekamSiman(SvcLapPnbpBlmRekamSiman.OutputParameters dataOut);

        private void dsOutLapPnbpBlmRekamSiman(SvcLapPnbpBlmRekamSiman.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.currentMaks;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[i].TANGGAL) == "11/11/1000") dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[i].TANGGAL = null;
                if (konfigApp.DateToString(dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[i].TGL_SK) == "11/11/1000") dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[i].TGL_SK = null;
                dsGridPNBPSpan.Add(dataOut.SF_LAP_SPAN_BLMREKAM_SIMAN[i]);
            }

            ucLapNonSiman.labelTotData.Text = "";
            ucLapNonSiman.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            ucLapNonSiman.dsDataSource = dsGridPNBPSpan;
            ucLapNonSiman.displayData();
            ucLapNonSiman.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #region --++ Ambil Data Lap Pnbp Blm Rekam Span
        SvcLapPnbpBlmRekamSpan.OutputParameters dOutLapPnbpBlmRekamSpan;
        SvcLapPnbpBlmRekamSpan.execute_pttClient ambilLapPnbpBlmRekamSpan;

        private void getInitLapPnbpBlmRekamSpan(string cari = null)
        {
            this.Enabled = false;
            try
            {
                cariPnbpLap4 = cari;
                myThread = new Thread(new ThreadStart(ShowProgresBar));
                myThread.Start();
                SvcLapPnbpBlmRekamSpan.InputParameters parInp = new SvcLapPnbpBlmRekamSpan.InputParameters();
                parInp.P_COL = "";
                if (dataInisial == true)
                {
                    konfigApp.currentMaks = konfigApp.dataAkhir;
                    konfigApp.currentMin = konfigApp.dataAwal;
                }
                else
                {
                    konfigApp.currentMin = konfigApp.currentMaks + 1;
                    konfigApp.currentMaks = konfigApp.currentMaks + konfigApp.dataAkhir;
                }
                parInp.P_MAX = konfigApp.currentMaks;
                parInp.P_MAXSpecified = true;
                parInp.P_MIN = konfigApp.currentMin;
                parInp.P_MINSpecified = true;
                parInp.P_SORT = "";
                parInp.P_COUNT = "Y";
                parInp.STR_WHERE = String.Format("ID_SATKER = {0} AND STATUS = 'TIDAK ADA DI SPAN'  {1}", konfigApp.idSatker, string.IsNullOrEmpty(cariPnbpLap4) ? "" : "AND " + cariPnbpLap4);
                ambilLapPnbpBlmRekamSpan = new SvcLapPnbpBlmRekamSpan.execute_pttClient();
                ambilLapPnbpBlmRekamSpan.Open();
                ambilLapPnbpBlmRekamSpan.Beginexecute(parInp, new AsyncCallback(getLapPnbpBlmRekamSpan), "");
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private void getLapPnbpBlmRekamSpan(IAsyncResult result)
        {
            try
            {
                dOutLapPnbpBlmRekamSpan = ambilLapPnbpBlmRekamSpan.Endexecute(result);
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                this.Invoke(new DsOutLapPnbpBlmRekamSpan(dsOutLapPnbpBlmRekamSpan), dOutLapPnbpBlmRekamSpan);
            }
            catch
            {
                this.Invoke(new ProgBar(this.progBar), BarItemVisibility.Never);
                this.Invoke(new AktifkanForm(this.aktifkanForm), "");
                MessageBox.Show(konfigApp.teksGagalAmbil, konfigApp.judulGagalAmbil);
            }
        }

        private delegate void DsOutLapPnbpBlmRekamSpan(SvcLapPnbpBlmRekamSpan.OutputParameters dataOut);

        private void dsOutLapPnbpBlmRekamSpan(SvcLapPnbpBlmRekamSpan.OutputParameters dataOut)
        {
            int jmlDataKl = dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN.Count();
            decimal jmlCurrent = 0;
            string totalData = (jmlDataKl == 0) ? jmlDataKl.ToString() : dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[jmlDataKl - 1].TOTAL_DATA.ToString();
            if (jmlDataKl == konfigApp.dataAkhir)
            {
                this.masihAdaData = true;
                bbiMWasdalMore.Enabled = true;
                jmlCurrent = konfigApp.currentMaks;
            }
            else
            {
                this.masihAdaData = false;
                bbiMWasdalMore.Enabled = false;
                if (jmlDataKl > konfigApp.dataAkhir)
                    jmlCurrent = konfigApp.dataAkhir;
                else
                    jmlCurrent = jmlDataKl;
            }

            if (dataInisial == true)
            {
                dsGridPNBPSpan = new ArrayList();
            }
            for (int i = 0; i < jmlDataKl; i++)
            {
                if (konfigApp.DateToString(dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[i].TANGGAL) == "11/11/1000") dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[i].TANGGAL = null;
                if (konfigApp.DateToString(dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[i].TGL_SK) == "11/11/1000") dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[i].TGL_SK = null;
                dsGridPNBPSpan.Add(dataOut.SF_LAP_SIMAN_BLMREKAM_SPAN[i]);
            }

            ucLapNonSpan.labelTotData.Text = "";
            ucLapNonSpan.labelTotData.Text = "Menampilkan " + jmlCurrent.ToString() + " dari total " + totalData + " data";
            ucLapNonSpan.dsDataSource = dsGridPNBPSpan;
            ucLapNonSpan.displayData();
            ucLapNonSpan.gridView1.BestFitColumns();
        }
        #endregion Ambil Bongkaran

        #endregion REKAP PERBANDINGAN PNBP SIMAN SPAN

        #endregion PERBANDINGAN PNBP SIMAN DAN SPAN

        #region Pengelolaan
        private void nbiKelPsp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "02";
            setPengelolaanView();
        }

        private void nbiKelPspBmnLain_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "03";
            setPengelolaanView();
        }

        private void nbiKelAsp_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "04";
            setPengelolaanView();
        }

        private void nbiKelPbmns_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "05";
            setPengelolaanView();
        }

        private void nbiKelSewa_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "06";
            setPengelolaanView();
        }

        private void nbiKelPP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "07";
            setPengelolaanView();
        }

        private void nbiKelKerjasama_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "08";
            setPengelolaanView();
        }

        private void nbiKelKSPI_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "09";
            setPengelolaanView();
        }

        private void nbiBgsBsg_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "10";
            setPengelolaanView();
        }

        private void nbiKelPenjualan_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "11";
            setPengelolaanView();
        }

        private void nbiKelTukar_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "12";
            setPengelolaanView();
        }

        private void nbiKelHibah_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "13";
            setPengelolaanView();
        }

        private void nbiKelPMP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "14";
            setPengelolaanView();
        }

        private void nbiKelMusnah_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "15";
            setPengelolaanView();
        }

        private void nbiKelPBKPP_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "16";
            setPengelolaanView();
        }

        private void nbiKelPBKSL_LinkClicked(object sender, DevExpress.XtraNavBar.NavBarLinkEventArgs e)
        {
            konfigApp.kdPelayanan = "17";
            setPengelolaanView();
        }


        public bool isMain = true;
        KEL.ucMainGrid mainKelola;
        KEL.ucDetailGrid detailKelola;
        public void setPengelolaanView()
        {
            isMain = true;
            inisialisasiForm();
            ribbon.SelectedPage = rpKelola;
            bbiKelKembali.Visibility = BarItemVisibility.Never;
            bbiKelDetail.Visibility = BarItemVisibility.Always;
            setEventTombolPengelolaan();
            mainKelola = new KEL.ucMainGrid()
            {
                Dock = DockStyle.Fill,
                dataInisial = true,
                detail = new detailPengelolaan(btnKelDetail)
            };
            setPanel(mainKelola);
            mainKelola.load();
        }

        private void setEventTombolPengelolaan()
        {
            konfigApp.RemoveClickEvent(bbiKelRefresh);
            konfigApp.RemoveClickEvent(bbiKelMore);
            konfigApp.RemoveClickEvent(bbiKelDetail);
            konfigApp.RemoveClickEvent(bbiKelKembali);
            this.bbiKelRefresh.ItemClick += new ItemClickEventHandler(this.btnKelRefresh);
            this.bbiKelMore.ItemClick += new ItemClickEventHandler(this.btnKelMore);
            this.bbiKelDetail.ItemClick += new ItemClickEventHandler(this.btnKelDetail);
            this.bbiKelKembali.ItemClick += new ItemClickEventHandler(this.btnKelKembali);
        }

        #region Tombol Pengelolaan
        private void btnKelRefresh(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (isMain)
            {
                mainKelola.dataInisial = true;
                mainKelola.load();
            }
            else
            {
                if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpPilihAset)
                {
                    detailKelola.pilihAset.dataInisial = true;
                    detailKelola.pilihAset.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpSuratPermohonan)
                {
                    detailKelola.suratPermohonan.dataInisial = true;
                    detailKelola.suratPermohonan.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpKelengkapanDokumen)
                {
                    detailKelola.kelengkapanDokumen.dataInisial = true;
                    detailKelola.kelengkapanDokumen.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpDokumenAnalisis)
                {
                    detailKelola.dokumenAnalisis.dataInisial = true;
                    detailKelola.dokumenAnalisis.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpWaktuPenyelesaian)
                {
                    detailKelola.agenda.dataInisial = true;
                    detailKelola.agenda.load();

                    detailKelola.faktorPengurang.dataInisial = true;
                    detailKelola.faktorPengurang.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpNotifikasi)
                {
                    detailKelola.notifEmail.dataInisial = true;
                    detailKelola.notifEmail.load();
                }
            }
        }

        private void btnKelMore(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (isMain)
            {
                mainKelola.dataInisial = false;
                mainKelola.load();
            }
            else
            {
                if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpPilihAset)
                {
                    detailKelola.pilihAset.dataInisial = false;
                    detailKelola.pilihAset.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpSuratPermohonan)
                {
                    detailKelola.suratPermohonan.dataInisial = false;
                    detailKelola.suratPermohonan.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpKelengkapanDokumen)
                {
                    detailKelola.kelengkapanDokumen.dataInisial = false;
                    detailKelola.kelengkapanDokumen.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpDokumenAnalisis)
                {
                    detailKelola.dokumenAnalisis.dataInisial = false;
                    detailKelola.dokumenAnalisis.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpWaktuPenyelesaian)
                {
                    detailKelola.agenda.dataInisial = false;
                    detailKelola.agenda.load();

                    detailKelola.faktorPengurang.dataInisial = false;
                    detailKelola.faktorPengurang.load();
                }
                else if (detailKelola.xtcDetail.SelectedTabPage == detailKelola.xtpNotifikasi)
                {
                    detailKelola.notifEmail.dataInisial = false;
                    detailKelola.notifEmail.load();
                }
            }
        }

        private void btnKelKembali(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            setPengelolaanView();
        }

        private void btnKelDetail(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            isMain = false;
            bbiKelKembali.Visibility = BarItemVisibility.Always;
            bbiKelDetail.Visibility = BarItemVisibility.Never;
            detailKelola = new KEL.ucDetailGrid()
            {
                Dock = DockStyle.Fill,
                dataterpilih = mainKelola.dataTerpilih
            };
            setPanel(detailKelola);
            detailKelola.inisialisasiForm();
        }

        #endregion Tombol Rekap PNBP

        #endregion Pengelolaan

    } 
}